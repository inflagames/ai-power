{"version":3,"file":"main.js","mappings":"yBACO,MAAMA,EAAe,EAAI,EACnBC,EAAe,KACfC,EAAgBD,IAQhBE,EAAc,IAIdC,EAAiB,IAQjBC,EAAgB,KAChBC,EAAc,KCxBZ,MAAMC,EACnB,WAAAC,GAEEC,KAAKC,cAAgB,GACrBD,KAAKE,MAAO,CACd,CAKA,IAAAC,CAAKC,EAAO,CAAC,GACX,IAAK,IAAIC,EAAI,EAAGA,EAAIL,KAAKC,cAAcK,OAAQD,IAC7CL,KAAKO,aAAaP,KAAKC,cAAcI,GAAID,EAE7C,CAEA,kBAAMG,CAAaC,EAAMJ,GACvBI,EAAKJ,EACP,CAMA,IAAAK,IAAQC,GACN,IAAIC,EAAYX,KAChB,IAAK,MAAMQ,KAAQE,EAAW,CAC5B,MAAME,EAAS,IAAId,EACnBa,EAAUE,IAAIT,GAASI,EAAKJ,EAAMQ,KAClCD,EAAYC,CACd,CACA,OAAOD,CACT,CAKA,KAAAG,CAAMN,GACJR,KAAKC,cAAgBD,KAAKC,cAAcc,QAAQC,GAAMA,IAAMR,GAC9D,CAKA,EAAAK,CAAGL,GACDR,KAAKC,cAAcgB,KAAKT,EAC1B,EChCa,MAAMU,EAQnB,WAAAnB,CAAYoB,EAAcC,EAAI,EAAGC,EAAI,EAAGC,EAAQ,EAAGC,EAAS,GAC1DvB,KAAKwB,QAAU,IAAI1B,EAEnBE,KAAKmB,aAAeA,EACpBnB,KAAKoB,EAAIA,EACTpB,KAAKqB,EAAIA,EACTrB,KAAKsB,MAAQA,EACbtB,KAAKuB,OAASA,EACdvB,KAAKyB,kBAAoB,KACzBzB,KAAK0B,cAAe,EAGpB1B,KAAK2B,GAAqB,IAAhBC,KAAKC,QACjB,CAEA,gBAAIV,CAAaW,GACf9B,KAAK+B,cAAgBD,EAAQA,EAAMrB,KDehC,SAAmBuB,GACxB,IAAIC,GAAe,EACnB,MAAMC,EAAiB,KACrBD,GAAe,EACfD,EAAQlB,MAAMoB,EAAe,EAG/B,OADAF,EAAQnB,GAAGqB,GACJ,CAAC9B,EAAiC+B,KACnCF,IACFE,EAAWlC,cAAgB,IAE7BkC,EAAWhC,KAAKC,EAAK,CAEzB,CC5B4CgC,CAAUpC,KAAKwB,UAAYM,CACrE,CAEA,gBAAIX,GACF,OAAOnB,KAAK+B,aACd,CAKA,MAAAM,CAAOC,GACP,CAOA,aAAAC,CAAcC,EAAOC,GDgBhB,IAA0BjC,ECf7BR,KAAKmB,aACFV,MDc0BD,ECdHJ,GAASA,EAAKoC,QAAUA,EDe7C,CAACpC,EAAiC+B,KACnC3B,EAAKJ,IACP+B,EAAWhC,KAAKC,EAClB,ICjBGS,IAAIT,KAEAA,GACCJ,KAAK0C,8BAA8BtC,EAAKuC,SAAUvC,EAAKoC,QACzDxC,KAAK4C,iCAAiCxC,EAAKoC,SAE3CC,EAASrC,EACX,GAEN,CAEA,gCAAAwC,CAAiCJ,GAC/B,OACEA,IAAU5C,GACV4C,IAAU3C,GFnDc,MEoDxB2C,CAEJ,CAOA,6BAAAE,CAA8BC,EAAUH,GACtC,MFlEyB,MEmEvBA,GACAA,IAAU7C,GFlEiB,MEmE3B6C,GFvE0B,MEwE1BA,IAKAxC,KAAK6C,iBAAiB7C,KAAKyB,qBAC1BzB,KAAK6C,iBAAiBF,IAEvB3C,KAAKmB,aAAahB,KAAK,CAAEqC,MAAO7C,IAElCK,KAAKyB,kBAAoBkB,EACjB3C,KAAK0B,aAAe1B,KAAK6C,iBAAiBF,GACpD,CAEA,gBAAAE,CAAiBF,GACf,OACEA,GACAA,EAASvB,GAAKpB,KAAKoB,GACnBuB,EAASvB,GAAKpB,KAAKoB,EAAIpB,KAAKsB,OAC5BqB,EAAStB,GAAKrB,KAAKqB,GACnBsB,EAAStB,GAAKrB,KAAKqB,EAAIrB,KAAKuB,MAEhC,EC5Ga,MAAMuB,UAAc5B,EAKjC,WAAAnB,CAAYgD,EAAW5B,GACrB6B,MAAM7B,GACNnB,KAAK+C,UAAYA,EACjB/C,KAAKiD,gBAAkB,OAEvBjD,KAAKkD,SAAW,EAClB,CAKA,MAAAb,CAAOC,GACLtC,KAAKmD,YAAYb,GAEjB,IAAK,MAAMc,KAAWpD,KAAKkD,SACzBE,EAAQf,OAAOC,EAEnB,CAKA,WAAAa,CAAYb,GACVA,EAAQe,KAAK,EAAG,EAAGrD,KAAKsB,MAAOtB,KAAKuB,QACpCe,EAAQgB,UAAYtD,KAAKiD,gBACzBX,EAAQiB,MACV,CAOA,wBAAAC,CAAyBb,EAAUH,GACjC,MAAMiB,EAAaT,MAAMQ,yBAAyBb,EAAUH,GAC5D,GAAIiB,EACF,IAAK,MAAMC,KAAK1D,KAAKkD,SACnB,GAAIQ,EAAEF,yBAAyBb,EAAUH,GACvC,OAAO,EAIb,OAAOiB,CACT,ECIK,SAASE,EAAyBC,EAAQC,EAAOC,GACtD,MAAMC,EASD,SAAsBH,EAAQE,GACnC,MAAO,CACL1C,EAAGwC,EAAOxC,EAAIQ,KAAKoC,IAAIF,GAAOF,EAAOvC,EAAIO,KAAKqC,IAAIH,GAClDzC,EAAGuC,EAAOxC,EAAIQ,KAAKqC,IAAIH,GAAOF,EAAOvC,EAAIO,KAAKoC,IAAIF,GAEtD,CAdiBI,CAAaN,EAAQE,GACpC,MAAO,CAAE1C,EAAGyC,EAAMzC,EAAI2C,EAAO3C,EAAGC,EAAGwC,EAAMxC,EAAI0C,EAAO1C,EACtD,CA2BO,SAAS8C,EAAMrC,GACpB,OAAQA,EAAQsC,OAAOC,aAAgB7E,CACzC,CAEO,SAAS8E,EAAQxC,GACtB,OAAQA,EAAQtC,EAAgB4E,OAAOC,YACzC,CAgBO,SAASE,EAAgBC,EAAQC,GACtC,GAAID,EAAOlE,OAAS,GAAKmE,EAAOnE,OAAS,EACvC,OAAO,EAET,MAAMoE,EAAO,IAAIC,EAAYH,MAAYG,EAAYF,IAErD,IAAK,MAAMG,KAAOF,EAAM,CACtB,MAAMG,EAAKC,EAAgBN,EAAQI,GAC7BG,EAAKD,EAAgBL,EAAQG,GACnC,KAEKC,EAAGG,IAAMD,EAAGC,KAAOH,EAAGG,IAAMD,EAAGE,KAC/BJ,EAAGI,IAAMF,EAAGC,KAAOH,EAAGI,IAAMF,EAAGE,KAC/BF,EAAGC,IAAMH,EAAGG,KAAOD,EAAGC,IAAMH,EAAGI,KAC/BF,EAAGE,IAAMJ,EAAGG,KAAOD,EAAGE,IAAMJ,EAAGI,KAC/BJ,EAAGG,MAAQD,EAAGC,KAAOH,EAAGI,MAAQF,EAAGE,KAGtC,OAAO,CAEX,CAEA,OAAO,CACT,CAOO,SAASC,EAAgBC,GAC9B,GAAY,IAARA,EAAE/D,GAAmB,IAAR+D,EAAE9D,EACjB,MAAO,CAAED,EAAG,EAAGC,EAAG,GAEpB,MAAMf,EAASsB,KAAKwD,KAAKD,EAAE/D,EAAI+D,EAAE/D,EAAI+D,EAAE9D,EAAI8D,EAAE9D,GAC7C,MAAO,CAAED,EAAG+D,EAAE/D,EAAId,EAAQe,EAAG8D,EAAE9D,EAAIf,EACrC,CAoBA,SAASqE,EAAYU,GACnB,GAAIA,EAAM/E,QAAU,EAClB,MAAO,GAET,MAAMoE,EAAO,GACb,IAAK,IAAIrE,EAAI,EAAGA,EAAIgF,EAAM/E,OAAQD,IAChCqE,EAAKzD,KAAK,CACRG,EAAGiE,EAAMhF,GAAGe,EAAIiE,EAAMhF,EAAI,GAAGe,EAC7BC,EAAGgE,EAAMhF,EAAI,GAAGgB,EAAIgE,EAAMhF,GAAGgB,IAOjC,OAJAqD,EAAKzD,KAAK,CACRG,EAAGiE,EAAM,GAAGjE,EAAIiE,EAAMA,EAAM/E,OAAS,GAAGc,EACxCC,EAAGgE,EAAMA,EAAM/E,OAAS,GAAGe,EAAIgE,EAAM,GAAGhE,IAEnCqD,CACT,CAOA,SAASI,EAAgBO,EAAOF,GAC9B,IAAIH,EAAMM,EAAWH,EAAGE,EAAM,IAC1BJ,EAAMD,EACV,IAAK,IAAI3E,EAAI,EAAGA,EAAIgF,EAAM/E,OAAQD,IAAK,CACrC,MAAMkF,EAAID,EAAWH,EAAGE,EAAMhF,IAC9B2E,EAAMpD,KAAKoD,IAAIA,EAAKO,GACpBN,EAAMrD,KAAKqD,IAAIA,EAAKM,EACtB,CACA,MAAO,CAAEP,MAAKC,MAChB,CAOA,SAASK,EAAWH,EAAGK,GACrB,OAAQA,EAAEpE,EAAI+D,EAAE/D,EAAIoE,EAAEnE,EAAI8D,EAAE9D,IAAM8D,EAAE/D,EAAI+D,EAAE/D,EAAI+D,EAAE9D,EAAI8D,EAAE9D,EACxD,CCxMe,MAAMoE,UAAkBvE,EAQrC,WAAAnB,CAAYoB,EAAcC,EAAI,EAAGC,EAAI,EAAGC,EAAQ,EAAGC,EAAS,GAC1DyB,MAAM7B,EAAcC,EAAGC,EAAGC,EAAOC,GACjCvB,KAAKiD,gBAAkB,OACvBjD,KAAK0F,SAAW,EAChB1F,KAAK2F,gBAAkB,CAAEvE,EAAG,EAAGC,EAAG,GAClCrB,KAAK4F,WAAa,EAClB5F,KAAK6F,YAAc,IACrB,CAEA,iBAAAC,CAAkB1E,EAAGC,GACnBrB,KAAKoB,EAAIA,GAAKpB,KAAKoB,EACnBpB,KAAKqB,EAAIA,GAAKrB,KAAKqB,CACrB,CAEA,MAAAgB,CAAOC,GAEL,MAAMyD,EAAS/F,KAAKgG,gBAEpB,IAAK,MAAMX,KAASU,EAAQ,CAC1B,MAAME,EAASZ,EAAMY,OACrB,GAAsB,IAAlBA,EAAO3F,OAAX,CAGAgC,EAAQ4D,YACR5D,EAAQ6D,OAAOhC,EAAM8B,EAAO,GAAG7E,GAAI+C,EAAM8B,EAAO,GAAG5E,IACnD,IAAK,IAAIhB,EAAI,EAAGA,EAAI4F,EAAO3F,OAAQD,IACjCiC,EAAQ8D,OAAOjC,EAAM8B,EAAO5F,GAAGe,GAAI+C,EAAM8B,EAAO5F,GAAGgB,IAErDiB,EAAQ+D,YACR/D,EAAQgB,UAAY+B,EAAMiB,WACrBtG,KAAK6F,aACRvD,EAAQiE,SAEVjE,EAAQiB,MAXR,CAYF,CACF,CAEA,OAAAiD,GACExG,KAAKyG,iBACP,CAEA,WAAAC,GACE,MAAMX,EAAS/F,KAAK2G,YAAYZ,OAEhC/F,KAAK6F,YAAc,CAAEE,OAAQ,IAG7B,IAAK,MAAMV,KAASU,EAClB/F,KAAK6F,YAAc,CACjBE,OAAQ,IAAI/F,KAAK6F,YAAYE,UAAW/F,KAAK4G,WAAWvB,KAK5D,IAAK,MAAMA,KAASrF,KAAK6F,YAAYE,OAAQ,CAC3C,MAAMc,EAAK7G,KAAK8G,YAAYzB,EAAMY,QAE5Bc,GADInF,KAAKC,SAAW,IACPD,KAAKwD,KAAKxD,KAAKoF,IAAIH,EAAGzF,EAAG,GAAKQ,KAAKoF,IAAIH,EAAGxF,EAAG,IAChEgE,EAAMzB,OAAS,CAAExC,EAAGyF,EAAGzF,EAAI2F,EAAQ1F,EAAGwF,EAAGxF,EAAI0F,EAC/C,CACF,CAMA,UAAAH,CAAWvB,GACT,GAA4B,IAAxBA,EAAMY,OAAO3F,OACf,OAAO+E,EAAMY,OAEf,MAAM,IAAEjB,EAAG,IAAEC,GAAQjF,KAAKiH,SAAS5B,EAAMY,QAInCiB,EAAY,GAClB,IAAIC,EAAQvF,KAAKwF,MAAOnC,EAAI7D,EAAI4D,EAAI5D,IAAM6D,EAAI5D,EAAI2D,EAAI3D,GAHpC,GAIlB8F,EAAQvF,KAAKoD,IAAImC,EAAO,KAExB,IAAK,IAAI9G,EAAI,EAAGA,EAAI8G,EAAO9G,IAAK,CAC9B,MAAMgH,EAAM,CACVjG,GAAI6D,EAAI7D,EAAI4D,EAAI5D,GAAKQ,KAAKC,SAAWmD,EAAI5D,EACzCC,GAAI4D,EAAI5D,EAAI2D,EAAI3D,GAAKO,KAAKC,SAAWmD,EAAI3D,GAE3C6F,EAAUjG,KAAK,CACbgF,OAAQ,IAAIqB,MAAM,GAAG/D,KAAK,MAAMgE,KAAI,KAAM,CACxCnG,EAAGiG,EAAIjG,EAZA,IAYWQ,KAAKC,SACvBR,EAAGgG,EAAIhG,EAbA,IAaWO,KAAKC,aAEzByE,WAAYjB,EAAMiB,YAEtB,CAEA,OAAOY,CACT,CAKA,WAAAJ,CAAYb,GACV,MAAM,IAAEjB,EAAG,IAAEC,GAAQjF,KAAKiH,SAAShB,GACnC,MAAO,CAAE7E,GAAI6D,EAAI7D,EAAI4D,EAAI5D,GAAK,EAAGC,GAAI4D,EAAI5D,EAAI2D,EAAI3D,GAAK,EACxD,CAEA,QAAA4F,CAAShB,GACP,MAAMjB,EAAM,CAAE5D,EAAG6E,EAAO,GAAG7E,EAAGC,EAAG4E,EAAO,GAAG5E,GACrC4D,EAAM,IAAKD,GACjB,IAAK,IAAI3E,EAAI,EAAGA,EAAI4F,EAAO3F,OAAQD,IACjC2E,EAAI5D,EAAIQ,KAAKoD,IAAIA,EAAI5D,EAAG6E,EAAO5F,GAAGe,GAClC4D,EAAI3D,EAAIO,KAAKoD,IAAIA,EAAI3D,EAAG4E,EAAO5F,GAAGgB,GAClC4D,EAAI7D,EAAIQ,KAAKqD,IAAIA,EAAI7D,EAAG6E,EAAO5F,GAAGe,GAClC6D,EAAI5D,EAAIO,KAAKqD,IAAIA,EAAI5D,EAAG4E,EAAO5F,GAAGgB,GAEpC,MAAO,CAAE2D,MAAKC,MAChB,CAEA,eAAAwB,GACE,GAAIzG,KAAK6F,YACP,IAAK,MAAMR,KAASrF,KAAK6F,YAAYE,OACnCV,EAAMY,OAASZ,EAAMY,OAAOsB,KAAKhC,IAAM,CACrCnE,EAAGmE,EAAEnE,EAAIiE,EAAMzB,OAAOxC,EACtBC,EAAGkE,EAAElE,EAAIgE,EAAMzB,OAAOvC,MAExBgE,EAAMiB,WAAatG,KAAKwH,cAAcnC,EAAMiB,WAAY,GAG9D,CAOA,aAAAkB,CAAcC,EAAOC,GACnB,IAAIC,EAAQ3H,KAAK4H,WAAWH,GAG5B,OAFAE,EAAQ/F,KAAKoD,IAAI,IAAKpD,KAAKqD,IAAI0C,EAAQD,EAAS,IAChDC,EAAQA,EAAME,SAAS,IAChB,IAAIJ,EAAMK,OAAO,EAAG,MAAMH,EAAMrH,OAAS,EAAI,IAAM,IAAMqH,GAClE,CAMA,UAAAC,CAAWH,GACT,OAAOA,EAAMnH,OAAS,EAAIyH,SAASN,EAAMK,OAAO,EAAG,GAAI,IAAM,GAC/D,CAKA,aAAA9B,GAEE,MAAMN,GD5JoB9B,EC4JK5D,KAAK2F,gBD3J/B/D,KAAKoG,MAAMpE,EAAOvC,EAAGuC,EAAOxC,GC2JsBQ,KAAKqG,GAAK,GD5J9D,IAAuBrE,EC8J1B,MAAMmC,EAAS/F,KAAK2G,YAAYZ,OAC1BlC,EAAQ,CAAEzC,EAAGpB,KAAKoB,EAAGC,EAAGrB,KAAKqB,GAE7B6G,EAAiB,GAEvB,IAAK,MAAM7C,KAASU,EAAQ,CAC1B,MAAME,EAASZ,EAAMY,OAAOsB,KAAKhC,IAAM,CACrCnE,EAAGmE,EAAEnE,EAAIpB,KAAK4F,WACdvE,EAAGkE,EAAElE,EAAIrB,KAAK4F,eAEhB,IAAK,IAAIvF,EAAI,EAAGA,EAAI4F,EAAO3F,OAAQD,IACjC4F,EAAO5F,GAAKsD,EAAyBsC,EAAO5F,GAAIwD,EAAO6B,GAEzDwC,EAAejH,KAAK,IAAKoE,EAAOY,UAClC,CACA,OAAOiC,CACT,CAKA,SAAAvB,GACE,MAAO,CACLZ,OAAQ,GAEZ,E,2pCC3La,MAAMoC,UAAe1C,EAQlC,WAAA1F,CAAYoB,EAAcC,EAAI,EAAGC,EAAI,EAAGC,EAAQ,EAAGC,EAAS,GAC1DyB,MAAM7B,EAAcC,EAAGC,EAAGC,EAAOC,GAEjCvB,KAAK0F,SAAW9D,KAAKqG,GAAK,EAC1BjI,KAAK2F,gBAAkB,CAAEvE,EAAG,EAAGC,EAAG,GAClCrB,KAAK4F,WAAa,EAClB5F,KAAKqF,MAAQ,EAEbrF,KAAK8F,mBACP,CAOA,iBAAAA,EAAkB,EAAE1E,EAAC,EAAEC,GAAM,CAAC,GAC5BrB,KAAKoB,EAAIA,GAAKpB,KAAKoB,EACnBpB,KAAKqB,EAAIA,GAAKrB,KAAKqB,CACrB,CAMA,qBAAA+G,CAAsBjD,GACpBnF,KAAK2F,gBAAkBR,CACzB,CAEA,OAAAqB,GACExD,MAAMwD,SACR,CAEA,SAAAG,GACE,OAAO3G,KAAK6F,aAAe7F,KAAKqF,KAClC,EC3Ca,MAAMgD,UAAcnH,EAMjC,WAAAnB,CAAYoB,EAAcC,EAAGC,GAC3B2B,MAAM7B,EAAcC,EAAGC,GACvBrB,KAAKsI,MAAQ,EACbtI,KAAKuI,SAAW,GAChBvI,KAAKiD,gBAAkB,OACvBjD,KAAKwI,UAAY,OAEjBxI,KAAKyI,SAAW,CAClB,CAKA,MAAApG,CAAOC,GACLA,EAAQoG,KAAO,GAAGvE,EAAMnE,KAAKuI,oBAC7B,MAAMI,EAAUrG,EAAQsG,YAAY5I,KAAKsI,MAAQ,IAC3CO,EAAYF,EAAQrH,MACpBwH,EACJH,EAAQI,wBAA0BJ,EAAQK,yBAG5C1G,EAAQ4D,YACR5D,EAAQe,KACNc,EAAMnE,KAAKoB,EAAIyH,EAAYI,IAC3B9E,EAAMnE,KAAKqB,GACX8C,EAAM0E,EAAYI,IAClB9E,EAAM2E,EAAaG,KAErB3G,EAAQgB,UAAYtD,KAAKiD,gBACzBX,EAAQiB,OAERjB,EAAQ4D,YACR5D,EAAQoG,KAAO,GAAGvE,EAAMnE,KAAKuI,oBAC7BjG,EAAQgB,UAAYtD,KAAKwI,UACzBlG,EAAQ4G,SACNlJ,KAAKsI,MAAQ,GACbnE,EAAMnE,KAAKoB,EAAIyH,EAjBD,GAkBd1E,EAAMnE,KAAKqB,EAAIyH,EAlBD,GAoBlB,EC5Ca,MAAMK,UAAejI,EASlC,WAAAnB,CAAYoB,EAAcC,EAAGC,EAAGC,EAAOC,EAAQ6H,GAC7CpG,MAAM7B,EAAcC,EAAGC,EAAGC,EAAOC,GACjCvB,KAAKoJ,KAAOA,EACZpJ,KAAKuI,SAAW,GAChBvI,KAAKiD,gBAAkB,OACvBjD,KAAKwI,UAAY,OACjBxI,KAAKqJ,eAAiB,UAEtBrJ,KAAKuC,cRPsB,KQOUnC,IAC/BJ,KAAK6C,iBAAiBzC,EAAKuC,YAC7B2G,SAASC,KAAKC,MAAMC,OAAS,UAC/B,IAEFzJ,KAAKuC,cAAc5C,GAAiBS,IAClCkJ,SAASC,KAAKC,MAAMC,OAAS,SAAS,GAE1C,CAKA,MAAApH,CAAOC,GACLA,EAAQ4D,YACR5D,EAAQe,KACNc,EAAMnE,KAAKoB,GACX+C,EAAMnE,KAAKqB,GACX8C,EAAMnE,KAAKsB,OACX6C,EAAMnE,KAAKuB,SAEbe,EAAQgB,UAAYtD,KAAKiD,gBACzBX,EAAQiB,OAERjB,EAAQ4D,YACR5D,EAAQoG,KAAO,GAAGvE,EAAMnE,KAAKuI,oBAC7B,MAAMI,EAAUrG,EAAQsG,YAAY5I,KAAKoJ,MACnCP,EAAYvE,EAAQqE,EAAQrH,OAC5BwH,EAAaxE,EACjBqE,EAAQI,wBAA0BJ,EAAQK,0BAE5C1G,EAAQgB,UAAYtD,KAAK0B,aACrB1B,KAAKqJ,eACLrJ,KAAKwI,UAETlG,EAAQ4G,SACNlJ,KAAKoJ,KACLjF,EAAMnE,KAAKoB,EAAIpB,KAAKsB,MAAQ,EAAIuH,EAAY,GAC5C1E,EAAMnE,KAAKqB,EAAIrB,KAAKuB,OAAS,EAAIuH,EAAa,GAElD,ECxDa,MAAMY,UAAcxI,EAQjC,WAAAnB,CAAYoB,EAAcC,EAAGC,EAAGC,EAAOC,GACrCyB,MAAM7B,EAAcC,EAAGC,EAAGC,EAAOC,GACjCvB,KAAKiD,gBAAkB,OACvBjD,KAAKuI,SAAW,GAChBvI,KAAK2J,UAAY,GACjB3J,KAAKoJ,KAAO,SACZpJ,KAAKsI,MAAQ,IAEb,MAGMsB,EAAe,GAErB5J,KAAK6J,cACH7J,KAAKoB,EAAIwI,EACT5J,KAAKqB,EANc,GADA,IAWrBrB,KAAK8J,iBACH9J,KAAKoB,GAAKpB,KAAKsB,MAXI,GACA,IAUkCsI,GAAgB,EACrE5J,KAAKqB,EAAIrB,KAAKuB,OAbK,GAamBqI,EAZnB,GADA,IAiBrB5J,KAAK+J,kBACH/J,KAAKoB,GACFpB,KAAKsB,MAlBW,GACA,IAiB2BsI,GAAgB,EAlB3C,GAoBjBA,EACF5J,KAAKqB,EAAIrB,KAAKuB,OAtBK,GAsBmBqI,EApBnB,IAFA,GA0BvB,CAEA,gBAAAE,CAAiB1I,EAAGC,EAAG2I,EAAGC,GACxBjK,KAAKkK,WAAa,IAAIf,EAAOnJ,KAAKmB,aAAcC,EAAGC,EAAG2I,EAAGC,EAAG,OAC9D,CAEA,aAAAJ,CAAczI,EAAGC,EAAG2I,EAAGC,GACrBjK,KAAKmK,cAAgB,IAAIhB,EAAOnJ,KAAKmB,aAAcC,EAAGC,EAAG2I,EAAGC,EAAG,aAC/DjK,KAAKmK,cAAclH,gBAAkB,YACrCjD,KAAKmK,cAAc3B,UAAY,OAC/BxI,KAAKmK,cAAcd,eAAiB,UACpCrJ,KAAKmK,cAAc5H,cAAc7C,GAAa,IAC5C0E,OAAOlE,KAAK,+BAAgC,UAAUkK,SAE1D,CAEA,iBAAAL,CAAkB3I,EAAGC,EAAG2I,EAAGC,GACzBjK,KAAKqK,kBAAoB,IAAIlB,EAC3BnJ,KAAKmB,aACLC,EACAC,EACA2I,EACAC,EACA,oBAEFjK,KAAKqK,kBAAkB9H,cAAc7C,GAAa,KAChD,MACM4K,EAAM,yCADI,6CAA6CtK,KAAKsI,kSAElElE,OAAOlE,KAAKoK,EAAK,UAAUF,OAAO,GAEtC,CAKA,MAAA/H,CAAOC,GACLA,EAAQ4D,YACR5D,EAAQe,KAAK,EAAG,EAAGc,EAAM3E,GAAe2E,EAAM1E,IAC9C6C,EAAQgB,UAAY,mBACpBhB,EAAQiB,OAERjB,EAAQ4D,YACR5D,EAAQe,KACNc,EAAMnE,KAAKoB,GACX+C,EAAMnE,KAAKqB,GACX8C,EAAMnE,KAAKsB,OACX6C,EAAMnE,KAAKuB,SAEbe,EAAQgB,UAAYtD,KAAKiD,gBACzBX,EAAQiB,OAERvD,KAAKkK,WAAW7H,OAAOC,GACvBtC,KAAKmK,cAAc9H,OAAOC,GAC1BtC,KAAKqK,kBAAkBhI,OAAOC,GAE9BtC,KAAKuK,YAAYjI,EACnB,CAKA,WAAAiI,CAAYjI,GAEVA,EAAQ4D,YACR5D,EAAQoG,KAAO,GAAGvE,EAAMnE,KAAKuI,oBAC7B,MAAMI,EAAUrG,EAAQsG,YAAY5I,KAAKsI,MAAQ,IAC3CO,EAAYvE,EAAQqE,EAAQrH,OAC5BwH,EAAaxE,EACjBqE,EAAQI,wBAA0BJ,EAAQK,0BAE5C1G,EAAQgB,UAAY,OACpBhB,EAAQ4G,SACNlJ,KAAKsI,MAAQ,GACbnE,EAAMnE,KAAKoB,EAAIpB,KAAKsB,MAAQ,EAAIuH,EAAY,GAC5C1E,EAAMnE,KAAKqB,EAAIrB,KAAKuB,OAAS,EAAIuH,EAAa,IAGhDxG,EAAQ4D,YACR5D,EAAQoG,KAAO,GAAGvE,EAAMnE,KAAK2J,qBAC7B,MAAMa,EAAWlI,EAAQsG,YAAY5I,KAAKoJ,MACpCqB,EAAanG,EAAQkG,EAASlJ,OAC9BoJ,EAAcpG,EAClBkG,EAASzB,wBAA0ByB,EAASxB,0BAE9C1G,EAAQgB,UAAY,OACpBhB,EAAQ4G,SACNlJ,KAAKoJ,KACLjF,EAAMnE,KAAKoB,EAAIpB,KAAKsB,MAAQ,EAAImJ,EAAa,GAC7CtG,EACEnE,KAAKqB,EACHrB,KAAKuB,OAAS,EACduH,EAAa,EACbA,EACA4B,EAAc,GAGtB,EC/IF,MACMC,EAAY,qBAGlB,IAAIvK,EAAO,KAEI,MAAMwK,EACnB,kBAAOC,GAIL,OAHKzK,IACHA,EAAO,IAAIwK,GAENxK,CACT,CAKA,SAAA0K,CAAUxC,GACRyC,aAAaC,QAAQL,EAAWrC,EAAQ,GAC1C,CAEA,QAAA2C,GACE,MAAM3C,EAAQyC,aAAaG,QAAQP,GACnC,OAAOrC,GAASA,EAAQ,CAC1B,ECxBK,MAAM6C,EAAiB,CAC5BC,QAAS,WACP,OAAOrI,UAAUsI,UAAUC,MAAM,WACnC,EACAC,WAAY,WACV,OAAOxI,UAAUsI,UAAUC,MAAM,cACnC,EACAE,IAAK,WACH,OAAOzI,UAAUsI,UAAUC,MAAM,oBACnC,EACAG,MAAO,WACL,OAAO1I,UAAUsI,UAAUC,MAAM,cACnC,EACAI,QAAS,WACP,OACE3I,UAAUsI,UAAUC,MAAM,cAC1BvI,UAAUsI,UAAUC,MAAM,aAE9B,EACAK,IAAK,WACH,OACER,EAAeC,WACfD,EAAeI,cACfJ,EAAeK,OACfL,EAAeM,SACfN,EAAeO,SAEnB,GCpBa,MAAME,EACnB,WAAA7L,GAEEC,KAAK6L,WAAa,EACpB,CAEA,KAAAC,GACE9L,KAAK6L,WAAa,EACpB,CAKA,MAAAE,CAAOC,GACDhM,KAAKiM,eAAeD,KAAShM,KAAK6L,WAAWK,SAASF,IACxDhM,KAAK6L,WAAW5K,KAAK+K,EAEzB,CAKA,SAAAG,CAAUH,GACRhM,KAAK6L,WAAa7L,KAAK6L,WAAW9K,QAAQqL,GAAMA,IAAMJ,GACxD,CAMA,cAAAC,CAAeD,GACb,MAAe,MAARA,GAAuB,MAARA,GAAuB,MAARA,GAAuB,MAARA,CACtD,CAMA,cAAAK,GACE,OAAOrM,KAAK6L,WAAWvL,OAAS,CAClC,CAKA,eAAAqF,GACE,IAAI2G,EAAe,CAAElL,EAAG,EAAGC,EAAG,GAG9B,MAAMkL,EAAYvM,KAAKuM,YAgBvB,OAtEwB,EAwDnBA,EACHD,EAAajL,GAAK,EAxDM,EAyDdkL,IACVD,EAAajL,EAAI,GAzDO,EA4DrBkL,EACHD,EAAalL,GAAK,EA5DO,EA6DfmL,IACVD,EAAalL,EAAI,GAKZ8D,EAAgBoH,EACzB,CAEA,SAAAC,GACE,IAAIC,EAAM,EAEV,GAAIxM,KAAK6L,WAAWvL,OAAS,EAAG,CAC9BkM,EAAMxM,KAAKyM,aAAazM,KAAK6L,WAAW,IACxC,IAAIlJ,EAAW,EACf,KAAOA,EAAW3C,KAAK6L,WAAWvL,QAAQ,CACxC,IAAIoM,EAAI1M,KAAK2M,qBAhFO,EAEE,EACC,EAiFrBH,EACAxM,KAAKyM,aAAazM,KAAK6L,WAAWlJ,KAwBpC,GAtBA+J,GAAK1M,KAAK2M,qBAtFY,EACA,EACC,EAwFrBH,EACAxM,KAAKyM,aAAazM,KAAK6L,WAAWlJ,KAEpC+J,GAAK1M,KAAK2M,qBA5FY,EAFF,EACE,EAiGpBH,EACAxM,KAAKyM,aAAazM,KAAK6L,WAAWlJ,KAEpC+J,GAAK1M,KAAK2M,qBAlGa,EAHH,EACE,EAwGpBH,EACAxM,KAAKyM,aAAazM,KAAK6L,WAAWlJ,KAGhC+J,EAAG,CACLF,GAAOE,EACP,KACF,CAEA/J,GACF,CACF,CAEA,OAAO6J,CACT,CAEA,oBAAAG,CAAqBH,EAAKI,EAAQC,EAAQC,EAAYC,GACpD,OAAIP,IAAQM,GAAeC,IAAYH,GAAUG,IAAYF,EAGtD,EAFEE,CAGX,CAMA,YAAAN,CAAaT,GACX,MAAY,MAARA,EArIoB,EAwIZ,MAARA,EAvIsB,EA0Id,MAARA,EAzIsB,EA4Id,MAARA,EA3IuB,EA8IpB,CACT,EC5Ia,MAAMgB,EACnB,WAAAjN,GAEEC,KAAKsI,MAAQ,KAEbtI,KAAKiN,KAAO,EAGZjN,KAAKkN,cAAgB,IAAItB,EAEzB5L,KAAKmN,OAAS,CACZxK,SAAU,CACRvB,EAAG5B,IACH6B,EAAG5B,KAELiG,SAAU9D,KAAKqG,GAAK,EACpBtC,gBAAiB,CAAEvE,EAAG,EAAGC,EAAG,GAC5B+L,iBAAkB,EAClBC,SAAU,EACVC,YAAa,GACbC,aAAc,GACdC,cAAe,IACfC,OAAQ,CA1BI,KA2BZC,eAAWC,GAEb3N,KAAK4N,QAAU,GACf5N,KAAK6N,QAAU,GAEf7N,KAAK8N,QAAU,CAAC,CAClB,CAEA,OAAAtM,GACExB,KAAK4N,QAAQG,SAASC,GAAUA,EAAMN,UAAUlM,QAAQrB,SACxDH,KAAK6N,QAAQE,SAASE,GAAQA,EAAIP,UAAUlM,QAAQrB,SACpDH,KAAKmN,OAAOO,UAAUlM,QAAQrB,MAChC,CAKA,IAAA+N,GACElO,KAAKmO,aACLnO,KAAKoO,mBACP,CAKA,UAAAD,GAGE,GAAInO,KAAKkN,cAAcb,iBAAkB,CACvC,MAAMgC,GT2FeC,ES3FEtO,KAAKmN,OAAOxH,gBT2FV4I,ES3F2BvO,KAAKkN,cAAcvH,kBT2F1C6I,ES3F6D,IT4FvF,CACLpN,EAAGkN,EAAGlN,GAAKmN,EAAGnN,EAAIkN,EAAGlN,GAAKoN,EAC1BnN,EAAGiN,EAAGjN,GAAKkN,EAAGlN,EAAIiN,EAAGjN,GAAKmN,IS7FxBxO,KAAKmN,OAAOxH,iBT5Ca/B,ES4CoBsB,EAAgBmJ,GT5C5BI,ESwClB,GTvCZ,CAAErN,EAAGwC,EAAOxC,EAAIqN,EAAQpN,EAAGuC,EAAOvC,EAAIoN,IS4CzCzO,KAAKmN,OAAOxK,STnCX,SAAoB2L,EAAIC,GAC7B,MAAO,CAAEnN,EAAGkN,EAAGlN,EAAImN,EAAGnN,EAAGC,EAAGiN,EAAGjN,EAAIkN,EAAGlN,EACxC,CSiC6BqN,CAAW1O,KAAKmN,OAAOxH,gBAAiB3F,KAAKmN,OAAOxK,SAC7E,CT9CG,IAAwBiB,EAAQ6K,EAsIZH,EAAIC,EAAIC,EStF/BxO,KAAKmN,OAAOO,UAAU5H,kBAAkB9F,KAAKmN,OAAOxK,UACpD3C,KAAKmN,OAAOO,UAAUtF,sBAAsB,IAAKpI,KAAKmN,OAAOxH,gBAAiBtE,GAAIrB,KAAKmN,OAAOxH,gBAAgBtE,GAEhH,CAEA,YAAAsN,GAEE,OAAO,CACT,CAEA,iBAAAP,GAIA,CAEA,KAAAQ,GAEA,CAEA,OAAAC,GAEA,CAEA,YAAAC,GAEA,CAEA,WAAAC,GAEA,CAKA,QAAA9D,GAEA,CAEA,cAAA+D,GAEA,CAOA,2BAAAC,CAA4BC,EAASC,GACnC,IAAK,MAAMC,KAAMF,EACf,IAAK,MAAMG,KAAMF,EACf,GAAI5K,EAAgB6K,EAAGnJ,OAAQoJ,EAAGpJ,QAChC,OAAO,EAIb,OAAO,CACT,ECvHa,MAAMqJ,UAAcpO,EASjC,WAAAnB,CACEoB,EACAC,EAAI,EACJC,EAAI,EACJC,EAAQ,EACRC,EAAS,EACT+E,EAAa,IAEbtD,MAAM7B,EAAcC,EAAGC,EAAGC,EAAOC,GACjCvB,KAAKiD,gBAAkBqD,CACzB,CAEA,MAAAjE,CAAOC,GACDtC,KAAKiD,kBACPX,EAAQ4D,YACR5D,EAAQgB,UAAYtD,KAAKiD,gBACzBX,EAAQe,KAAK,EAAG,EAAGc,EAAMnE,KAAKsB,OAAQ6C,EAAMnE,KAAKuB,SACjDe,EAAQiB,OAEZ,ECbsB4H,EAAeQ,MAIxB,MAAM4D,UAAkBzM,EAKrC,WAAA/C,CAAYgD,EAAW5B,GACrB6B,MAAMD,EAAW5B,GAEjBnB,KAAKwP,YAAc,IAAIrG,EACrBnJ,KAAKmB,aAXU,MAcf,GACA,GACA,SAEFnB,KAAKwP,YAAYjH,SAAW,GAC5BvI,KAAKwP,YAAYjN,cAAc7C,GAAa,KACtCM,KAAKyP,YAAYd,iBACnB3O,KAAKyP,YAAYb,QACjB5O,KAAK0P,UAAU9E,EAAKC,cAAcI,YAAY,GAChD,IAGFjL,KAAKuC,cAAc3C,EAAeI,KAAK2P,QAAQC,KAAK5P,OACpDA,KAAKuC,cAAc1C,EAAaG,KAAK6P,MAAMD,KAAK5P,OAEhDA,KAAK8P,UACP,CAEA,QAAAA,GACE9P,KAAK+P,aAAc,EAGf/P,KAAKyP,aACPzP,KAAKyP,YAAYjO,UAEnBxB,KAAKyP,YAAc,IAAIzC,EAGvBhN,KAAKmN,OAAS,IAAIhF,EAChBnI,KAAKmB,aACL3B,IACAC,IACA,GACA,IAEFO,KAAKyP,YAAYtC,OAAOO,UAAY1N,KAAKmN,OAGzCnN,KAAKgQ,MAAQ,IAAIV,EACftP,KAAKmB,aACL,EACA,EACA3B,EACAC,EACA,QAIF,MAAM6I,EAAQ,IAAID,EAChBrI,KAAKmB,aACL3B,KAhEe,IAmEjBQ,KAAKyP,YAAYnH,MAAQA,EAGzBtI,KAAKkD,SAAW,CAAClD,KAAKmN,OAAQnN,KAAKwP,aACnCxP,KAAKkD,SAASjC,KAAKqH,GAGnBtI,KAAKiQ,iBAAmB,CAACjQ,KAAKmN,OAChC,CAKA,MAAA9K,CAAOC,GAELtC,KAAKyP,YAAYvB,OAGjBlO,KAAKmD,YAAYb,GAEjBtC,KAAKkQ,+BAA+B5N,GAGpC,IAAK,MAAMc,KAAWpD,KAAKkD,SACzBE,EAAQf,OAAOC,EAEnB,CAEA,OAAAqN,CAAQnN,GACNxC,KAAKyP,YAAYvC,cAAcnB,OAAOvJ,EAAMwJ,IAC9C,CAEA,KAAA6D,CAAMrN,GACJxC,KAAKyP,YAAYvC,cAAcf,UAAU3J,EAAMwJ,IACjD,CAEA,SAAA0D,CAAUpH,EAAO6H,GAAc,GAC7B,IAAKnQ,KAAK+P,YAAa,CACrB/P,KAAK+P,aAAc,EACnB,MAAMK,EAAa,IACbC,EAAc,IACdC,EAAQ,IAAI5G,EAChB1J,KAAKmB,aACL3B,IAAmB4Q,EAAa,EAChC3Q,IAAoB2Q,EAAa,EACjCA,EACAC,GAEFzF,EAAKC,cAAcC,UACjBlJ,KAAKqD,IAAI2F,EAAKC,cAAcI,WAAY3C,IAE1CgI,EAAMhI,MAAQA,EACdgI,EAAMpG,WAAW3H,cf9HM,Ke8HuB,KAC5C+N,EAAMpG,WAAW1I,QAAQrB,OACzBmQ,EAAMjG,kBAAkB7I,QAAQrB,OAChCmQ,EAAMnG,cAAc3I,QAAQrB,OAC5BH,KAAKyP,YAAYZ,UACjB7O,KAAKkD,SAASqN,MACdvQ,KAAK+P,aAAc,EACfI,GACFnQ,KAAK8P,UACP,IAEF9P,KAAKkD,SAASjC,KAAKqP,EACrB,CACF,CAEA,8BAAAJ,CAA+B5N,GAC7B,MAAMkO,EAAW,IAAIC,IACrB,IAAK,MAAMrN,KAAWpD,KAAKiQ,iBACrBjQ,KAAK0Q,iBAAiBtN,GACxBA,EAAQf,OAAOC,GAEfkO,EAASG,IAAIvN,EAAQzB,IAGzB3B,KAAKiQ,iBAAmBjQ,KAAKiQ,iBAAiBlP,QAC3C6P,IAASJ,EAASK,IAAID,EAAIjP,KAE/B,CAEA,gBAAA+O,CAAiBtN,GACf,OAAOA,EAAQ/B,EAAqB,EAAjB+B,EAAQ7B,OAAa9B,CAC1C,CAEA,WAAA0D,CAAYb,GACVtC,KAAKgQ,MAAM3N,OAAOC,EACpB,ECrKa,MAAMwO,EAKnB,WAAA/Q,CAAYgR,EAAO5P,GACjBnB,KAAKgR,UAAYxR,EACjBQ,KAAKiR,UAAYzR,IACjBQ,KAAKkR,aAAe,IAAIC,IACxBnR,KAAKkR,aAAaE,IhBSI,EgBTY7B,GAClCvP,KAAKqR,gBAAkB,IAAIF,IAE3BnR,KAAKsR,aAAe,KACpBnQ,EAAaN,IAAIT,IACfJ,KAAKsR,aAAanQ,aAAahB,KAAKC,GhBFd,MgBGlBA,EAAKoC,OAA0BpC,EAAKmR,YACtCvR,KAAKgR,UAAY5Q,EAAKmR,UAAUvH,EAChChK,KAAKiR,UAAY7Q,EAAKmR,UAAUtH,EAChCjK,KAAKwR,uBACP,IAIFxR,KAAKyR,SAASV,EAChB,CAMA,QAAAU,CAASV,GACH/Q,KAAKqR,gBAAgBR,IAAIE,GAC3B/Q,KAAKsR,aAAetR,KAAKqR,gBAAgBK,IAAIX,GACpC/Q,KAAKkR,aAAaL,IAAIE,KAC/B/Q,KAAKqR,gBAAgBD,IACnBL,EACA,IAAK/Q,KAAKkR,aAAaQ,IAAIX,GAA3B,CAAmC/Q,KAAM,IAAIF,IAE/CE,KAAKsR,aAAetR,KAAKqR,gBAAgBK,IAAIX,IAE/C/Q,KAAKwR,sBACP,CAEA,oBAAAA,GACMxR,KAAKsR,eACPtR,KAAKsR,aAAahQ,MAAQtB,KAAKgR,UAC/BhR,KAAKsR,aAAa/P,OAASvB,KAAKiR,UAEpC,EC/BF,MAAMU,EAAoB,IjBGP,GiBDnB,IAAIC,EAAe,KAEJ,MAAMC,EACnB,WAAA9R,GACEqE,OAAO0N,iBAAiB,SAAU9R,KAAK+R,aAAanC,KAAK5P,OAGzDA,KAAKgS,OAAS1I,SAAS2I,eAAe,QAEtCjS,KAAKkS,iBAGLlS,KAAKmB,aAAe,IAAIrB,EAGxBE,KAAKsC,QAAUtC,KAAKgS,OAAOG,WAAW,MAGtCnS,KAAKoS,cAAgB,IAAItB,EjBnBH,EiBmByB9Q,KAAKmB,cAEpDnB,KAAKqS,WjBxCW,EiByChBrS,KAAKyI,SAAW,EAChBzI,KAAKsB,MAAQtB,KAAKgS,OAAO1Q,MACzBtB,KAAKuB,OAASvB,KAAKgS,OAAOzQ,OAE1BvB,KAAK+R,cACP,CAEA,cAAAG,GAEElS,KAAKsS,sBAAsB,UAAW1S,GACtCI,KAAKsS,sBAAsB,QAASzS,GACpCG,KAAKsS,sBAAsB,WjBtCD,KiByC1BtS,KAAKuS,mBAAmB,QAAS7S,GACjCM,KAAKuS,mBAAmB,YjBpDG,KiBqD3BvS,KAAKuS,mBAAmB,UjBpDC,KiBqDzBvS,KAAKuS,mBAAmB,WAAY5S,GACpCK,KAAKuS,mBAAmB,ajBnDI,KiBoD5BvS,KAAKuS,mBAAmB,YjBtDG,KiByD3BvS,KAAKwS,mBAAmB,ajBtDG,KiBsD4B,GACvDxS,KAAKwS,mBAAmB,WjBtDC,KiBsD0B,GACnDxS,KAAKwS,mBAAmB,cjBrDK,KiBqD6B,GAC1DxS,KAAKwS,mBAAmB,YjBvDG,KiBuD2B,EACxD,CAOA,kBAAAD,CAAmBE,EAAMC,EAAWC,OAAShF,GAC3C3N,KAAKgS,OAAOF,iBACVW,GACC/O,GAAM1D,KAAK4S,WAAWlP,EAAGgP,IAC1BC,EAEJ,CAOA,kBAAAH,CAAmBC,EAAMC,EAAWC,OAAShF,GAC3C3N,KAAKgS,OAAOF,iBACVW,GACC/O,GAAM1D,KAAK6S,WAAWnP,EAAGgP,IAC1BC,EAEJ,CAOA,qBAAAL,CAAsBG,EAAMC,EAAWC,OAAShF,GAC9CrE,SAASwI,iBACPW,GACC/O,GAAM1D,KAAK8S,cAAcpP,EAAGgP,IAC7BC,EAEJ,CAEA,YAAAZ,GACE,MAAMzQ,EAAQ8C,OAAO2O,WACfxR,EAAS6C,OAAO4O,YAEtB,IAAIC,EAAkBrR,KAAKoD,IAAIxF,EAAc8B,GACzC4R,EAAmBD,EAAkB1T,EAErC2T,EAAmB3R,IACrB2R,EAAmB3R,EACnB0R,EAAkB1R,EAAShC,GAG7BS,KAAKgS,OAAO1Q,MAAQ2R,EACpBjT,KAAKgS,OAAOzQ,OAAS2R,EAErB9O,OAAOC,aAAe4O,EACtBjT,KAAKmB,aAAahB,KAAK,CACrBqC,MjBhHsB,IiBiHtB+O,UAAW,CAAEvH,EAAGiJ,EAAiBhJ,EAAGiJ,IAExC,CAMA,UAAAL,CAAWrQ,EAAOiQ,GAChBzS,KAAKmT,kBACH,CACE/R,EAAGoB,GAAO4Q,cAAc,IAAIC,MAC5BhS,EAAGmB,GAAO4Q,cAAc,IAAIE,OAE9Bb,EAEJ,CAMA,UAAAG,CAAWpQ,EAAOiQ,GAChBzS,KAAKmT,kBAAkB,CAAE/R,EAAGoB,GAAO+Q,QAASlS,EAAGmB,GAAOgR,SAAWf,EACnE,CAMA,aAAAK,CAActQ,EAAOiQ,GACnBzS,KAAKmB,aAAahB,KAAK,CACrBqC,MAAOiQ,EACPzG,IAAKxJ,EAAMwJ,KAEf,CAMA,iBAAAmH,CAAkBxQ,EAAU8P,GAC1B,MAAMpP,EAAOrD,KAAKgS,OAAOyB,wBACzBzT,KAAKmB,aAAahB,KAAK,CACrBqC,MAAOiQ,EACP9P,SAAU,CACRvB,EAAGkD,EAAQ3B,EAASvB,EAAIiC,EAAKqQ,MAC7BrS,EAAGiD,EAAQ3B,EAAStB,EAAIgC,EAAKsQ,OAGnC,CAMA,kBAAO9I,GAIL,OAHK+G,IACHA,EAAe,IAAIC,GAEdD,CACT,CAKA,IAAAgC,GACE5T,KAAKqS,WjBnMc,EiBoMnBwB,sBAAsB7T,KAAK8T,KAAKlE,KAAK5P,MACvC,CAMA,IAAA8T,CAAKC,GjB3MgB,IiB4Mf/T,KAAKqS,ajB5MU,IiB8MfrS,KAAKqS,YACLV,GAAqBoC,EAAc/T,KAAKyI,WAExCzI,KAAKyI,SAAWsL,EAEhB/T,KAAKoS,cAAcd,aAAajP,OAAOrC,KAAKsC,UAG9CuR,sBAAsB7T,KAAK8T,KAAKlE,KAAK5P,OAGzC,EC7NF6R,EAAKhH,cAAc+I,M","sources":["webpack:///./game/utils/variables.js","webpack:///./game/utils/observable.js","webpack:///./game/components/shared/base-object.js","webpack:///./game/scenes/shared/scene.js","webpack:///./game/utils/math.js","webpack:///./game/components/shared/base-shape.js","webpack:///./game/components/player.js","webpack:///./game/components/score.js","webpack:///./game/components/button.js","webpack:///./game/components/modal.js","webpack:///./game/utils/data.js","webpack:///./game/utils/mobile-device.js","webpack:///./game/scenes/shared/direction-keys.js","webpack:///./game/scenes/shared/game.logic.js","webpack:///./game/components/level.js","webpack:///./game/scenes/play.scene.js","webpack:///./game/navigator.js","webpack:///./game/game.js","webpack:///./main.js"],"sourcesContent":["// game dimensions\nexport const SCREEN_RATIO = 3 / 4;\nexport const SCREEN_WIDTH = 1024;\nexport const SCREEN_HEIGHT = SCREEN_WIDTH * SCREEN_RATIO;\n\n// game status\nexport const RUNNING = 1;\nexport const PAUSE = 2;\nexport const STOP = 3;\n\n// game events\nexport const EVENT_CLICK = \"0\";\nexport const EVENT_MOUSEDOWN = \"1\";\nexport const EVENT_MOUSEUP = \"2\";\nexport const EVENT_MOUSEMOVE = \"3\";\nexport const EVENT_MOUSEOUT = \"8\";\nexport const EVENT_MOUSELEAVE = \"9\";\nexport const EVENT_TOUCHDOWN = \"4\";\nexport const EVENT_TOUCHUP = \"5\";\nexport const EVENT_TOUCHMOVE = \"6\";\nexport const EVENT_TOUCHCANCEL = \"7\";\nexport const EVENT_RESIZE = \"8\";\nexport const EVENT_KEYPRESS = \"9\";\nexport const EVENT_KEYDOWN = \"10\";\nexport const EVENT_KEYUP = \"11\";\n\n// scene values\nexport const SCENE_GAME = 1;\n\nexport const FPS = 30;\n","export default class Observable {\n  constructor() {\n    /** @member {function[]} */\n    this.subscriptions = [];\n    this.open = true;\n  }\n\n  /**\n   * @param data {Object}\n   */\n  emit(data = {}) {\n    for (let i = 0; i < this.subscriptions.length; i++) {\n      this.callFunction(this.subscriptions[i], data);\n    }\n  }\n\n  async callFunction(func, data) {\n    func(data);\n  }\n\n  /**\n   * @param functions {function}\n   * @return {Observable}\n   */\n  pipe(...functions) {\n    let lastSteam = this;\n    for (const func of functions) {\n      const stream = new Observable();\n      lastSteam.on((data) => func(data, stream));\n      lastSteam = stream;\n    }\n    return lastSteam;\n  }\n\n  /**\n   * @param func {function}\n   */\n  unsub(func) {\n    this.subscriptions = this.subscriptions.filter((f) => f !== func);\n  }\n\n  /**\n   * @param func {function}\n   */\n  on(func) {\n    this.subscriptions.push(func);\n  }\n}\n\n/**\n * Filter the value of an Observable\n * @param stopper {Observable}\n */\nexport function takeUntil(stopper) {\n  let streamCancel = false;\n  const cancelFunction = () => {\n    streamCancel = true;\n    stopper.unsub(cancelFunction);\n  };\n  stopper.on(cancelFunction);\n  return (data, /** @param {Observable} */ observable) => {\n    if (streamCancel) {\n      observable.subscriptions = [];\n    }\n    observable.emit(data);\n  };\n}\n\n/**\n * Filter the value of an Observable\n * @param func {function}\n */\nexport function filterObservable(func) {\n  return (data, /** @param {Observable} */ observable) => {\n    if (func(data)) {\n      observable.emit(data);\n    }\n  };\n}\n\n/**\n * The value of the observable can be mapped and returned with transformations\n * @param func {function}\n */\nexport function mapObservable(func) {\n  return (data, /** @param {Observable} */ observable) => {\n    observable.emit(func(data));\n  };\n}\n","import Observable, {\n  filterObservable,\n  takeUntil,\n} from \"../../utils/observable\";\nimport {\n  EVENT_KEYDOWN,\n  EVENT_KEYPRESS,\n  EVENT_KEYUP,\n  EVENT_MOUSELEAVE,\n  EVENT_MOUSEOUT,\n  EVENT_TOUCHCANCEL,\n  EVENT_TOUCHUP,\n} from \"../../utils/variables\";\n\nexport default class BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    this.destroy = new Observable();\n    /** @member {Observable} */\n    this.eventEmitter = eventEmitter;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.lastMousePosition = null;\n    this.isMouseHover = false;\n\n    // toDo guille 27.08.21: improve this random value to be unique\n    this.id = Math.random() * 1000000;\n  }\n\n  set eventEmitter(value) {\n    this._eventEmitter = value ? value.pipe(takeUntil(this.destroy)) : value;\n  }\n\n  get eventEmitter() {\n    return this._eventEmitter;\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n  }\n\n  /**\n   * Event listener\n   * @param event {string}\n   * @param callback {function}\n   */\n  listenerEvent(event, callback) {\n    this.eventEmitter\n      .pipe(filterObservable((data) => data.event === event))\n      .on((data) => {\n        if (\n          (data &&\n            this.validateMouseEventPropagation(data.position, data.event)) ||\n          this.validateKeyboardEventPropagation(data.event)\n        ) {\n          callback(data);\n        }\n      });\n  }\n\n  validateKeyboardEventPropagation(event) {\n    return (\n      event === EVENT_KEYDOWN ||\n      event === EVENT_KEYUP ||\n      event === EVENT_KEYPRESS\n    );\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   * @param event {string}\n   * @return {boolean}\n   */\n  validateMouseEventPropagation(position, event) {\n    if (\n      event === EVENT_TOUCHUP ||\n      event === EVENT_MOUSEOUT ||\n      event === EVENT_TOUCHCANCEL ||\n      event === EVENT_MOUSELEAVE\n    ) {\n      return true;\n    }\n    if (\n      this.isPositionInside(this.lastMousePosition) &&\n      !this.isPositionInside(position)\n    ) {\n      this.eventEmitter.emit({ event: EVENT_MOUSEOUT });\n    }\n    this.lastMousePosition = position;\n    return (this.isMouseHover = this.isPositionInside(position));\n  }\n\n  isPositionInside(position) {\n    return (\n      position &&\n      position.x >= this.x &&\n      position.x <= this.x + this.width &&\n      position.y >= this.y &&\n      position.y <= this.y + this.height\n    );\n  }\n}\n","import BaseObject from \"../../components/shared/base-object\";\n\nexport default class Scene extends BaseObject {\n  /**\n   * @param navigator {Navigator}\n   * @param eventEmitter {Observable}\n   */\n  constructor(navigator, eventEmitter) {\n    super(eventEmitter);\n    this.navigator = navigator;\n    this.backgroundColor = \"#f00\";\n    /** @member {BaseObject[]} */\n    this.elements = [];\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    this.cleanCanvas(context);\n    // render scene elements\n    for (const element of this.elements) {\n      element.render(context);\n    }\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  cleanCanvas(context) {\n    context.rect(0, 0, this.width, this.height);\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   * @param event {string}\n   * @return {boolean}\n   */\n  validateEventPropagation(position, event) {\n    const validation = super.validateEventPropagation(position, event);\n    if (validation) {\n      for (const e of this.elements) {\n        if (e.validateEventPropagation(position, event)) {\n          return false;\n        }\n      }\n    }\n    return validation;\n  }\n}\n","import { SCREEN_WIDTH } from \"./variables\";\n\n/**\n * Vector to angle conversion\n * @param vector {{x: number, y: number}}\n * @returns {number}\n */\nexport function vectorToAngle(vector) {\n  return Math.atan2(vector.y, vector.x);\n}\n\n/**\n * Multiply a vector by a scalar\n * @param vector {{x: number, y: number}}\n * @param scalar {number}\n * @returns {{x: number, y: number}}\n */\nexport function multiplyVector(vector, scalar) {\n  return { x: vector.x * scalar, y: vector.y * scalar };\n}\n\n/**\n * Add two vectors\n * @param v1 {{x: number, y: number}}\n * @param v2 {{x: number, y: number}}\n * @returns {{x: number, y: number}}\n */\nexport function addVectors(v1, v2) {\n  return { x: v1.x + v2.x, y: v1.y + v2.y };\n}\n\n/**\n * @param maxValue {number}\n * @param currentValue {number}\n */\nexport function linearFunction(maxValue, currentValue) {\n  return Math.min(currentValue / maxValue, 1);\n}\n\n/**\n * @param maxValue {number}\n * @param currentValue {number}\n */\nexport function logFunction(maxValue, currentValue) {\n  const x = (9 * currentValue) / maxValue + 1;\n  return Math.min(Math.log10(x), 1);\n}\n\n/**\n * @param vector {{x: number, y: number}}\n * @param pivot {{x: number, y: number}}\n * @param phi {number}\n * @return {{x: number, y: number}}\n */\nexport function getPointByVectorRotation(vector, pivot, phi) {\n  const result = rotateVector(vector, phi);\n  return { x: pivot.x + result.x, y: pivot.y - result.y };\n}\n\n/**\n * @param vector {{x: number, y: number}}\n * @param phi {number}\n * @return {{x: number, y: number}}\n */\nexport function rotateVector(vector, phi) {\n  return {\n    x: vector.x * Math.cos(phi) - vector.y * Math.sin(phi),\n    y: vector.x * Math.sin(phi) + vector.y * Math.cos(phi)\n  };\n}\n\nexport function getVector(p1, p2) {\n  return { x: p2.x - p1.x, y: p2.y - p1.y };\n}\n\nexport function distance(p1, p2) {\n  // toDo guille 31.08.21: maybe it can be improved (check it)\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\n/**\n * @param value {number}\n * @return {number}\n */\nexport function scale(value) {\n  return (value * window.currentWidth) / SCREEN_WIDTH;\n}\n\nexport function unscale(value) {\n  return (value * SCREEN_WIDTH) / window.currentWidth;\n}\n\n/**\n * @param limit {number}\n * @param start {number}\n * @returns {number}\n */\nexport function randomNumber(limit, start = 0) {\n  return Math.floor(Math.random() * limit) + start;\n}\n\n/**\n * @param shape1 {{x: number, y: number}[]}\n * @param shape2 {{x: number, y: number}[]}\n * @return {boolean}\n */\nexport function detectCollision(shape1, shape2) {\n  if (shape1.length < 3 || shape2.length < 3) {\n    return false;\n  }\n  const axis = [...extractAxis(shape1), ...extractAxis(shape2)];\n\n  for (const axi of axis) {\n    const p1 = shapeProjection(shape1, axi);\n    const p2 = shapeProjection(shape2, axi);\n    if (\n      !(\n        (p1.min > p2.min && p1.min < p2.max) ||\n        (p1.max > p2.min && p1.max < p2.max) ||\n        (p2.min > p1.min && p2.min < p1.max) ||\n        (p2.max > p1.min && p2.max < p1.max) ||\n        (p1.min === p2.min && p1.max === p2.max)\n      )\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Normalize a vector\n * @param v {{x: number, y: number}}\n * @returns {{x: number, y: number}}\n */\nexport function normalizeVector(v) {\n  if (v.x === 0 && v.y === 0) {\n    return { x: 0, y: 0 };\n  }\n  const length = Math.sqrt(v.x * v.x + v.y * v.y);\n  return { x: v.x / length, y: v.y / length };\n}\n\n/**\n * Linear interpolation between two vectors\n * @param v1 {{x: number, y: number}}\n * @param v2 {{x: number, y: number}}\n * @param t {number}\n * @returns {{x: number, y: number}}\n */\nexport function lerpVector(v1, v2, t) {\n  return {\n    x: v1.x + (v2.x - v1.x) * t,\n    y: v1.y + (v2.y - v1.y) * t\n  };\n}\n\n/**\n * @param shape {{x: number, y: number}[]}\n * @return {{x: number, y: number}[]}\n */\nfunction extractAxis(shape) {\n  if (shape.length <= 1) {\n    return [];\n  }\n  const axis = [];\n  for (let i = 1; i < shape.length; i++) {\n    axis.push({\n      x: shape[i].x - shape[i - 1].x,\n      y: shape[i - 1].y - shape[i].y\n    });\n  }\n  axis.push({\n    x: shape[0].x - shape[shape.length - 1].x,\n    y: shape[shape.length - 1].y - shape[0].y\n  });\n  return axis;\n}\n\n/**\n * @param shape {{x: number, y: number}[]}\n * @param v {{x: number, y: number}}\n * @return {{max: number, min: number}}\n */\nfunction shapeProjection(shape, v) {\n  let min = projection(v, shape[0]);\n  let max = min;\n  for (let i = 1; i < shape.length; i++) {\n    const p = projection(v, shape[i]);\n    min = Math.min(min, p);\n    max = Math.max(max, p);\n  }\n  return { min, max };\n}\n\n/**\n * @param v {{x: number, y: number}}\n * @param u {{x: number, y: number}}\n * @return {number}\n */\nfunction projection(v, u) {\n  return (u.x * v.x + u.y * v.y) / (v.x * v.x + v.y * v.y);\n}\n","import BaseObject from \"./base-object\";\nimport { getPointByVectorRotation, scale, vectorToAngle } from \"../../utils/math\";\n\nexport default class BaseShape extends BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = \"#00f\";\n    this.rotation = 0;\n    this.directionVector = { x: 1, y: 0 };\n    this.scaleShape = 4;\n    this.brakedShape = null;\n  }\n\n  updateCoordinates(x, y) {\n    this.x = x || this.x;\n    this.y = y || this.y;\n  }\n\n  render(context) {\n    // ship painted\n    const shapes = this.getProjection();\n\n    for (const shape of shapes) {\n      const points = shape.points;\n      if (points.length === 0) {\n        continue;\n      }\n      context.beginPath();\n      context.moveTo(scale(points[0].x), scale(points[0].y));\n      for (let i = 1; i < points.length; i++) {\n        context.lineTo(scale(points[i].x), scale(points[i].y));\n      }\n      context.closePath();\n      context.fillStyle = shape.background;\n      if (!this.brakedShape) {\n        context.stroke();\n      }\n      context.fill();\n    }\n  }\n\n  animate() {\n    this.moveBrakedPiece();\n  }\n\n  brakeShapes() {\n    const shapes = this.shipShape().shapes;\n\n    this.brakedShape = { shapes: [] };\n\n    // brake in triangles\n    for (const shape of shapes) {\n      this.brakedShape = {\n        shapes: [...this.brakedShape.shapes, ...this.brakeShape(shape)],\n      };\n    }\n\n    // calculate direction vector\n    for (const shape of this.brakedShape.shapes) {\n      const cp = this.shapeCenter(shape.points);\n      const d = Math.random() + 0.5;\n      const factor = d / Math.sqrt(Math.pow(cp.x, 2) + Math.pow(cp.y, 2));\n      shape.vector = { x: cp.x * factor, y: cp.y * factor };\n    }\n  }\n\n  /**\n   * @param shape {{points: {x: number, y: number}[], background: string}}\n   * @return {{x: number, y: number}[]}\n   */\n  brakeShape(shape) {\n    if (shape.points.length === 0) {\n      return shape.points;\n    }\n    const { min, max } = this.coverBox(shape.points);\n\n    const fixedSize = 2;\n    const size = 2.5;\n    const newShapes = [];\n    let count = Math.ceil(((max.x - min.x) * (max.y - min.y)) / fixedSize);\n    count = Math.min(count, 150);\n\n    for (let i = 0; i < count; i++) {\n      const pos = {\n        x: (max.x - min.x) * Math.random() + min.x,\n        y: (max.y - min.y) * Math.random() + min.y,\n      };\n      newShapes.push({\n        points: new Array(3).fill(null).map(() => ({\n          x: pos.x + size * Math.random(),\n          y: pos.y + size * Math.random(),\n        })),\n        background: shape.background,\n      });\n    }\n\n    return newShapes;\n  }\n\n  /**\n   * @param points {{x: number, y: number}[]}\n   */\n  shapeCenter(points) {\n    const { min, max } = this.coverBox(points);\n    return { x: (max.x + min.x) / 2, y: (max.y + min.y) / 2 };\n  }\n\n  coverBox(points) {\n    const min = { x: points[0].x, y: points[0].y };\n    const max = { ...min };\n    for (let i = 1; i < points.length; i++) {\n      min.x = Math.min(min.x, points[i].x);\n      min.y = Math.min(min.y, points[i].y);\n      max.x = Math.max(max.x, points[i].x);\n      max.y = Math.max(max.y, points[i].y);\n    }\n    return { min, max };\n  }\n\n  moveBrakedPiece() {\n    if (this.brakedShape) {\n      for (const shape of this.brakedShape.shapes) {\n        shape.points = shape.points.map((p) => ({\n          x: p.x + shape.vector.x,\n          y: p.y + shape.vector.y,\n        }));\n        shape.background = this.reduceOpacity(shape.background, 30);\n      }\n    }\n  }\n\n  /**\n   * @param color {string}\n   * @param extract {number}\n   * @returns {string}\n   */\n  reduceOpacity(color, extract) {\n    let alpha = this.getOpacity(color);\n    alpha = Math.min(255, Math.max(alpha - extract, 0));\n    alpha = alpha.toString(16);\n    return `#${color.substr(1, 6)}${(alpha.length < 2 ? \"0\" : \"\") + alpha}`;\n  }\n\n  /**\n   * @param color {string}\n   * @return {number}\n   */\n  getOpacity(color) {\n    return color.length > 7 ? parseInt(color.substr(7, 2), 16) : 255;\n  }\n\n  /**\n   * @return {{points: {x: number, y: number}[], background: string, smoke: boolean}[]}\n   */\n  getProjection() {\n    // const rotation = this.rotation + Math.PI / 2;\n    const rotation = vectorToAngle(this.directionVector) + Math.PI / 2;\n\n    const shapes = this.shipShape().shapes;\n    const pivot = { x: this.x, y: this.y };\n\n    const projectedShape = [];\n\n    for (const shape of shapes) {\n      const points = shape.points.map((p) => ({\n        x: p.x * this.scaleShape,\n        y: p.y * this.scaleShape,\n      }));\n      for (let i = 0; i < points.length; i++) {\n        points[i] = getPointByVectorRotation(points[i], pivot, rotation);\n      }\n      projectedShape.push({ ...shape, points });\n    }\n    return projectedShape;\n  }\n\n  /**\n   * @returns {{shapes: {background: string, points: {x: number, y: number}[]}[]}}\n   */\n  shipShape() {\n    return {\n      shapes: [],\n    };\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport shape2 from \"../shapes/ship2.json\";\n\nexport default class Player extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    super(eventEmitter, x, y, width, height);\n    /** @member {number} */\n    this.rotation = Math.PI / 2;\n    this.directionVector = { x: 0, y: 1 };\n    this.scaleShape = 4;\n    this.shape = shape2;\n\n    this.updateCoordinates();\n  }\n\n  /**\n   * Update the coordinates of the player\n   * @param x {number}\n   * @param y {number}\n   */\n  updateCoordinates({ x, y } = {}) {\n    this.x = x || this.x;\n    this.y = y || this.y;\n  }\n\n  /**\n   * Update the direction vector of the player\n   * @param v\n   */\n  updateDirectionVector(v) {\n    this.directionVector = v;\n  }\n\n  animate() {\n    super.animate();\n  }\n\n  shipShape() {\n    return this.brakedShape || this.shape;\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { scale } from \"../utils/math\";\n\nexport default class Score extends BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number} corner coordinates\n   * @param y {number} corner coordinates\n   */\n  constructor(eventEmitter, x, y) {\n    super(eventEmitter, x, y);\n    this.score = 0;\n    this.textSize = 30;\n    this.backgroundColor = \"#000\";\n    this.textColor = \"#fff\";\n\n    this.lastTime = 0;\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    context.font = `${scale(this.textSize)}px Arial`;\n    const metrics = context.measureText(this.score + \"\");\n    const textWidth = metrics.width;\n    const textHeight =\n      metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n    const padding = 5;\n\n    context.beginPath();\n    context.rect(\n      scale(this.x - textWidth - padding * 2),\n      scale(this.y),\n      scale(textWidth + padding * 2),\n      scale(textHeight + padding * 2),\n    );\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n\n    context.beginPath();\n    context.font = `${scale(this.textSize)}px Arial`;\n    context.fillStyle = this.textColor;\n    context.fillText(\n      this.score + \"\",\n      scale(this.x - textWidth - padding),\n      scale(this.y + textHeight + padding),\n    );\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { scale, unscale } from \"../utils/math\";\nimport { EVENT_MOUSEMOVE, EVENT_MOUSEOUT } from \"../utils/variables\";\n\nexport default class Button extends BaseObject {\n  /**\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param text {string}\n   * @param eventEmitter {Observable}\n   */\n  constructor(eventEmitter, x, y, width, height, text) {\n    super(eventEmitter, x, y, width, height);\n    this.text = text;\n    this.textSize = 10;\n    this.backgroundColor = \"#000\";\n    this.textColor = \"#fff\";\n    this.textColorHover = \"#9a9a9a\";\n\n    this.listenerEvent(EVENT_MOUSEMOVE, (data) => {\n      if (this.isPositionInside(data.position)) {\n        document.body.style.cursor = \"pointer\";\n      }\n    });\n    this.listenerEvent(EVENT_MOUSEOUT, (data) => {\n      document.body.style.cursor = \"default\";\n    });\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    context.beginPath();\n    context.rect(\n      scale(this.x),\n      scale(this.y),\n      scale(this.width),\n      scale(this.height),\n    );\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n\n    context.beginPath();\n    context.font = `${scale(this.textSize)}px Arial`;\n    const metrics = context.measureText(this.text);\n    const textWidth = unscale(metrics.width);\n    const textHeight = unscale(\n      metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent,\n    );\n    context.fillStyle = this.isMouseHover\n      ? this.textColorHover\n      : this.textColor;\n    // context.text;\n    context.fillText(\n      this.text,\n      scale(this.x + this.width / 2 - textWidth / 2),\n      scale(this.y + this.height / 2 + textHeight / 2),\n    );\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { EVENT_CLICK, SCREEN_HEIGHT, SCREEN_WIDTH } from \"../utils/variables\";\nimport { scale, unscale } from \"../utils/math\";\nimport Button from \"./button\";\n\nexport default class Modal extends BaseObject {\n  /**\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param eventEmitter {Observable}\n   */\n  constructor(eventEmitter, x, y, width, height) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = \"#fff\";\n    this.textSize = 90;\n    this.text2Size = 30;\n    this.text = \"RECORD\";\n    this.score = 1000;\n\n    const buttonHeight = 30;\n    const button1Width = 40;\n    const button2Width = 120;\n    const buttonMargin = 15;\n\n    this.createCredits(\n      this.x + buttonMargin,\n      this.y,\n      button1Width,\n      buttonHeight,\n    );\n    this.createPlayButton(\n      this.x + (this.width - button1Width - button2Width - buttonMargin) / 2,\n      this.y + this.height - buttonHeight - buttonMargin,\n      button1Width,\n      buttonHeight,\n    );\n    this.createShareButton(\n      this.x +\n        (this.width - button1Width - button2Width - buttonMargin) / 2 +\n        button1Width +\n        buttonMargin,\n      this.y + this.height - buttonHeight - buttonMargin,\n      button2Width,\n      buttonHeight,\n    );\n  }\n\n  createPlayButton(x, y, w, h) {\n    this.buttonPlay = new Button(this.eventEmitter, x, y, w, h, \"PLAY\");\n  }\n\n  createCredits(x, y, w, h) {\n    this.buttonCredits = new Button(this.eventEmitter, x, y, w, h, \"@ggjnez92\");\n    this.buttonCredits.backgroundColor = \"#00000000\";\n    this.buttonCredits.textColor = \"#000\";\n    this.buttonCredits.textColorHover = \"#0048ff\";\n    this.buttonCredits.listenerEvent(EVENT_CLICK, () =>\n      window.open(\"https://twitter.com/ggjnez92\", \"_blank\").focus(),\n    );\n  }\n\n  createShareButton(x, y, w, h) {\n    this.buttonShareRecord = new Button(\n      this.eventEmitter,\n      x,\n      y,\n      w,\n      h,\n      \"SHARE ON TWITTER\",\n    );\n    this.buttonShareRecord.listenerEvent(EVENT_CLICK, () => {\n      const message = `I%20just%20make%20a%20new%20record%20of%20${this.score}%20points%20in%20the%20%23azetz%20%23game%20developed%20for%20the%20%40js13kGames%20competition.%0A%0A%23js13k%20%23gamedev%0A%0AIf%20you%20want%20to%20check%20it%20out%2C%20here%20is%20the%20link%20to%20the%20%23github%20repository%0Ahttps%3A%2F%2Fgithub.com%2Finflagames%2Fazetz`;\n      const url = `https://twitter.com/intent/tweet?text=${message}`;\n      window.open(url, \"_blank\").focus();\n    });\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    context.beginPath();\n    context.rect(0, 0, scale(SCREEN_WIDTH), scale(SCREEN_HEIGHT));\n    context.fillStyle = \"rgba(0,0,0,0.82)\";\n    context.fill();\n\n    context.beginPath();\n    context.rect(\n      scale(this.x),\n      scale(this.y),\n      scale(this.width),\n      scale(this.height),\n    );\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n\n    this.buttonPlay.render(context);\n    this.buttonCredits.render(context);\n    this.buttonShareRecord.render(context);\n\n    this.renderScore(context);\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  renderScore(context) {\n    // toDo guille 01.09.21: refactor this code\n    context.beginPath();\n    context.font = `${scale(this.textSize)}px Arial`;\n    const metrics = context.measureText(this.score + \"\");\n    const textWidth = unscale(metrics.width);\n    const textHeight = unscale(\n      metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent,\n    );\n    context.fillStyle = \"#000\";\n    context.fillText(\n      this.score + \"\",\n      scale(this.x + this.width / 2 - textWidth / 2),\n      scale(this.y + this.height / 2 + textHeight / 2),\n    );\n\n    context.beginPath();\n    context.font = `${scale(this.text2Size)}px Arial`;\n    const metrics2 = context.measureText(this.text);\n    const text2Width = unscale(metrics2.width);\n    const text2Height = unscale(\n      metrics2.actualBoundingBoxAscent + metrics2.actualBoundingBoxDescent,\n    );\n    context.fillStyle = \"#000\";\n    context.fillText(\n      this.text,\n      scale(this.x + this.width / 2 - text2Width / 2),\n      scale(\n        this.y +\n          this.height / 2 +\n          textHeight / 2 -\n          textHeight -\n          text2Height / 2,\n      ),\n    );\n  }\n}\n","const APPLICATION_PREFIX = \"azetzv1\";\nconst SCORE_KEY = `${APPLICATION_PREFIX}_game_score`;\n\n/** @type Data */\nlet data = null;\n\nexport default class Data {\n  static getInstance() {\n    if (!data) {\n      data = new Data();\n    }\n    return data;\n  }\n\n  /**\n   * @param score {number}\n   */\n  saveScore(score) {\n    localStorage.setItem(SCORE_KEY, score + \"\");\n  }\n\n  getScore() {\n    const score = localStorage.getItem(SCORE_KEY);\n    return score ? +score : 0;\n  }\n}\n","export const isMobileMethod = {\n  Android: function () {\n    return navigator.userAgent.match(/Android/i);\n  },\n  BlackBerry: function () {\n    return navigator.userAgent.match(/BlackBerry/i);\n  },\n  iOS: function () {\n    return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n  },\n  Opera: function () {\n    return navigator.userAgent.match(/Opera Mini/i);\n  },\n  Windows: function () {\n    return (\n      navigator.userAgent.match(/IEMobile/i) ||\n      navigator.userAgent.match(/WPDesktop/i)\n    );\n  },\n  any: function () {\n    return (\n      isMobileMethod.Android() ||\n      isMobileMethod.BlackBerry() ||\n      isMobileMethod.iOS() ||\n      isMobileMethod.Opera() ||\n      isMobileMethod.Windows()\n    );\n  },\n};\n","import { normalizeVector } from \"../../utils/math\";\n\nexport const UP_DIRECTION = 1;\nexport const DOWN_DIRECTION = 2;\nexport const LEFT_DIRECTION = 4;\nexport const RIGHT_DIRECTION = 8;\n\nexport default class DirectionKeys {\n  constructor() {\n    /** @member {string[]} */\n    this.presedKeys = [];\n  }\n\n  clear() {\n    this.presedKeys = [];\n  }\n\n  /**\n   * @param key {string}\n   */\n  addKey(key) {\n    if (this.isDirectionKey(key) && !this.presedKeys.includes(key)) {\n      this.presedKeys.push(key);\n    }\n  }\n\n  /**\n   * @param key {string}\n   */\n  removeKey(key) {\n    this.presedKeys = this.presedKeys.filter((k) => k !== key);\n  }\n\n  /**\n   * @param key {string}\n   * @return {boolean}\n   */\n  isDirectionKey(key) {\n    return key === \"a\" || key === \"w\" || key === \"s\" || key === \"d\";\n  }\n\n  /**\n   * Current state of the keys\n   * @returns {boolean}\n   */\n  hasPressedKeys() {\n    return this.presedKeys.length > 0;\n  }\n\n  /**\n   * @returns {{x: number, y: number}}\n   */\n  directionVector() {\n    let directionVec = { x: 0, y: 0 };\n\n    /** @type {number} */\n    const direction = this.direction();\n\n    if ((direction & UP_DIRECTION) !== 0) {\n      directionVec.y = -1;\n    } else if ((direction & DOWN_DIRECTION) !== 0) {\n      directionVec.y = 1;\n    }\n\n    if ((direction & LEFT_DIRECTION) !== 0) {\n      directionVec.x = -1;\n    } else if ((direction & RIGHT_DIRECTION) !== 0) {\n      directionVec.x = 1;\n    }\n\n    // console.log(normalizeVector(directionVec));\n\n    return normalizeVector(directionVec);\n  }\n\n  direction() {\n    let dir = 0;\n\n    if (this.presedKeys.length > 0) {\n      dir = this.directionMap(this.presedKeys[0]);\n      let position = 1;\n      while (position < this.presedKeys.length) {\n        let n = this.consumeNextDirection(\n          UP_DIRECTION,\n          LEFT_DIRECTION,\n          RIGHT_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n        n |= this.consumeNextDirection(\n          DOWN_DIRECTION,\n          LEFT_DIRECTION,\n          RIGHT_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n        n |= this.consumeNextDirection(\n          LEFT_DIRECTION,\n          UP_DIRECTION,\n          DOWN_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n        n |= this.consumeNextDirection(\n          RIGHT_DIRECTION,\n          UP_DIRECTION,\n          DOWN_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n\n        if (n) {\n          dir |= n;\n          break;\n        }\n\n        position++;\n      }\n    }\n\n    return dir;\n  }\n\n  consumeNextDirection(dir, acDir1, acDir2, currentDir, nextDir) {\n    if (dir === currentDir && (nextDir === acDir1 || nextDir === acDir2)) {\n      return nextDir;\n    }\n    return 0;\n  }\n\n  /**\n   * @param key {string}\n   * @returns {number}\n   */\n  directionMap(key) {\n    if (key === \"w\") {\n      return UP_DIRECTION;\n    }\n    if (key === \"s\") {\n      return DOWN_DIRECTION;\n    }\n    if (key === \"a\") {\n      return LEFT_DIRECTION;\n    }\n    if (key === \"d\") {\n      return RIGHT_DIRECTION;\n    }\n    return 0;\n  }\n}\n","import { addVectors, detectCollision, lerpVector, multiplyVector, normalizeVector } from \"../../utils/math\";\nimport { SCREEN_HEIGHT, SCREEN_WIDTH } from \"../../utils/variables\";\nimport DirectionKeys from \"./direction-keys\";\n\nconst GAME_STOP = \"3\";\nconst GAME_OVER = \"5\";\nconst GAME_PAUSE = \"7\";\n\nexport default class GameLogic {\n  constructor() {\n    /** @member {Score} */\n    this.score = null;\n\n    this.time = 0;\n\n    /** @member {DirectionKeys} */\n    this.directionKeys = new DirectionKeys();\n\n    this.player = {\n      position: {\n        x: SCREEN_WIDTH / 2,\n        y: SCREEN_HEIGHT / 2\n      },\n      rotation: Math.PI / 2, // todo: eliminate this property\n      directionVector: { x: 0, y: 1 },\n      expectedRotation: 0,\n      velocity: 0,\n      minVelocity: 10,\n      acceleration: 20,\n      deceleration: -1.5,\n      status: [GAME_STOP],\n      component: undefined\n    };\n    this.enemies = [];\n    this.objects = [];\n\n    this.configs = {};\n  }\n\n  destroy() {\n    this.enemies.forEach((enemy) => enemy.component.destroy.emit());\n    this.objects.forEach((obj) => obj.component.destroy.emit());\n    this.player.component.destroy.emit();\n  }\n\n  /**\n   * run an iteration of the game logic\n   */\n  play() {\n    this.movePlayer();\n    this.animateComponents();\n  }\n\n  /**\n   * Move the player base on the direction keys\n   */\n  movePlayer() {\n    const VELOCITY = 10;\n\n    if (this.directionKeys.hasPressedKeys()) {\n      const rot = lerpVector(this.player.directionVector, this.directionKeys.directionVector(), 0.95);\n      this.player.directionVector = multiplyVector(normalizeVector(rot), VELOCITY);\n      this.player.position = addVectors(this.player.directionVector, this.player.position);\n    }\n\n    this.player.component.updateCoordinates(this.player.position);\n    this.player.component.updateDirectionVector({ ...this.player.directionVector, y: -this.player.directionVector.y });\n    // toDo (gonzalezext)[18.04.24]: validate collision\n  }\n\n  canPauseGame() {\n    // toDo (gonzalezext)[18.04.24]:\n    return true;\n  }\n\n  animateComponents() {\n    // toDo (gonzalezext)[18.04.24]:\n    // animation in general\n    // this.ship.component.animate();\n  }\n\n  pause() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  unpause() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  updateSpaces() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  updateScore() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  /**\n   * @return {number}\n   */\n  getScore() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  checkCollision() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  /**\n   * @param shapes1 {{points: {x: number, y: number}[], background: string}[]}\n   * @param shapes2 {{points: {x: number, y: number}[], background: string}[]}\n   * @return {boolean}\n   */\n  checkCollisionInProjections(shapes1, shapes2) {\n    for (const s1 of shapes1) {\n      for (const s2 of shapes2) {\n        if (detectCollision(s1.points, s2.points)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { scale } from \"../utils/math\";\n\nexport default class Level extends BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param background {string}\n   */\n  constructor(\n    eventEmitter,\n    x = 0,\n    y = 0,\n    width = 0,\n    height = 0,\n    background = \"\"\n  ) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = background;\n  }\n\n  render(context) {\n    if (this.backgroundColor) {\n      context.beginPath();\n      context.fillStyle = this.backgroundColor;\n      context.rect(0, 0, scale(this.width), scale(this.height));\n      context.fill();\n    }\n  }\n}\n","import Scene from \"./shared/scene\";\nimport {\n  EVENT_CLICK,\n  EVENT_KEYDOWN,\n  EVENT_KEYUP,\n  EVENT_MOUSEUP,\n  SCREEN_HEIGHT,\n  SCREEN_WIDTH\n} from \"../utils/variables\";\nimport Player from \"../components/player\";\nimport Score from \"../components/score\";\nimport Modal from \"../components/modal\";\nimport Button from \"../components/button\";\nimport Data from \"../utils/data\";\nimport { isMobileMethod } from \"../utils/mobile-device\";\nimport GameLogic from \"./shared/game.logic\";\nimport Level from \"../components/level\";\n\nexport const isMobile = isMobileMethod.any();\n\nconst SCORE_MARGIN = 10;\n\nexport default class ScenePlay extends Scene {\n  /**\n   * @param navigator {Navigator}\n   * @param eventEmitter {Observable}\n   */\n  constructor(navigator, eventEmitter) {\n    super(navigator, eventEmitter);\n\n    this.buttonPause = new Button(\n      this.eventEmitter,\n      SCORE_MARGIN,\n      SCORE_MARGIN,\n      60,\n      30,\n      \"PAUSE\"\n    );\n    this.buttonPause.textSize = 20;\n    this.buttonPause.listenerEvent(EVENT_CLICK, () => {\n      if (this.currentGame.canPauseGame()) {\n        this.currentGame.pause();\n        this.showModal(Data.getInstance().getScore(), false);\n      }\n    });\n\n    this.listenerEvent(EVENT_KEYDOWN, this.keyDown.bind(this));\n    this.listenerEvent(EVENT_KEYUP, this.keyUp.bind(this));\n\n    this.initGame();\n  }\n\n  initGame() {\n    this.isModalShow = false;\n\n    // game logic\n    if (this.currentGame) {\n      this.currentGame.destroy();\n    }\n    this.currentGame = new GameLogic();\n\n    // player component\n    this.player = new Player(\n      this.eventEmitter,\n      SCREEN_WIDTH / 2,\n      SCREEN_HEIGHT / 2,\n      30,\n      35\n    );\n    this.currentGame.player.component = this.player;\n\n    // create level\n    this.level = new Level(\n      this.eventEmitter,\n      0,\n      0,\n      SCREEN_WIDTH,\n      SCREEN_HEIGHT,\n      \"#000\"\n    );\n\n    // score component\n    const score = new Score(\n      this.eventEmitter,\n      SCREEN_WIDTH - SCORE_MARGIN,\n      SCORE_MARGIN\n    );\n    this.currentGame.score = score;\n\n    // add components to the element array\n    this.elements = [this.player, this.buttonPause];\n    this.elements.push(score);\n\n    // elements of the game\n    this.playableElements = [this.player];\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    // execute game logic\n    this.currentGame.play();\n\n    // render background\n    this.cleanCanvas(context);\n\n    this.renderOrRemovePlayableElements(context);\n\n    // render scene elements\n    for (const element of this.elements) {\n      element.render(context);\n    }\n  }\n\n  keyDown(event) {\n    this.currentGame.directionKeys.addKey(event.key);\n  }\n\n  keyUp(event) {\n    this.currentGame.directionKeys.removeKey(event.key);\n  }\n\n  showModal(score, restartGame = true) {\n    if (!this.isModalShow) {\n      this.isModalShow = true;\n      const modalWidth = 300;\n      const modalHeight = 200;\n      const modal = new Modal(\n        this.eventEmitter,\n        SCREEN_WIDTH / 2 - modalWidth / 2,\n        SCREEN_HEIGHT / 2 - modalWidth / 2,\n        modalWidth,\n        modalHeight\n      );\n      Data.getInstance().saveScore(\n        Math.max(Data.getInstance().getScore(), score)\n      );\n      modal.score = score;\n      modal.buttonPlay.listenerEvent(EVENT_MOUSEUP, () => {\n        modal.buttonPlay.destroy.emit();\n        modal.buttonShareRecord.destroy.emit();\n        modal.buttonCredits.destroy.emit();\n        this.currentGame.unpause();\n        this.elements.pop();\n        this.isModalShow = false;\n        if (restartGame) {\n          this.initGame();\n        }\n      });\n      this.elements.push(modal);\n    }\n  }\n\n  renderOrRemovePlayableElements(context) {\n    const toRemove = new Set();\n    for (const element of this.playableElements) {\n      if (this.isElementVisible(element)) {\n        element.render(context);\n      } else {\n        toRemove.add(element.id);\n      }\n    }\n    this.playableElements = this.playableElements.filter(\n      (ele) => !toRemove.has(ele.id)\n    );\n  }\n\n  isElementVisible(element) {\n    return element.y - element.height * 2 < SCREEN_HEIGHT;\n  }\n\n  cleanCanvas(context) {\n    this.level.render(context);\n  }\n}\n","import {\n  EVENT_RESIZE,\n  SCENE_GAME,\n  SCREEN_RATIO,\n  SCREEN_WIDTH,\n} from \"./utils/variables\";\nimport ScenePlay from \"./scenes/play.scene\";\nimport Observable from \"./utils/observable\";\n\nexport default class Navigator {\n  /**\n   * @param scene {number}\n   * @param eventEmitter {Observable}\n   */\n  constructor(scene, eventEmitter) {\n    this.gameWidth = SCREEN_WIDTH;\n    this.gameHeght = SCREEN_WIDTH * SCREEN_RATIO;\n    this.sceneClasses = new Map();\n    this.sceneClasses.set(SCENE_GAME, ScenePlay);\n    this.scenesInstances = new Map();\n    /** @member {Scene} */\n    this.currentScene = null;\n    eventEmitter.on((data) => {\n      this.currentScene.eventEmitter.emit(data);\n      if (data.event === EVENT_RESIZE && data.dimension) {\n        this.gameWidth = data.dimension.w;\n        this.gameHeght = data.dimension.h;\n        this.updateGameDimensions();\n      }\n    });\n\n    // initial navigation\n    this.navigate(scene);\n  }\n\n  /**\n   * Navigate to a different scene\n   * @param scene {number}\n   */\n  navigate(scene) {\n    if (this.scenesInstances.has(scene)) {\n      this.currentScene = this.scenesInstances.get(scene);\n    } else if (this.sceneClasses.has(scene)) {\n      this.scenesInstances.set(\n        scene,\n        new (this.sceneClasses.get(scene))(this, new Observable()),\n      );\n      this.currentScene = this.scenesInstances.get(scene);\n    }\n    this.updateGameDimensions();\n  }\n\n  updateGameDimensions() {\n    if (this.currentScene) {\n      this.currentScene.width = this.gameWidth;\n      this.currentScene.height = this.gameHeght;\n    }\n  }\n}\n","import Navigator from \"./navigator\";\nimport Observable from \"./utils/observable\";\nimport { unscale } from \"./utils/math\";\nimport {\n  SCREEN_WIDTH,\n  SCREEN_RATIO,\n  SCENE_GAME,\n  STOP,\n  EVENT_CLICK,\n  EVENT_MOUSEDOWN,\n  EVENT_MOUSEUP,\n  EVENT_MOUSEOUT,\n  EVENT_MOUSELEAVE,\n  EVENT_MOUSEMOVE,\n  EVENT_TOUCHDOWN,\n  EVENT_TOUCHUP,\n  EVENT_TOUCHCANCEL,\n  EVENT_TOUCHMOVE,\n  EVENT_RESIZE,\n  RUNNING,\n  FPS,\n  EVENT_KEYDOWN,\n  EVENT_KEYPRESS,\n  EVENT_KEYUP,\n} from \"./utils/variables\";\n\nconst intervalPerSecond = 1000 / FPS;\n\nlet gameInstance = null;\n\nexport default class Game {\n  constructor() {\n    window.addEventListener(\"resize\", this.resizeScreen.bind(this));\n\n    /** @member {HTMLCanvasElement} */\n    this.canvas = document.getElementById(\"game\");\n\n    this.registerEvents();\n\n    /** @member {Observable} */\n    this.eventEmitter = new Observable();\n\n    /** @member {CanvasRenderingContext2D} */\n    this.context = this.canvas.getContext(\"2d\");\n\n    /** @member {Navigator} */\n    this.navigatorRoot = new Navigator(SCENE_GAME, this.eventEmitter);\n\n    this.loopStatus = STOP;\n    this.lastTime = 0;\n    this.width = this.canvas.width;\n    this.height = this.canvas.height;\n\n    this.resizeScreen();\n  }\n\n  registerEvents() {\n    // keyboard events\n    this.registerKeyboardEvent(\"keydown\", EVENT_KEYDOWN);\n    this.registerKeyboardEvent(\"keyup\", EVENT_KEYUP);\n    this.registerKeyboardEvent(\"keypress\", EVENT_KEYPRESS);\n\n    // mouse events\n    this.registerClickEvent(\"click\", EVENT_CLICK);\n    this.registerClickEvent(\"mousedown\", EVENT_MOUSEDOWN);\n    this.registerClickEvent(\"mouseup\", EVENT_MOUSEUP);\n    this.registerClickEvent(\"mouseout\", EVENT_MOUSEOUT);\n    this.registerClickEvent(\"mouseleave\", EVENT_MOUSELEAVE);\n    this.registerClickEvent(\"mousemove\", EVENT_MOUSEMOVE);\n\n    // touch events\n    this.registerTouchEvent(\"touchstart\", EVENT_TOUCHDOWN, false);\n    this.registerTouchEvent(\"touchend\", EVENT_TOUCHUP, false);\n    this.registerTouchEvent(\"touchcancel\", EVENT_TOUCHCANCEL, false);\n    this.registerTouchEvent(\"touchmove\", EVENT_TOUCHMOVE, false);\n  }\n\n  /**\n   * @param type {string}\n   * @param eventType {string}\n   * @param option {boolean}\n   */\n  registerClickEvent(type, eventType, option = undefined) {\n    this.canvas.addEventListener(\n      type,\n      (e) => this.clickEvent(e, eventType),\n      option,\n    );\n  }\n\n  /**\n   * @param type {string}\n   * @param eventType {string}\n   * @param option {boolean}\n   */\n  registerTouchEvent(type, eventType, option = undefined) {\n    this.canvas.addEventListener(\n      type,\n      (e) => this.touchEvent(e, eventType),\n      option,\n    );\n  }\n\n  /**\n   * @param type {string}\n   * @param eventType {string}\n   * @param option {boolean}\n   */\n  registerKeyboardEvent(type, eventType, option = undefined) {\n    document.addEventListener(\n      type,\n      (e) => this.keyboardEvent(e, eventType),\n      option,\n    );\n  }\n\n  resizeScreen() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    let calculatedWidth = Math.min(SCREEN_WIDTH, width);\n    let calculatedHeight = calculatedWidth * SCREEN_RATIO;\n\n    if (calculatedHeight > height) {\n      calculatedHeight = height;\n      calculatedWidth = height / SCREEN_RATIO;\n    }\n\n    this.canvas.width = calculatedWidth;\n    this.canvas.height = calculatedHeight;\n\n    window.currentWidth = calculatedWidth;\n    this.eventEmitter.emit({\n      event: EVENT_RESIZE,\n      dimension: { w: calculatedWidth, h: calculatedHeight },\n    });\n  }\n\n  /**\n   * @param event {TouchEvent}\n   * @param type {string}\n   */\n  touchEvent(event, type) {\n    this.emitPositionEvent(\n      {\n        x: event?.targetTouches[0]?.pageX,\n        y: event?.targetTouches[0]?.pageY,\n      },\n      type,\n    );\n  }\n\n  /**\n   * @param event {MouseEvent}\n   * @param type {string}\n   */\n  clickEvent(event, type) {\n    this.emitPositionEvent({ x: event?.clientX, y: event?.clientY }, type);\n  }\n\n  /**\n   * @param event {KeyboardEvent}\n   * @param type {string}\n   */\n  keyboardEvent(event, type) {\n    this.eventEmitter.emit({\n      event: type,\n      key: event.key,\n    });\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   * @param type {string}\n   */\n  emitPositionEvent(position, type) {\n    const rect = this.canvas.getBoundingClientRect();\n    this.eventEmitter.emit({\n      event: type,\n      position: {\n        x: unscale(position.x - rect.left),\n        y: unscale(position.y - rect.top),\n      },\n    });\n  }\n\n  /**\n   * Get game instance\n   * @returns {Game}\n   */\n  static getInstance() {\n    if (!gameInstance) {\n      gameInstance = new Game();\n    }\n    return gameInstance;\n  }\n\n  /**\n   * Initialize game\n   */\n  init() {\n    this.loopStatus = RUNNING;\n    requestAnimationFrame(this.loop.bind(this));\n  }\n\n  /**\n   * Application loop\n   * @param currentTime {number}\n   */\n  loop(currentTime) {\n    if (this.loopStatus === RUNNING) {\n      if (\n        this.loopStatus === RUNNING &&\n        intervalPerSecond <= currentTime - this.lastTime\n      ) {\n        this.lastTime = currentTime;\n\n        this.navigatorRoot.currentScene.render(this.context);\n      }\n\n      requestAnimationFrame(this.loop.bind(this));\n    }\n    // the else here will end the loop\n  }\n}\n","import Game from \"./game/game\";\n\nGame.getInstance().init();\n"],"names":["SCREEN_RATIO","SCREEN_WIDTH","SCREEN_HEIGHT","EVENT_CLICK","EVENT_MOUSEOUT","EVENT_KEYDOWN","EVENT_KEYUP","Observable","constructor","this","subscriptions","open","emit","data","i","length","callFunction","func","pipe","functions","lastSteam","stream","on","unsub","filter","f","push","BaseObject","eventEmitter","x","y","width","height","destroy","lastMousePosition","isMouseHover","id","Math","random","value","_eventEmitter","stopper","streamCancel","cancelFunction","observable","takeUntil","render","context","listenerEvent","event","callback","validateMouseEventPropagation","position","validateKeyboardEventPropagation","isPositionInside","Scene","navigator","super","backgroundColor","elements","cleanCanvas","element","rect","fillStyle","fill","validateEventPropagation","validation","e","getPointByVectorRotation","vector","pivot","phi","result","cos","sin","rotateVector","scale","window","currentWidth","unscale","detectCollision","shape1","shape2","axis","extractAxis","axi","p1","shapeProjection","p2","min","max","normalizeVector","v","sqrt","shape","projection","p","u","BaseShape","rotation","directionVector","scaleShape","brakedShape","updateCoordinates","shapes","getProjection","points","beginPath","moveTo","lineTo","closePath","background","stroke","animate","moveBrakedPiece","brakeShapes","shipShape","brakeShape","cp","shapeCenter","factor","pow","coverBox","newShapes","count","ceil","pos","Array","map","reduceOpacity","color","extract","alpha","getOpacity","toString","substr","parseInt","atan2","PI","projectedShape","Player","updateDirectionVector","Score","score","textSize","textColor","lastTime","font","metrics","measureText","textWidth","textHeight","actualBoundingBoxAscent","actualBoundingBoxDescent","padding","fillText","Button","text","textColorHover","document","body","style","cursor","Modal","text2Size","buttonMargin","createCredits","createPlayButton","createShareButton","w","h","buttonPlay","buttonCredits","focus","buttonShareRecord","url","renderScore","metrics2","text2Width","text2Height","SCORE_KEY","Data","getInstance","saveScore","localStorage","setItem","getScore","getItem","isMobileMethod","Android","userAgent","match","BlackBerry","iOS","Opera","Windows","any","DirectionKeys","presedKeys","clear","addKey","key","isDirectionKey","includes","removeKey","k","hasPressedKeys","directionVec","direction","dir","directionMap","n","consumeNextDirection","acDir1","acDir2","currentDir","nextDir","GameLogic","time","directionKeys","player","expectedRotation","velocity","minVelocity","acceleration","deceleration","status","component","undefined","enemies","objects","configs","forEach","enemy","obj","play","movePlayer","animateComponents","rot","v1","v2","t","scalar","addVectors","canPauseGame","pause","unpause","updateSpaces","updateScore","checkCollision","checkCollisionInProjections","shapes1","shapes2","s1","s2","Level","ScenePlay","buttonPause","currentGame","showModal","keyDown","bind","keyUp","initGame","isModalShow","level","playableElements","renderOrRemovePlayableElements","restartGame","modalWidth","modalHeight","modal","pop","toRemove","Set","isElementVisible","add","ele","has","Navigator","scene","gameWidth","gameHeght","sceneClasses","Map","set","scenesInstances","currentScene","dimension","updateGameDimensions","navigate","get","intervalPerSecond","gameInstance","Game","addEventListener","resizeScreen","canvas","getElementById","registerEvents","getContext","navigatorRoot","loopStatus","registerKeyboardEvent","registerClickEvent","registerTouchEvent","type","eventType","option","clickEvent","touchEvent","keyboardEvent","innerWidth","innerHeight","calculatedWidth","calculatedHeight","emitPositionEvent","targetTouches","pageX","pageY","clientX","clientY","getBoundingClientRect","left","top","init","requestAnimationFrame","loop","currentTime"],"sourceRoot":""}