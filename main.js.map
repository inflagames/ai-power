{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./game/utils/variables.js","webpack:///./game/utils/observable.js","webpack:///./game/components/shared/base-object.js","webpack:///./game/scenes/shared/scene.js","webpack:///./game/utils/helpers.js","webpack:///./game/components/shared/base-shape.js","webpack:///./game/components/ship.js","webpack:///./game/scenes/shared/game.logic.js","webpack:///./game/components/score.js","webpack:///./game/components/space.js","webpack:///./game/components/meteorite.js","webpack:///./game/components/button.js","webpack:///./game/components/modal.js","webpack:///./game/utils/data.js","webpack:///./game/utils/mobile-device.js","webpack:///./game/scenes/play.scene.js","webpack:///./game/navigator.js","webpack:///./game/game.js","webpack:///./main.js"],"sourcesContent":["// game dimensions\nexport const SCREEN_RATIO = 16 / 9;\nexport const SCREEN_WIDTH = 500;\nexport const SCREEN_HEIGHT = SCREEN_WIDTH * SCREEN_RATIO;\n\n// game status\nexport const RUNNING = 1;\nexport const PAUSE = 2;\nexport const STOP = 3;\n\n// game events\nexport const EVENT_CLICK = \"0\";\nexport const EVENT_MOUSEDOWN = \"1\";\nexport const EVENT_MOUSEUP = \"2\";\nexport const EVENT_MOUSEMOVE = \"3\";\nexport const EVENT_MOUSEOUT = \"8\";\nexport const EVENT_MOUSELEAVE = \"9\";\nexport const EVENT_TOUCHDOWN = \"4\";\nexport const EVENT_TOUCHUP = \"5\";\nexport const EVENT_TOUCHMOVE = \"6\";\nexport const EVENT_TOUCHCANCEL = \"7\";\nexport const EVENT_RESIZE = \"8\";\n\n// scene values\nexport const SCENE_GAME = 1;\n\nexport const FPS = 30;\n","export default class Observable {\n  constructor() {\n    /** @member {function[]} */\n    this.subscriptions = [];\n    this.open = true;\n  }\n\n  /**\n   * @param data {Object}\n   */\n  emit(data = {}) {\n    for (let i = 0; i < this.subscriptions.length; i++) {\n      this.callFunction(this.subscriptions[i], data);\n    }\n  }\n\n  async callFunction(func, data) {\n    func(data);\n  }\n\n  /**\n   * @param functions {function}\n   * @return {Observable}\n   */\n  pipe(...functions) {\n    let lastSteam = this;\n    for (const func of functions) {\n      const stream = new Observable();\n      lastSteam.on((data) => func(data, stream));\n      lastSteam = stream;\n    }\n    return lastSteam;\n  }\n\n  /**\n   * @param func {function}\n   */\n  unsub(func) {\n    this.subscriptions = this.subscriptions.filter((f) => f !== func);\n  }\n\n  /**\n   * @param func {function}\n   */\n  on(func) {\n    this.subscriptions.push(func);\n  }\n}\n\n/**\n * Filter the value of an Observable\n * @param stopper {Observable}\n */\nexport function takeUntil(stopper) {\n  let streamCancel = false;\n  const cancelFunction = () => {\n    streamCancel = true;\n    stopper.unsub(cancelFunction);\n  };\n  stopper.on(cancelFunction);\n  return (data, /** @param {Observable} */ observable) => {\n    if (streamCancel) {\n      observable.subscriptions = [];\n    }\n    observable.emit(data);\n  };\n}\n\n/**\n * Filter the value of an Observable\n * @param func {function}\n */\nexport function filterObservable(func) {\n  return (data, /** @param {Observable} */ observable) => {\n    if (func(data)) {\n      observable.emit(data);\n    }\n  };\n}\n\n/**\n * The value of the observable can be mapped and returned with transformations\n * @param func {function}\n */\nexport function mapObservable(func) {\n  return (data, /** @param {Observable} */ observable) => {\n    observable.emit(func(data));\n  };\n}\n","import Observable, {filterObservable, takeUntil} from \"../../utils/observable\";\nimport {EVENT_CLICK, EVENT_MOUSELEAVE, EVENT_MOUSEOUT, EVENT_TOUCHCANCEL, EVENT_TOUCHUP} from \"../../utils/variables\";\n\nexport default class BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    this.destroy = new Observable();\n    /** @member {Observable} */\n    this.eventEmitter = eventEmitter;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.lastMousePosition = null;\n    this.isMouseHover = false;\n\n    // toDo guille 27.08.21: improve this random value to be unique\n    this.id = Math.random() * 1000000;\n  }\n\n  set eventEmitter(value) {\n    this._eventEmitter = value ? value.pipe(takeUntil(this.destroy)) : value;\n  }\n\n  get eventEmitter() {\n    return this._eventEmitter;\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n  }\n\n  /**\n   * Event listener\n   * @param event {string}\n   * @param callback {function}\n   */\n  listenerEvent(event, callback) {\n    this.eventEmitter\n      .pipe(filterObservable((data) => data.event === event))\n      .on((data) => {\n        if (data && this.validateEventPropagation(data.position, data.event)) {\n          callback(data);\n        }\n      });\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   * @param event {string}\n   * @return {boolean}\n   */\n  validateEventPropagation(position, event) {\n    if (event === EVENT_TOUCHUP || event === EVENT_MOUSEOUT ||\n      event === EVENT_TOUCHCANCEL || event === EVENT_MOUSELEAVE) {\n      return true;\n    }\n    if (this.isPositionInside(this.lastMousePosition) && !this.isPositionInside(position)) {\n      this.eventEmitter.emit({event: EVENT_MOUSEOUT});\n    }\n    this.lastMousePosition = position;\n    return (this.isMouseHover = this.isPositionInside(position));\n  }\n\n  isPositionInside(position) {\n    return position && position.x >= this.x &&\n      position.x <= this.x + this.width &&\n      position.y >= this.y &&\n      position.y <= this.y + this.height;\n  }\n}\n","import BaseObject from \"../../components/shared/base-object\";\n\nexport default class Scene extends BaseObject {\n  /**\n   * @param navigator {Navigator}\n   * @param eventEmitter {Observable}\n   */\n  constructor(navigator, eventEmitter) {\n    super(eventEmitter);\n    this.navigator = navigator;\n    this.backgroundColor = \"#f00\";\n    /** @member {BaseObject[]} */\n    this.elements = [];\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    this.cleanCanvas(context);\n    // render scene elements\n    for(let element of this.elements) {\n      element.render(context);\n    }\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  cleanCanvas(context) {\n    context.rect(0, 0, this.width, this.height);\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   * @param event {string}\n   * @return {boolean}\n   */\n  validateEventPropagation(position, event) {\n    const validation = super.validateEventPropagation(position, event);\n    if (validation) {\n      for (const e of this.elements) {\n        if (e.validateEventPropagation(position, event)) {\n          return false;\n        }\n      }\n    }\n    return validation;\n  }\n}\n","import {SCREEN_WIDTH} from \"./variables\";\n\n/**\n * @param maxValue {number}\n * @param currentValue {number}\n */\nexport function linearFunction(maxValue, currentValue) {\n  return Math.min(currentValue / maxValue, 1);\n}\n\n/**\n * @param maxValue {number}\n * @param currentValue {number}\n */\nexport function logFunction(maxValue, currentValue) {\n  const x = (9 * currentValue) / maxValue + 1;\n  return Math.min(Math.log10(x), 1);\n}\n\n/**\n * @param vector {{x: number, y: number}}\n * @param pivot {{x: number, y: number}}\n * @param phi {number}\n * @return {{x: number, y: number}}\n */\nexport function getPointByVectorRotation(vector, pivot, phi) {\n  const result = rotateVector(vector, phi);\n  return {x: pivot.x + result.x, y: pivot.y - result.y};\n}\n\n/**\n * @param vector {{x: number, y: number}}\n * @param phi {number}\n * @return {{x: number, y: number}}\n */\nexport function rotateVector(vector, phi) {\n  return {\n    x: vector.x * Math.cos(phi) - vector.y * Math.sin(phi),\n    y: vector.x * Math.sin(phi) + vector.y * Math.cos(phi),\n  };\n}\n\nexport function getVector(p1, p2) {\n  return {x: p2.x - p1.x, y: p2.y - p1.y};\n}\n\nexport function distance(p1, p2) {\n  // toDo guille 31.08.21: maybe it can be improved (check it)\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\n/**\n * @param value {number}\n * @return {number}\n */\nexport function scale(value) {\n  return (value * window.currentWidth) / SCREEN_WIDTH;\n}\n\nexport function unscale(value) {\n  return (value * SCREEN_WIDTH) / window.currentWidth;\n}\n\n/**\n * @param limit {number}\n * @param start {number}\n * @returns {number}\n */\nexport function randomNumber(limit, start = 0) {\n  return Math.floor(Math.random() * limit) + start;\n}\n\n/**\n * @param shape1 {{x: number, y: number}[]}\n * @param shape2 {{x: number, y: number}[]}\n * @return {boolean}\n */\nexport function detectCollision(shape1, shape2) {\n  if (shape1.length < 3 || shape2.length < 3) {\n    return false;\n  }\n  const axis = [...extractAxis(shape1), ...extractAxis(shape2)];\n\n  for (const axi of axis) {\n    const p1 = shapeProjection(shape1, axi);\n    const p2 = shapeProjection(shape2, axi);\n    if (!((p1.min > p2.min && p1.min < p2.max) || (p1.max > p2.min && p1.max < p2.max) ||\n      (p2.min > p1.min && p2.min < p1.max) || (p2.max > p1.min && p2.max < p1.max) ||\n      (p1.min === p2.min && p1.max === p2.max))) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\n/**\n * @param shape {{x: number, y: number}[]}\n * @return {{x: number, y: number}[]}\n */\nfunction extractAxis(shape) {\n  if (shape.length <= 1) {\n    return [];\n  }\n  const axis = [];\n  for (let i = 1; i < shape.length; i++) {\n    axis.push({x: shape[i].x - shape[i - 1].x, y: shape[i - 1].y - shape[i].y});\n  }\n  axis.push({x: shape[0].x - shape[shape.length - 1].x, y: shape[shape.length - 1].y - shape[0].y});\n  return axis;\n}\n\n/**\n * @param shape {{x: number, y: number}[]}\n * @param v {{x: number, y: number}}\n * @return {{max: number, min: number}}\n */\nfunction shapeProjection(shape, v) {\n  let min = projection(v, shape[0]), max = min;\n  for (let i = 1; i < shape.length; i++) {\n    const p = projection(v, shape[i]);\n    min = Math.min(min, p);\n    max = Math.max(max, p);\n  }\n  return {min, max};\n}\n\n/**\n * @param v {{x: number, y: number}}\n * @param u {{x: number, y: number}}\n * @return {number}\n */\nfunction projection(v, u) {\n  return (u.x * v.x + u.y * v.y) / (v.x * v.x + v.y * v.y);\n}\n","import BaseObject from \"./base-object\";\nimport {getPointByVectorRotation, scale} from \"../../utils/helpers\";\n\nexport default class BaseShape extends BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = \"#00f\";\n    this.rotation = 0;\n    this.scaleShape = 4;\n    this.brakedShape = null;\n  }\n\n  updateCoordinates(x, y) {\n    this.x = x || this.x;\n    this.y = y || this.y;\n  }\n\n  render(context) {\n    // ship painted\n    const shapes = this.getProjection();\n\n    for (const shape of shapes) {\n      const points = shape.points;\n      if (points.length === 0) {\n        continue;\n      }\n      context.beginPath();\n      context.moveTo(scale(points[0].x), scale(points[0].y));\n      for (let i = 1; i < points.length; i++) {\n        context.lineTo(scale(points[i].x), scale(points[i].y));\n      }\n      context.closePath();\n      context.fillStyle = shape.background;\n      if (!this.brakedShape) {\n        context.stroke();\n      }\n      context.fill();\n    }\n  }\n\n  animate() {\n    this.moveBrakedPiece();\n  }\n\n  brakeShapes() {\n    const shapes = this.shipShape().shapes;\n\n    this.brakedShape = {shapes: []}\n\n    // brake in triangles\n    for (const shape of shapes) {\n      this.brakedShape = {\n        shapes: [...this.brakedShape.shapes, ...this.brakeShape(shape)]\n      };\n    }\n\n    // calculate direction vector\n    for (const shape of this.brakedShape.shapes) {\n      const cp = this.shapeCenter(shape.points);\n      const d = Math.random() + 0.5;\n      const factor = d / Math.sqrt(Math.pow(cp.x, 2) + Math.pow(cp.y, 2));\n      shape.vector = {x: cp.x * factor, y: cp.y * factor};\n    }\n  }\n\n  /**\n   * @param shape {{points: {x: number, y: number}[], background: string}}\n   * @return {{x: number, y: number}[]}\n   */\n  brakeShape(shape) {\n    if (shape.points.length === 0) {\n      return shape.points;\n    }\n    const {min, max} = this.coverBox(shape.points);\n\n    const fixedSize = 2;\n    const size = 2.5;\n    const newShapes = [];\n    let count = Math.ceil((max.x - min.x) * (max.y - min.y) / fixedSize);\n    count = Math.min(count, 150);\n\n    for (let i = 0; i < count; i++) {\n      const pos = {x: (max.x - min.x) * Math.random() + min.x, y: (max.y - min.y) * Math.random() + min.y};\n      newShapes.push({\n        points: new Array(3).fill(null)\n          .map(() => ({x: pos.x + size * Math.random(), y: pos.y + size * Math.random()})),\n        background: shape.background,\n      });\n    }\n\n    return newShapes;\n  }\n\n  /**\n   * @param points {{x: number, y: number}[]}\n   */\n  shapeCenter(points) {\n    const {min, max} = this.coverBox(points);\n    return {x: (max.x + min.x) / 2, y: (max.y + min.y) / 2};\n  }\n\n  coverBox(points) {\n    const min = {x: points[0].x, y: points[0].y}, max = {...min};\n    for (let i = 1; i < points.length; i++) {\n      min.x = Math.min(min.x, points[i].x);\n      min.y = Math.min(min.y, points[i].y);\n      max.x = Math.max(max.x, points[i].x);\n      max.y = Math.max(max.y, points[i].y);\n    }\n    return {min, max};\n  }\n\n  moveBrakedPiece() {\n    if (this.brakedShape) {\n      for (const shape of this.brakedShape.shapes) {\n        shape.points = shape.points.map((p) => ({x: p.x + shape.vector.x, y: p.y + shape.vector.y}));\n        shape.background = this.reduceOpacity(shape.background, 30);\n      }\n    }\n  }\n\n  /**\n   * @param color {string}\n   * @param extract {number}\n   * @returns {string}\n   */\n  reduceOpacity(color, extract) {\n    let alpha = this.getOpacity(color);\n    alpha = Math.min(255, Math.max(alpha - extract, 0));\n    alpha = alpha.toString(16);\n    return `#${color.substr(1, 6)}${(alpha.length < 2 ? \"0\" : \"\") + alpha}`;\n  }\n\n  /**\n   * @param color {string}\n   * @return {number}\n   */\n  getOpacity(color) {\n    return color.length > 7 ? parseInt(color.substr(7, 2), 16) : 255;\n  }\n\n  /**\n   * @return {{points: {x: number, y: number}[], background: string, smoke: boolean}[]}\n   */\n  getProjection() {\n    const rotation = this.rotation + Math.PI / 2;\n\n    const shapes = this.shipShape().shapes;\n    const pivot = {x: this.x, y: this.y};\n\n    const projectedShape = [];\n\n    for (const shape of shapes) {\n      const points = shape.points.map(p => ({x: p.x * this.scaleShape, y: p.y * this.scaleShape}));\n      for (let i = 0; i < points.length; i++) {\n        points[i] = getPointByVectorRotation(points[i], pivot, rotation);\n      }\n      projectedShape.push({...shape, points});\n    }\n    return projectedShape;\n  }\n\n  /**\n   * @returns {{shapes: {background: string, points: {x: number, y: number}}[]}}\n   */\n  shipShape() {\n    return {\n      shapes: [],\n    };\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport shape2 from \"../shapes/ship2.json\";\nimport {rotateVector} from \"../utils/helpers\";\n\nexport default class Ship extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    super(eventEmitter, x, y, width, height);\n    /** @member {number} */\n    this.rotation = Math.PI / 2;\n    this.scaleShape = 4;\n    this.shape = shape2;\n    this.animateSmokeInterval = 0;\n    this.enableSmoke = false;\n\n    this.updateCoordinates();\n  }\n\n  updateCoordinates(x, y) {\n    this.x = x || this.x;\n    this.y = y || this.y;\n  }\n\n  animate() {\n    super.animate();\n    this.animateSmoke();\n  }\n\n  animateSmoke() {\n    if (!this.brakedShape && this.enableSmoke) {\n      const origins = this.shape.shapes.filter((s) => s.smoke && this.getOpacity(s.background) > 0);\n      const MAX_SMOKE_ITEMS = 40;\n      const MAX_NEW_SMOKE_PER_ITERATION = 1;\n      const SMOKE_VELOCITY = 1;\n      const SMOKE_DELAY_CREATION = 0.5;\n      const SMOKE_RADIO = 1;\n      const SMOKE_POINTS = 6;\n      for (const origin of origins) {\n        origin.points = origin.points.map((p) => ({x: p.x + origin.vector.x, y: p.y + origin.vector.y}));\n        origin.background = this.reduceOpacity(origin.background, 8);\n      }\n\n      this.animateSmokeInterval++;\n      if (this.animateSmokeInterval > SMOKE_DELAY_CREATION) {\n        this.animateSmokeInterval = 0;\n        for (let i = Math.min(MAX_SMOKE_ITEMS - origins.length, MAX_NEW_SMOKE_PER_ITERATION); i >= 0; i--) {\n          const velocity = SMOKE_VELOCITY;\n          const dir = rotateVector({x: -velocity, y: 0}, Math.PI * 3 / 2);\n          const angle = Math.PI * 2 / SMOKE_POINTS;\n          origins.unshift({\n            background: \"#CCCCCC64\",\n            vector: {x: dir.x, y: dir.y},\n            smoke: true,\n            points: new Array(SMOKE_POINTS).fill(0)\n              .map((v, i) => rotateVector({x: SMOKE_RADIO * Math.random() + .6, y: 0}, i * angle)),\n          });\n        }\n      }\n      this.shape = {\n        shapes: [...origins, ...this.shape.shapes.filter((s) => !s.smoke)],\n      };\n    }\n  }\n\n  shipShape() {\n    return this.brakedShape || this.shape;\n  }\n\n}\n","import {detectCollision, linearFunction, randomNumber, rotateVector,} from \"../../utils/helpers\";\nimport {FPS, SCREEN_HEIGHT, SCREEN_WIDTH} from \"../../utils/variables\";\nimport {SHIP_PADDING_Y} from \"../play.scene\";\n\nconst SHIP_ACCELERATING = \"0\";\nconst SHIP_DECELERATING = \"1\";\nconst SHIP_STOP = \"3\";\nconst SHIP_ROTATING = \"4\";\nconst SHIP_DIE = \"5\";\nexport const SHIP_DIE_ANIMATION = \"6\";\nconst SHIP_PAUSE = \"7\";\n\nconst MAX_VELOCITY = 15;\nconst MARGIN_TO_COLLIDE = 50;\nconst TIME_TO_ROTATE_SHIP_MS = 400;\n\nconst MAX_DISTANCE_FOR_SHIP = 100;\nconst START_DISTANCE_FOR_SHIP = 200;\nconst MAX_DISTANCE_FOR_METEORITE = 250;\nconst START_DISTANCE_FOR_METEORITE = 150;\nconst SHIP_VELOCITY = 5;\nconst METEORITE_BASE_VELOCITY = 1.5;\nconst METEORITE_START_VELOCITY = 0.7;\n\nexport default class GameLogic {\n  constructor() {\n    /** @member {Score} */\n    this.score = null;\n    /** @member {Space[]} */\n    this.spaces = [];\n    this.time = 0;\n\n    this.ship = {\n      x: SCREEN_WIDTH / 2,\n      y: 0,\n      rotation: Math.PI / 2,\n      expectedRotation: 0,\n      velocity: 0,\n      minVelocity: 10,\n      acceleration: 20,\n      deceleration: -1.5,\n      status: [SHIP_STOP],\n      component: undefined,\n    };\n    this.enemies = [];\n    this.objects = [];\n\n    this.configs = {\n      maxDistanceForShip: MAX_DISTANCE_FOR_SHIP,\n      startDistanceForShip: START_DISTANCE_FOR_SHIP,\n      maxDistanceForMeteorite: MAX_DISTANCE_FOR_METEORITE,\n      startDistanceForMeteorite: START_DISTANCE_FOR_METEORITE,\n      shipVelocity: SHIP_VELOCITY,\n      meteoriteBaseVelocity: METEORITE_BASE_VELOCITY,\n      meteoriteStartVelocity: METEORITE_START_VELOCITY,\n    };\n  }\n\n  destroy() {\n    this.spaces.forEach(space => space.destroy.emit());\n    this.enemies.forEach(enemy => enemy.component.destroy.emit());\n    this.objects.forEach(obj => obj.component.destroy.emit());\n    this.ship.component.destroy.emit();\n  }\n\n  /**\n   * run an iteration of the game logic\n   */\n  play() {\n    if (this.shipStatus() === SHIP_PAUSE) {\n      return;\n    }\n    this.animateComponents();\n    if (!this.isFinish() && this.shipStatus() !== SHIP_DIE_ANIMATION) {\n      this.time++;\n      this.moveShip();\n      this.updateComponents();\n      this.updateSpaces();\n      this.updateScore();\n      this.checkCollision();\n      this.updateGameDifficulty();\n    } else if (this.shipStatus() === SHIP_DIE_ANIMATION) {\n      this.time++;\n      if (this.time > 20) {\n        this.ship.status = [SHIP_DIE];\n      }\n    }\n  }\n\n  updateGameDifficulty() {\n    this.configs.maxDistanceForShip = this.calculateScaleValue(MAX_DISTANCE_FOR_SHIP, 50);\n    this.configs.startDistanceForShip = this.calculateScaleValue(START_DISTANCE_FOR_SHIP, 100);\n    this.configs.maxDistanceForMeteorite = this.calculateScaleValue(MAX_DISTANCE_FOR_METEORITE, 150);\n    this.configs.startDistanceForMeteorite = this.calculateScaleValue(START_DISTANCE_FOR_METEORITE, 50);\n    this.configs.shipVelocity = this.calculateScaleValue(SHIP_VELOCITY, 7, 1);\n    this.configs.meteoriteBaseVelocity = this.calculateScaleValue(METEORITE_BASE_VELOCITY, 3, 1);\n    this.configs.meteoriteStartVelocity = this.calculateScaleValue(METEORITE_START_VELOCITY, 2, 1);\n  }\n\n  /**\n   * @param start {number}\n   * @param end {number}\n   * @param sign {number}\n   * @return {number}\n   */\n  calculateScaleValue(start, end, sign = -1) {\n    return start + (Math.abs(start - end) * linearFunction(500, this.getScore()) * sign);\n  }\n\n  animateComponents() {\n    // animation in general\n    this.enemies.forEach((e) => e.component.animate());\n    this.objects.forEach((o) => o.component.animate());\n    this.ship.component.animate();\n  }\n\n  pause() {\n    if (!this.isFinish() && this.canPauseGame()) {\n      this.ship.status.push(SHIP_PAUSE);\n    }\n  }\n\n  unpause() {\n    if (this.shipStatus() === SHIP_PAUSE) {\n      this.ship.status.pop();\n    }\n  }\n\n  updateSpaces() {\n    this.spaces.forEach((space) => space.setShipPosition(this.ship.y));\n  }\n\n  updateScore() {\n    this.score.score = this.getScore();\n  }\n\n  /**\n   * @return {number}\n   */\n  getScore() {\n    return Math.floor(this.ship.y / 50);\n  }\n\n  checkCollision() {\n    const shapes = this.ship.component.getProjection().filter((p) => !p.smoke);\n    let component;\n    for (const enemy of this.enemies) {\n      const enemyShapes = enemy.component.getProjection().filter((p) => !p.smoke);\n      if (this.checkCollisionInProjections(shapes, enemyShapes)) {\n        this.ship.status = [SHIP_DIE_ANIMATION];\n        component = enemy.component;\n      }\n    }\n    for (const obj of this.objects) {\n      const objShapes = obj.component.getProjection();\n      if (this.checkCollisionInProjections(shapes, objShapes)) {\n        this.ship.status = [SHIP_DIE_ANIMATION];\n        component = obj.component;\n      }\n    }\n    if (this.shipStatus() === SHIP_DIE_ANIMATION) {\n      component.brakeShapes();\n      this.ship.component.brakeShapes();\n      this.time = 0;\n    }\n  }\n\n  /**\n   * @param shapes1 {{points: {x: number, y: number}[], background: string}[]}\n   * @param shapes2 {{points: {x: number, y: number}[], background: string}[]}\n   * @return {boolean}\n   */\n  checkCollisionInProjections(shapes1, shapes2) {\n    for (const s1 of shapes1) {\n      for (const s2 of shapes2) {\n        if (detectCollision(s1.points, s2.points)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param ship {Ship}\n   */\n  createEnemy(ship) {\n    const xPosition = this.getRandomXPosition();\n    const rotation = (Math.PI / 3) * 2 * Math.random() + Math.PI / 6 + Math.PI;\n    this.enemies.push({\n      x: xPosition,\n      y: SCREEN_HEIGHT + this.ship.y + 100,\n      rotation,\n      expectedRotation: rotation,\n      velocity: this.configs.shipVelocity,\n      component: ship,\n    });\n  }\n\n  /**\n   * @param meteorite {Meteorite}\n   */\n  createMeteorite(meteorite) {\n    const xPosition = this.getRandomXPosition();\n    this.objects.push({\n      x: xPosition,\n      expectedX: xPosition,\n      y: SCREEN_HEIGHT + this.ship.y + 100,\n      velocity: this.configs.meteoriteBaseVelocity * Math.random() + this.configs.meteoriteStartVelocity,\n      rotation: 0,\n      component: meteorite,\n    });\n  }\n\n  /**\n   * @param id {number}\n   */\n  removeObject(id) {\n    this.objects = this.objects.filter((obj) => obj.component.id !== id);\n  }\n\n  /**\n   * @param id {number}\n   */\n  removeEnemy(id) {\n    this.enemies = this.enemies.filter((enemy) => enemy.component.id !== id);\n  }\n\n  /**\n   * Update visual components in relation with the game logic\n   */\n  updateComponents() {\n    // update ship visual component\n    this.ship.component.updateCoordinates(this.ship.x);\n    this.ship.component.rotation = this.ship.rotation;\n\n    this.enemies.forEach((enemy) => {\n      this.moveEnemy(enemy);\n      enemy.component.updateCoordinates(\n        enemy.x,\n        SCREEN_HEIGHT - (enemy.y - this.ship.y)\n      );\n      enemy.component.rotation = enemy.rotation;\n    });\n\n    this.objects.forEach((obj) => {\n      this.moveMeteorite(obj);\n      obj.component.updateCoordinates(\n        obj.x,\n        SCREEN_HEIGHT - (obj.y - this.ship.y)\n      );\n      if (obj.expectedX === obj.x) {\n        obj.expectedX = this.getRandomXPosition();\n      }\n    });\n  }\n\n  moveEnemy(enemy) {\n    this.wallCollision(enemy);\n    this.rotate(enemy);\n\n    const movement = rotateVector({x: enemy.velocity, y: 0}, enemy.rotation);\n    enemy.x += movement.x;\n    enemy.y += movement.y;\n  }\n\n  moveMeteorite(obj) {\n    const velocity = obj.velocity;\n    let x = obj.x + (obj.x > obj.expectedX ? -velocity : obj.x < obj.expectedX ? velocity : 0);\n    if ((obj.x > obj.expectedX && x < obj.expectedX) || (obj.x < obj.expectedX && x > obj.expectedX)) {\n      x = obj.expectedX;\n    }\n    obj.x = x;\n  }\n\n  getRandomXPosition() {\n    return randomNumber(SCREEN_WIDTH - SHIP_PADDING_Y, SHIP_PADDING_Y / 2);\n  }\n\n  /**\n   * @param rotation {number}\n   */\n  launchShip(rotation) {\n    this.time = 0;\n    this.ship.expectedRotation = rotation;\n    this.ship.status = [SHIP_ACCELERATING];\n  }\n\n  moveShip() {\n    if (!this.isShipStopped()) {\n      if (this.wallCollision(this.ship)) {\n        this.ship.status.push(SHIP_ROTATING);\n      }\n      this.ship.component.enableSmoke = true;\n\n      this.calculateVelocity();\n      this.rotateShip();\n      const movement = rotateVector({x: this.ship.velocity, y: 0}, this.ship.rotation);\n\n      this.ship.x += movement.x;\n      this.ship.y += movement.y;\n    } else {\n      this.ship.component.enableSmoke = false;\n    }\n  }\n\n  rotateShip() {\n    this.rotate(this.ship);\n    // stop rotation\n    if (this.ship.rotation === this.ship.expectedRotation && this.shipStatus() === SHIP_ROTATING) {\n      this.ship.status.pop();\n    }\n  }\n\n  /**\n   * @param obj {{rotation: number, expectedRotation: number}}\n   * @param dir {number}\n   */\n  rotate(obj, dir = 1) {\n    const rotationFactor = ((1000 / FPS) * Math.PI) / TIME_TO_ROTATE_SHIP_MS * dir;\n    if (obj.rotation > obj.expectedRotation) {\n      obj.rotation = Math.max(obj.rotation - rotationFactor, obj.expectedRotation);\n    } else {\n      obj.rotation = Math.min(obj.rotation + rotationFactor, obj.expectedRotation);\n    }\n  }\n\n  calculateVelocity() {\n    if (this.shipStatus() === SHIP_ROTATING) {\n      return;\n    }\n    let velocity = 0;\n    if (this.shipStatus() === SHIP_ACCELERATING) {\n      velocity = this.ship.velocity + (this.ship.acceleration * FPS) / 1000;\n      if (velocity > MAX_VELOCITY) {\n        this.ship.status = [SHIP_DECELERATING];\n      }\n    }\n    if (this.shipStatus() === SHIP_DECELERATING) {\n      velocity = this.ship.velocity + (this.ship.deceleration * FPS) / 1000;\n      velocity = Math.max(velocity, this.ship.minVelocity);\n    }\n    this.ship.velocity = velocity;\n  }\n\n  isShipStopped() {\n    return this.shipStatus() === SHIP_STOP;\n  }\n\n  isFinish() {\n    return this.shipStatus() === SHIP_DIE;\n  }\n\n  canPauseGame() {\n    return this.notMathStatus([SHIP_DIE_ANIMATION, SHIP_DIE, SHIP_PAUSE]);\n  }\n\n  isShipClickable() {\n    return this.notMathStatus([SHIP_ROTATING, SHIP_DIE, SHIP_DIE_ANIMATION, SHIP_PAUSE]);\n  }\n\n  notMathStatus(statuses) {\n    return statuses.reduce(\n      (prev, status) => prev && this.shipStatus() !== status,\n      true\n    );\n  }\n\n  /**\n   * @param obj {{rotation: number, expectedRotation: number, x: number}}\n   * @return {boolean}\n   */\n  wallCollision(obj) {\n    if (\n      (obj.rotation === obj.expectedRotation &&\n        obj.x < MARGIN_TO_COLLIDE) ||\n      (obj.rotation === obj.expectedRotation &&\n        obj.x > SCREEN_WIDTH - MARGIN_TO_COLLIDE)\n    ) {\n      obj.expectedRotation = Math.PI - obj.rotation;\n      obj.expectedRotation += obj.expectedRotation < 0 ? Math.PI * 2 : 0;\n      return true;\n    }\n    return false;\n  }\n\n  shipStatus() {\n    return this.ship.status[this.ship.status.length - 1];\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport {scale} from \"../utils/helpers\";\n\nexport default class Score extends BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number} corner coordinates\n   * @param y {number} corner coordinates\n   */\n  constructor(eventEmitter, x, y) {\n    super(eventEmitter, x, y);\n    this.score = 0;\n    this.textSize = 30;\n    this.backgroundColor = \"#000\";\n    this.textColor = \"#fff\";\n\n    this.lastTime = 0;\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    context.font = `${scale(this.textSize)}px Arial`;\n    const metrics = context.measureText(this.score + \"\");\n    const textWidth = metrics.width;\n    const textHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n    const padding = 5;\n\n    context.beginPath();\n    context.rect(\n      scale(this.x - textWidth - padding * 2),\n      scale(this.y),\n      scale(textWidth + padding * 2),\n      scale(textHeight + padding * 2)\n    );\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n\n    context.beginPath();\n    context.font = `${scale(this.textSize)}px Arial`;\n    context.fillStyle = this.textColor;\n    context.fillText(\n      this.score + \"\",\n      scale(this.x - textWidth - padding),\n      scale(this.y + textHeight + padding)\n    );\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport {scale,randomNumber} from \"../utils/helpers\";\nimport {SCREEN_HEIGHT, SCREEN_WIDTH} from \"../utils/variables\";\n\nexport class Star extends BaseObject {\n  /**\n   * @param evenEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param ratio {number}\n   * @param groupIndex {number}\n   */\n  constructor(evenEmitter, x, y, ratio, groupIndex) {\n    super(evenEmitter, x, y, ratio);\n    this.group = groupIndex;\n    this.shipY = 0;\n  }\n\n  render(context) {\n    context.beginPath();\n    context.fillStyle = \"rgba(255,255,255,0.4)\";\n    context.arc(\n      scale(this.x),\n      scale(this.y + this.shipY - this.group * SCREEN_HEIGHT),\n      scale(this.width), 0, Math.PI * 2);\n    context.fill();\n  }\n}\n\nexport default class Space extends BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param ratio {number}\n   * @param velocity {number}\n   * @param background {string}\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0,\n              ratio, velocity = 1, background = \"\") {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = background;\n    this.shipY = 0;\n    /** @member {Star[][]} */\n    this.stars = [];\n    this.groupCount = 0;\n    this.ratio = ratio;\n    this.velocity = velocity;\n\n    // visible space\n    this.generateSpace();\n    // next space\n    this.generateSpace();\n  }\n\n  /**\n   * @param y {number}\n   */\n  setShipPosition(y) {\n    this.shipY = y / this.velocity;\n  }\n\n  render(context) {\n    if (this.backgroundColor) {\n      context.beginPath();\n      context.fillStyle = this.backgroundColor;\n      context.rect(0, 0, scale(this.width), scale(this.height));\n      context.fill();\n    }\n\n    let removeGroup = false;\n    for (let i = 0; i < this.stars.length; i++) {\n      let visible = false;\n      this.stars[i].forEach((star) => {\n        if (this.isVisibleStar(star)) {\n          star.shipY = this.shipY;\n          star.render(context);\n          visible = true;\n        }\n      });\n      removeGroup |= !visible && i === 0;\n    }\n    if (removeGroup) {\n      this.stars.shift();\n      this.generateSpace();\n    }\n  }\n\n  generateSpace() {\n    const numberOfStars = 20;\n    const group = [];\n    for (let i = 0; i < numberOfStars; i++) {\n      group.push(new Star(this.eventEmitter, randomNumber(SCREEN_WIDTH),\n        randomNumber(this.height), this.ratio, this.groupCount));\n    }\n    this.groupCount++;\n    this.stars.push(group);\n  }\n\n  /**\n   * @param star {Star}\n   * @return {boolean}\n   */\n  isVisibleStar(star) {\n    const starY = star.y + this.shipY - star.group * SCREEN_HEIGHT;\n    return starY >= 0 && starY < SCREEN_HEIGHT;\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport {getVector, randomNumber, rotateVector} from \"../utils/helpers\";\n\nexport default class Meteorite extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param ratio {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, ratio = 0) {\n    ratio += (ratio / 2) * Math.random();\n    super(eventEmitter, x, y, ratio, 0);\n    this.rotationAnimate = Math.PI / 30 * Math.random() * (randomNumber(2) ? 1 : -1);\n    this.expectedX = 0;\n\n    this.generateShape();\n    this.updateCoordinates();\n  }\n\n  shipShape() {\n    return this.brakedShape || this.shape;\n  }\n\n  generateShape() {\n    let points = [];\n    const startPoints = 6;\n    const iterations = 4;\n    const angle = (Math.PI * 2) / startPoints;\n    for (let i = 0; i < startPoints; i++) {\n      points.push(rotateVector({x: this.width / 2, y: 0}, angle * i));\n    }\n    for (let i = 0; i < iterations; i++) {\n      const newPoints = [points[0]];\n      for (let j = 1; j < points.length; j++) {\n        newPoints.push(this.randomMiddlePoint(points[j - 1], points[j]));\n        newPoints.push(points[j]);\n      }\n      newPoints.push(this.randomMiddlePoint(points[points.length - 1], points[0]));\n      points = newPoints;\n    }\n    this.shape = {shapes: [{background: \"#b3b3b3\", points}]};\n  }\n\n  randomMiddlePoint(p1, p2) {\n    const mp = {x: (p1.x + p2.x) / 2, y: (p1.y + p2.y) / 2};\n    const v1 = getVector(p1, p2);\n    const v2 = rotateVector(v1, Math.PI / 2);\n    const factor = randomNumber(3, -1) / 7;\n    return {\n      x: mp.x + v2.x * factor,\n      y: mp.y + v2.y * factor,\n    };\n  }\n\n  animate() {\n    super.animate();\n    if (!this.brakedShape) {\n      this.rotation += this.rotationAnimate;\n    }\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport {scale, unscale} from \"../utils/helpers\";\nimport {EVENT_MOUSEMOVE, EVENT_MOUSEOUT} from \"../utils/variables\";\n\nexport default class Button extends BaseObject {\n  /**\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param text {string}\n   * @param eventEmitter {Observable}\n   */\n  constructor(eventEmitter, x, y, width, height, text) {\n    super(eventEmitter, x, y, width, height);\n    this.text = text;\n    this.textSize = 10;\n    this.backgroundColor = \"#000\";\n    this.textColor = \"#fff\";\n    this.textColorHover = \"#9a9a9a\";\n\n    this.listenerEvent(EVENT_MOUSEMOVE, (data) => {\n      if (this.isPositionInside(data.position)) {\n        document.body.style.cursor = \"pointer\";\n      }\n    });\n    this.listenerEvent(EVENT_MOUSEOUT, (data) => {\n      document.body.style.cursor = \"default\";\n    });\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    context.beginPath();\n    context.rect(scale(this.x), scale(this.y), scale(this.width), scale(this.height));\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n\n    context.beginPath();\n    context.font = `${scale(this.textSize)}px Arial`;\n    const metrics = context.measureText(this.text);\n    const textWidth = unscale(metrics.width);\n    const textHeight = unscale(metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n    context.fillStyle = this.isMouseHover ? this.textColorHover : this.textColor;\n    context.text\n    context.fillText(\n      this.text,\n      scale(this.x + this.width / 2 - textWidth / 2),\n      scale(this.y + this.height / 2 + textHeight / 2)\n    );\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport {EVENT_CLICK, SCREEN_HEIGHT, SCREEN_WIDTH} from \"../utils/variables\";\nimport {scale, unscale} from \"../utils/helpers\";\nimport Button from \"./button\";\n\nexport default class Modal extends BaseObject {\n  /**\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param eventEmitter {Observable}\n   */\n  constructor(eventEmitter, x, y, width, height) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = \"#fff\";\n    this.textSize = 90;\n    this.text2Size = 30;\n    this.text = \"RECORD\";\n    this.score = 1000;\n\n    const buttonHeight = 30,\n      button1Width = 40,\n      button2Width = 120,\n      buttonMargin = 15;\n\n    this.createCredits(this.x + buttonMargin,\n      this.y,\n      button1Width,\n      buttonHeight);\n    this.createPlayButton(this.x + (this.width - button1Width - button2Width - buttonMargin) / 2,\n      this.y + this.height - buttonHeight - buttonMargin,\n      button1Width,\n      buttonHeight);\n    this.createShareButton(this.x + (this.width - button1Width - button2Width - buttonMargin) / 2 + button1Width + buttonMargin,\n      this.y + this.height - buttonHeight - buttonMargin,\n      button2Width,\n      buttonHeight);\n  }\n\n  createPlayButton(x, y, w, h) {\n    this.buttonPlay = new Button(this.eventEmitter, x, y, w, h, \"PLAY\");\n  }\n\n  createCredits(x, y, w, h) {\n    this.buttonCredits = new Button(this.eventEmitter, x, y, w, h, \"@ggjnez92\");\n    this.buttonCredits.backgroundColor = \"#00000000\";\n    this.buttonCredits.textColor = \"#000\";\n    this.buttonCredits.textColorHover = \"#0048ff\";\n    this.buttonCredits.listenerEvent(EVENT_CLICK, () =>\n      window.open(\"https://twitter.com/ggjnez92\", \"_blank\").focus());\n  }\n\n  createShareButton(x, y, w, h) {\n    this.buttonShareRecord = new Button(this.eventEmitter, x, y, w, h, \"SHARE ON TWITTER\");\n    this.buttonShareRecord.listenerEvent(EVENT_CLICK, () => {\n      const message = `I%20just%20make%20a%20new%20record%20of%20${this.score}%20points%20in%20the%20%23azetz%20%23game%20developed%20for%20the%20%40js13kGames%20competition.%0A%0A%23js13k%20%23gamedev%0A%0AIf%20you%20want%20to%20check%20it%20out%2C%20here%20is%20the%20link%20to%20the%20%23github%20repository%0Ahttps%3A%2F%2Fgithub.com%2Finflagames%2Fazetz`;\n      const url = `https://twitter.com/intent/tweet?text=${message}`;\n      window.open(url, \"_blank\").focus();\n    });\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    context.beginPath();\n    context.rect(0, 0, scale(SCREEN_WIDTH), scale(SCREEN_HEIGHT));\n    context.fillStyle = \"rgba(0,0,0,0.82)\";\n    context.fill();\n\n    context.beginPath();\n    context.rect(scale(this.x), scale(this.y), scale(this.width), scale(this.height));\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n\n    this.buttonPlay.render(context);\n    this.buttonCredits.render(context);\n    this.buttonShareRecord.render(context);\n\n    this.renderScore(context);\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  renderScore(context) {\n    // toDo guille 01.09.21: refactor this code\n    context.beginPath();\n    context.font = `${scale(this.textSize)}px Arial`;\n    const metrics = context.measureText(this.score + \"\");\n    const textWidth = unscale(metrics.width);\n    const textHeight = unscale(metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n    context.fillStyle = \"#000\";\n    context.fillText(\n      this.score + \"\",\n      scale(this.x + this.width / 2 - textWidth / 2),\n      scale(this.y + this.height / 2 + textHeight / 2)\n    );\n\n    context.beginPath();\n    context.font = `${scale(this.text2Size)}px Arial`;\n    const metrics2 = context.measureText(this.text);\n    const text2Width = unscale(metrics2.width);\n    const text2Height = unscale(metrics2.actualBoundingBoxAscent + metrics2.actualBoundingBoxDescent);\n    context.fillStyle = \"#000\";\n    context.fillText(\n      this.text,\n      scale(this.x + this.width / 2 - text2Width / 2),\n      scale(this.y + this.height / 2 + textHeight / 2 - textHeight - text2Height / 2)\n    );\n  }\n}\n","const APPLICATION_PREFIX = 'azetzv1';\nconst SCORE_KEY = `${APPLICATION_PREFIX}_game_score`;\n\n/** @type Data */\nlet data = null;\n\nexport default class Data {\n  static getInstance() {\n    if (!data) {\n      data = new Data();\n    }\n    return data;\n  }\n\n  /**\n   * @param score {number}\n   */\n  saveScore(score) {\n    localStorage.setItem(SCORE_KEY, score + '');\n  }\n\n  getScore() {\n    const score = localStorage.getItem(SCORE_KEY);\n    return score ? +score : 0;\n  }\n}\n","export const isMobileMethod = {\n  Android: function () {\n    return navigator.userAgent.match(/Android/i);\n  },\n  BlackBerry: function () {\n    return navigator.userAgent.match(/BlackBerry/i);\n  },\n  iOS: function () {\n    return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n  },\n  Opera: function () {\n    return navigator.userAgent.match(/Opera Mini/i);\n  },\n  Windows: function () {\n    return (\n      navigator.userAgent.match(/IEMobile/i) ||\n      navigator.userAgent.match(/WPDesktop/i)\n    );\n  },\n  any: function () {\n    return (\n      isMobileMethod.Android() ||\n      isMobileMethod.BlackBerry() ||\n      isMobileMethod.iOS() ||\n      isMobileMethod.Opera() ||\n      isMobileMethod.Windows()\n    );\n  },\n};\n","import Scene from \"./shared/scene\";\nimport {\n  EVENT_CLICK,\n  EVENT_MOUSEDOWN,\n  EVENT_MOUSEMOVE, EVENT_MOUSEUP,\n  EVENT_TOUCHDOWN, EVENT_TOUCHMOVE,\n  EVENT_TOUCHUP,\n  SCREEN_HEIGHT, SCREEN_WIDTH\n} from \"../utils/variables\";\nimport Ship from \"../components/ship\";\nimport GameLogic, {SHIP_DIE_ANIMATION} from \"./shared/game.logic\";\nimport {randomNumber} from \"../utils/helpers\";\nimport Score from \"../components/score\";\nimport Space from \"../components/space\";\nimport shape3 from \"../shapes/ship3.json\";\nimport shape4 from \"../shapes/ship4.json\";\nimport Meteorite from \"../components/meteorite\";\nimport Modal from \"../components/modal\";\nimport Button from \"../components/button\";\nimport Data from \"../utils/data\";\nimport {isMobileMethod} from \"../utils/mobile-device\";\n\nexport const isMobile = isMobileMethod.any();\n\nexport const SHIP_PADDING_Y = 100;\nconst SCORE_MARGIN = 10;\n\nexport default class ScenePlay extends Scene {\n  /**\n   * @param navigator {Navigator}\n   * @param eventEmitter {Observable}\n   */\n  constructor(navigator, eventEmitter) {\n    super(navigator, eventEmitter);\n\n    /** @member {Space[]} */\n    this.spaces = [];\n\n    this.buttonPause = new Button(this.eventEmitter, SCORE_MARGIN, SCORE_MARGIN, 60, 30, \"PAUSE\");\n    this.buttonPause.textSize = 20;\n    this.buttonPause.listenerEvent(EVENT_CLICK, () => {\n      if (this.currentGame.canPauseGame()) {\n        this.currentGame.pause();\n        this.showModal(Data.getInstance().getScore(), false);\n      }\n    });\n\n    // ship touch area component\n    this.listenerEvent(EVENT_MOUSEDOWN, this.shipClickDown.bind(this));\n    this.listenerEvent(EVENT_TOUCHDOWN, this.shipClickDown.bind(this));\n\n    // subscribe to scene events\n    this.listenerEvent(EVENT_MOUSEUP, this.shipClickUp.bind(this));\n    this.listenerEvent(EVENT_MOUSEMOVE, this.shipClickMove.bind(this));\n    this.listenerEvent(EVENT_TOUCHUP, this.shipClickUp.bind(this));\n    this.listenerEvent(EVENT_TOUCHMOVE, this.shipClickMove.bind(this));\n\n    this.initGame();\n  }\n\n  initGame() {\n    // last object creation\n    this.createNextObject = 0;\n    this.createNextShip = 0;\n    this.isModalShow = false;\n\n    // game logic\n    if (this.currentGame) {\n      this.currentGame.destroy();\n    }\n    this.currentGame = new GameLogic();\n\n    // space background\n    this.spaces.push(new Space(this.eventEmitter, 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, 3, 1.1, \"rgba(0,0,0,1)\"));\n    this.spaces.push(new Space(this.eventEmitter, 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, 2, 1.2));\n    this.spaces.push(new Space(this.eventEmitter, 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, 1, 1.5));\n    this.currentGame.spaces = this.spaces;\n\n    // ship component\n    this.ship = new Ship(this.eventEmitter, SCREEN_WIDTH / 2,\n      SCREEN_HEIGHT - SHIP_PADDING_Y, 30, 35);\n    this.currentGame.ship.component = this.ship;\n\n    // score component\n    const score = new Score(this.eventEmitter, SCREEN_WIDTH - SCORE_MARGIN, SCORE_MARGIN);\n    this.currentGame.score = score;\n\n    // add components to the element array\n    this.elements = [this.ship, this.buttonPause];\n    this.elements.push(score);\n\n    // elements of the game\n    this.playableElements = [this.ship];\n  }\n\n  shipClickUp() {\n    if (this.shipPressed) {\n      this.shipPressed = false;\n      this.currentGame.launchShip(this.calculateShipRotation(this.directionToFlight));\n      if (isMobile) {\n        this.directionToFlight = null;\n      }\n    }\n  }\n\n  shipClickDown() {\n    if (this.currentGame.isShipClickable()) {\n      this.shipPressed = true;\n    }\n  }\n\n  shipClickMove(data) {\n    this.directionToFlight = data.position;\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    if (!this.time) {\n      this.time=0;\n    }\n    this.time++;\n    if(this.time>100) {\n      this.time = 0;\n      console.log('this.playableElements.length', this.playableElements.length);\n      console.log('this.currentGame.ship.length', this.currentGame.enemies.length);\n      console.log('this.currentGame.objects.length', this.currentGame.objects.length);\n    }\n    // execute game logic\n    this.currentGame.play();\n\n    this.preShakeScreen(context);\n\n    if (this.currentGame.isFinish()) {\n      this.showModal(this.currentGame.getScore());\n    }\n\n    // render background\n    this.cleanCanvas(context);\n\n    if (this.currentGame.isShipStopped()) {\n      this.ship.rotation = this.calculateShipRotation(this.directionToFlight);\n    }\n\n    this.renderOrRemovePlayableElements(context);\n\n    // render scene elements\n    for (const element of this.elements) {\n      element.render(context);\n    }\n\n    this.createEnemyByTime();\n\n    this.posShakeScreen(context);\n  }\n\n  preShakeScreen(context) {\n    if (this.currentGame.shipStatus() === SHIP_DIE_ANIMATION) {\n      const SHAKE_DURATION = 10;\n      if (this.currentGame.time > SHAKE_DURATION) {\n        return;\n      }\n      context.save();\n      const dx = randomNumber(20, -10);\n      const dy = randomNumber(20, -10);\n      context.translate(dx, dy);\n    }\n  }\n\n  posShakeScreen(context) {\n    if (this.currentGame.shipStatus() === SHIP_DIE_ANIMATION) {\n      context.restore();\n    }\n  }\n\n  showModal(score, restartGame = true) {\n    if (!this.isModalShow) {\n      this.isModalShow = true;\n      const modalWidth = 300;\n      const modalHeight = 200;\n      const modal = new Modal(\n        this.eventEmitter,\n        SCREEN_WIDTH / 2 - modalWidth / 2,\n        SCREEN_HEIGHT / 2 - modalWidth / 2,\n        modalWidth,\n        modalHeight\n      );\n      Data.getInstance().saveScore(Math.max(Data.getInstance().getScore(), score));\n      modal.score = score;\n      modal.buttonPlay.listenerEvent(EVENT_MOUSEUP, () => {\n        modal.buttonPlay.destroy.emit();\n        modal.buttonShareRecord.destroy.emit();\n        modal.buttonCredits.destroy.emit();\n        this.currentGame.unpause();\n        this.elements.pop();\n        this.isModalShow = false;\n        if (restartGame) {\n          this.initGame();\n        }\n      });\n      this.elements.push(modal);\n    }\n  }\n\n  createEnemyByTime() {\n    if (this.createNextObject < this.currentGame.ship.y) {\n      this.createNextObject = this.currentGame.ship.y +\n        randomNumber(this.currentGame.configs.maxDistanceForMeteorite, this.currentGame.configs.startDistanceForMeteorite);\n      this.createMeteorite();\n    }\n    if (this.createNextShip < this.currentGame.ship.y) {\n      this.createNextShip = this.currentGame.ship.y +\n        randomNumber(this.currentGame.configs.maxDistanceForShip, this.currentGame.configs.startDistanceForShip);\n      this.createEnemy();\n    }\n  }\n\n  createEnemy() {\n    const ship = new Ship(this.eventEmitter, 0, -SCREEN_HEIGHT, 30, 35);\n    ship.shape = randomNumber(2) ? shape3 : shape4;\n    ship.enableSmoke = true;\n    this.playableElements.push(ship);\n    this.currentGame.createEnemy(ship);\n  }\n\n  createMeteorite() {\n    const meteorite = new Meteorite(this.eventEmitter, 0, -SCREEN_HEIGHT, 11);\n    this.playableElements.push(meteorite);\n    this.currentGame.createMeteorite(meteorite);\n  }\n\n  renderOrRemovePlayableElements(context) {\n    const toRemove = new Set();\n    for (const element of this.playableElements) {\n      if (this.isElementVisible(element)) {\n        element.render(context);\n      } else {\n        toRemove.add(element.id);\n        this.currentGame.removeEnemy(element.id);\n        this.currentGame.removeObject(element.id);\n      }\n    }\n    this.playableElements = this.playableElements.filter((ele) => !toRemove.has(ele.id));\n  }\n\n  isElementVisible(element) {\n    return element.y - element.height * 2 < SCREEN_HEIGHT;\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   * @returns {number}\n   */\n  calculateShipRotation(position) {\n    if (position) {\n      const angle = Math.PI / 6;\n      const rotation = Math.atan2((SCREEN_HEIGHT - SHIP_PADDING_Y) - position.y, position.x - this.ship.x);\n      if (rotation >= 0) {\n        return Math.min(Math.PI - angle, Math.max(angle, rotation));\n      }\n      return -rotation < Math.PI / 2 ? angle : Math.PI - angle;\n    }\n    return Math.PI / 2;\n  }\n\n  cleanCanvas(context) {\n    this.spaces.forEach((space) => space.render(context));\n  }\n}\n","import {\n  EVENT_RESIZE,\n  SCENE_GAME,\n  SCREEN_RATIO,\n  SCREEN_WIDTH,\n} from \"./utils/variables\";\nimport ScenePlay from \"./scenes/play.scene\";\nimport Observable from \"./utils/observable\";\n\nexport default class Navigator {\n  /**\n   * @param scene {number}\n   * @param eventEmitter {Observable}\n   */\n  constructor(scene, eventEmitter) {\n    this.gameWidth = SCREEN_WIDTH;\n    this.gameHeght = SCREEN_WIDTH * SCREEN_RATIO;\n    this.sceneClasses = new Map();\n    this.sceneClasses.set(SCENE_GAME, ScenePlay);\n    this.scenesInstances = new Map();\n    /** @member {Scene} */\n    this.currentScene = null;\n    eventEmitter.on((data) => {\n      this.currentScene.eventEmitter.emit(data);\n      if (data.event === EVENT_RESIZE && data.dimension) {\n        this.gameWidth = data.dimension.w;\n        this.gameHeght = data.dimension.h;\n        this.updateGameDimensions();\n      }\n    });\n\n    // initial navigation\n    this.navigate(scene);\n  }\n\n  /**\n   * Navigate to a different scene\n   * @param scene {number}\n   */\n  navigate(scene) {\n    if (this.scenesInstances.has(scene)) {\n      this.currentScene = this.scenesInstances.get(scene);\n    } else if (this.sceneClasses.has(scene)) {\n      this.scenesInstances.set(\n        scene,\n        new (this.sceneClasses.get(scene))(this, new Observable()),\n      );\n      this.currentScene = this.scenesInstances.get(scene);\n    }\n    this.updateGameDimensions();\n  }\n\n  updateGameDimensions() {\n    if (this.currentScene) {\n      this.currentScene.width = this.gameWidth;\n      this.currentScene.height = this.gameHeght;\n    }\n  }\n}\n","import Navigator from \"./navigator\";\nimport Observable from \"./utils/observable\";\nimport { unscale } from \"./utils/helpers\";\nimport {\n  SCREEN_WIDTH,\n  SCREEN_RATIO,\n  SCENE_GAME,\n  STOP,\n  EVENT_CLICK,\n  EVENT_MOUSEDOWN,\n  EVENT_MOUSEUP,\n  EVENT_MOUSEOUT,\n  EVENT_MOUSELEAVE,\n  EVENT_MOUSEMOVE,\n  EVENT_TOUCHDOWN,\n  EVENT_TOUCHUP,\n  EVENT_TOUCHCANCEL,\n  EVENT_TOUCHMOVE,\n  EVENT_RESIZE,\n  RUNNING,\n  FPS,\n} from \"./utils/variables\";\n\nconst intervalPerSecond = 1000 / FPS;\n\nlet gameInstance = null;\n\nexport default class Game {\n  constructor() {\n    window.addEventListener(\"resize\", this.resizeScreen.bind(this));\n\n    /** @member {HTMLCanvasElement} */\n    this.canvas = document.getElementById(\"game\");\n\n    this.registerEvents();\n\n    /** @member {Observable} */\n    this.eventEmitter = new Observable();\n\n    /** @member {CanvasRenderingContext2D} */\n    this.context = this.canvas.getContext(\"2d\");\n\n    /** @member {Navigator} */\n    this.navigatorRoot = new Navigator(SCENE_GAME, this.eventEmitter);\n\n    this.loopStatus = STOP;\n    this.lastTime = 0;\n    this.width = this.canvas.width;\n    this.height = this.canvas.height;\n\n    this.resizeScreen();\n  }\n\n  registerEvents() {\n    this.canvas.addEventListener(\"click\", (e) =>\n      this.clickEvent(e, EVENT_CLICK),\n    );\n    this.canvas.addEventListener(\"mousedown\", (e) =>\n      this.clickEvent(e, EVENT_MOUSEDOWN),\n    );\n    this.canvas.addEventListener(\"mouseup\", (e) =>\n      this.clickEvent(e, EVENT_MOUSEUP),\n    );\n    this.canvas.addEventListener(\"mouseout\", (e) =>\n      this.clickEvent(e, EVENT_MOUSEOUT),\n    );\n    this.canvas.addEventListener(\"mouseleave\", (e) =>\n      this.clickEvent(e, EVENT_MOUSELEAVE),\n    );\n    this.canvas.addEventListener(\"mousemove\", (e) =>\n      this.clickEvent(e, EVENT_MOUSEMOVE),\n    );\n    this.canvas.addEventListener(\n      \"touchstart\",\n      (e) => this.touchEvent(e, EVENT_TOUCHDOWN),\n      false,\n    );\n    this.canvas.addEventListener(\n      \"touchend\",\n      (e) => this.touchEvent(e, EVENT_TOUCHUP),\n      false,\n    );\n    this.canvas.addEventListener(\n      \"touchcancel\",\n      (e) => this.touchEvent(e, EVENT_TOUCHCANCEL),\n      false,\n    );\n    this.canvas.addEventListener(\n      \"touchmove\",\n      (e) => this.touchEvent(e, EVENT_TOUCHMOVE),\n      false,\n    );\n  }\n\n  resizeScreen() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    let calculatedWidth = Math.min(SCREEN_WIDTH, width);\n    let calculatedHeight = calculatedWidth * SCREEN_RATIO;\n\n    if (calculatedHeight > height) {\n      calculatedHeight = height;\n      calculatedWidth = height / SCREEN_RATIO;\n    }\n\n    this.canvas.width = calculatedWidth;\n    this.canvas.height = calculatedHeight;\n\n    window.currentWidth = calculatedWidth;\n    this.eventEmitter.emit({\n      event: EVENT_RESIZE,\n      dimension: { w: calculatedWidth, h: calculatedHeight },\n    });\n  }\n\n  /**\n   * @param event {TouchEvent}\n   * @param type {string}\n   */\n  touchEvent(event, type) {\n    this.emitPositionEvent(\n      {\n        x: event?.targetTouches[0]?.pageX,\n        y: event?.targetTouches[0]?.pageY,\n      },\n      type,\n    );\n  }\n\n  /**\n   * @param event {MouseEvent}\n   * @param type {string}\n   */\n  clickEvent(event, type) {\n    this.emitPositionEvent({ x: event?.clientX, y: event?.clientY }, type);\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   */\n  emitPositionEvent(position, type) {\n    const rect = this.canvas.getBoundingClientRect();\n    this.eventEmitter.emit({\n      event: type,\n      position: {\n        x: unscale(position.x - rect.left),\n        y: unscale(position.y - rect.top),\n      },\n    });\n  }\n\n  /**\n   * Get game instance\n   * @returns {Game}\n   */\n  static getInstance() {\n    if (!gameInstance) {\n      gameInstance = new Game();\n    }\n    return gameInstance;\n  }\n\n  /**\n   * Initialize game\n   */\n  init() {\n    this.loopStatus = RUNNING;\n    requestAnimationFrame(this.loop.bind(this));\n  }\n\n  /**\n   * Application loop\n   * @param currentTime {number}\n   */\n  loop(currentTime) {\n    if (this.loopStatus === RUNNING) {\n      this.currentTime = currentTime;\n      if (\n        this.loopStatus === RUNNING &&\n        intervalPerSecond <= currentTime - this.lastTime\n      ) {\n        this.lastTime = currentTime;\n\n        this.drawScreen();\n      }\n\n      requestAnimationFrame(this.loop.bind(this));\n    }\n    // the else here will end the loop\n  }\n\n  /**\n   * Render the current scene\n   * todo: maybe this function can be removed\n   */\n  drawScreen() {\n    this.navigatorRoot.currentScene.render(this.context);\n  }\n}\n","import Game from \"./game/game\";\n\nGame.getInstance().init();\n"],"names":["SCREEN_RATIO","SCREEN_WIDTH","SCREEN_HEIGHT","EVENT_CLICK","EVENT_MOUSEOUT","Observable","constructor","this","subscriptions","open","emit","data","i","length","callFunction","func","pipe","functions","lastSteam","stream","on","unsub","filter","f","push","BaseObject","eventEmitter","x","y","width","height","destroy","lastMousePosition","isMouseHover","id","Math","random","value","_eventEmitter","stopper","streamCancel","cancelFunction","observable","takeUntil","render","context","listenerEvent","event","callback","validateEventPropagation","position","isPositionInside","Scene","navigator","super","backgroundColor","elements","cleanCanvas","element","rect","fillStyle","fill","validation","e","getPointByVectorRotation","vector","pivot","phi","result","rotateVector","cos","sin","scale","window","currentWidth","unscale","randomNumber","limit","start","floor","detectCollision","shape1","shape2","axis","extractAxis","axi","p1","shapeProjection","p2","min","max","shape","v","projection","p","u","BaseShape","rotation","scaleShape","brakedShape","updateCoordinates","shapes","getProjection","points","beginPath","moveTo","lineTo","closePath","background","stroke","animate","moveBrakedPiece","brakeShapes","shipShape","brakeShape","cp","shapeCenter","factor","sqrt","pow","coverBox","newShapes","count","ceil","pos","Array","map","reduceOpacity","color","extract","alpha","getOpacity","toString","substr","parseInt","PI","projectedShape","Ship","animateSmokeInterval","enableSmoke","animateSmoke","origins","s","smoke","MAX_SMOKE_ITEMS","MAX_NEW_SMOKE_PER_ITERATION","SMOKE_VELOCITY","SMOKE_DELAY_CREATION","SMOKE_RADIO","SMOKE_POINTS","origin","dir","angle","unshift","SHIP_ROTATING","SHIP_DIE","SHIP_DIE_ANIMATION","SHIP_PAUSE","GameLogic","score","spaces","time","ship","expectedRotation","velocity","minVelocity","acceleration","deceleration","status","component","undefined","enemies","objects","configs","maxDistanceForShip","startDistanceForShip","maxDistanceForMeteorite","startDistanceForMeteorite","shipVelocity","meteoriteBaseVelocity","meteoriteStartVelocity","forEach","space","enemy","obj","play","shipStatus","animateComponents","isFinish","moveShip","updateComponents","updateSpaces","updateScore","checkCollision","updateGameDifficulty","calculateScaleValue","end","sign","abs","maxValue","currentValue","getScore","o","pause","canPauseGame","unpause","pop","setShipPosition","enemyShapes","checkCollisionInProjections","objShapes","shapes1","shapes2","s1","s2","createEnemy","xPosition","getRandomXPosition","createMeteorite","meteorite","expectedX","removeObject","removeEnemy","moveEnemy","moveMeteorite","wallCollision","rotate","movement","SHIP_PADDING_Y","launchShip","isShipStopped","calculateVelocity","rotateShip","rotationFactor","notMathStatus","isShipClickable","statuses","reduce","prev","Score","textSize","textColor","lastTime","font","metrics","measureText","textWidth","textHeight","actualBoundingBoxAscent","actualBoundingBoxDescent","padding","fillText","Star","evenEmitter","ratio","groupIndex","group","shipY","arc","Space","stars","groupCount","generateSpace","removeGroup","visible","star","isVisibleStar","shift","starY","Meteorite","rotationAnimate","generateShape","newPoints","j","randomMiddlePoint","mp","v1","getVector","v2","Button","text","textColorHover","document","body","style","cursor","Modal","text2Size","buttonMargin","createCredits","createPlayButton","createShareButton","w","h","buttonPlay","buttonCredits","focus","buttonShareRecord","url","renderScore","metrics2","text2Width","text2Height","SCORE_KEY","Data","getInstance","saveScore","localStorage","setItem","getItem","isMobileMethod","Android","userAgent","match","BlackBerry","iOS","Opera","Windows","any","isMobile","ScenePlay","buttonPause","currentGame","showModal","shipClickDown","bind","shipClickUp","shipClickMove","initGame","createNextObject","createNextShip","isModalShow","playableElements","shipPressed","calculateShipRotation","directionToFlight","console","log","preShakeScreen","renderOrRemovePlayableElements","createEnemyByTime","posShakeScreen","SHAKE_DURATION","save","dx","dy","translate","restore","restartGame","modalWidth","modalHeight","modal","toRemove","Set","isElementVisible","add","ele","has","atan2","Navigator","scene","gameWidth","gameHeght","sceneClasses","Map","set","scenesInstances","currentScene","dimension","updateGameDimensions","navigate","get","intervalPerSecond","gameInstance","Game","addEventListener","resizeScreen","canvas","getElementById","registerEvents","getContext","navigatorRoot","loopStatus","clickEvent","touchEvent","innerWidth","innerHeight","calculatedWidth","calculatedHeight","type","emitPositionEvent","targetTouches","pageX","pageY","clientX","clientY","getBoundingClientRect","left","top","init","requestAnimationFrame","loop","currentTime","drawScreen"],"sourceRoot":""}