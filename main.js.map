{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/global","webpack:///./game/utils/variables.js","webpack:///./game/utils/observable.js","webpack:///./game/components/shared/base-object.js","webpack:///./game/scenes/shared/scene.js","webpack:///./game/utils/math.js","webpack:///./game/components/shared/base-shape.js","webpack:///./game/components/player.js","webpack:///./game/components/score.js","webpack:///./game/components/button.js","webpack:///./game/components/modal.js","webpack:///./game/utils/data.js","webpack:///./game/utils/mobile-device.js","webpack:///./game/scenes/shared/direction-keys.js","webpack:///./game/scenes/shared/game.logic.js","webpack:///./game/components/tile.js","webpack:///./game/components/bubble.js","webpack:///./game/components/hole.js","webpack:///./game/components/level.js","webpack:///./game/scenes/play.scene.js","webpack:///./game/navigator.js","webpack:///./game/game.js","webpack:///./main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// game dimensions\nexport const SCREEN_RATIO = 3 / 4;\nexport const SCREEN_WIDTH = 1024;\nexport const SCREEN_HEIGHT = SCREEN_WIDTH * SCREEN_RATIO;\nexport const GRID_SIZE = (SCREEN_WIDTH - 1) / 12;\n\n// game status\nexport const RUNNING = 1;\nexport const PAUSE = 2;\nexport const STOP = 3;\n\n// game events\nexport const EVENT_CLICK = \"0\";\nexport const EVENT_MOUSEDOWN = \"1\";\nexport const EVENT_MOUSEUP = \"2\";\nexport const EVENT_MOUSEMOVE = \"3\";\nexport const EVENT_MOUSEOUT = \"8\";\nexport const EVENT_MOUSELEAVE = \"9\";\nexport const EVENT_TOUCHDOWN = \"4\";\nexport const EVENT_TOUCHUP = \"5\";\nexport const EVENT_TOUCHMOVE = \"6\";\nexport const EVENT_TOUCHCANCEL = \"7\";\nexport const EVENT_RESIZE = \"8\";\nexport const EVENT_KEYPRESS = \"9\";\nexport const EVENT_KEYDOWN = \"10\";\nexport const EVENT_KEYUP = \"11\";\n\n// scene values\nexport const SCENE_GAME = 1;\n\nexport const FPS = 30;\n","export default class Observable {\n  constructor() {\n    /** @member {function[]} */\n    this.subscriptions = [];\n    this.open = true;\n  }\n\n  /**\n   * @param data {Object}\n   */\n  emit(data = {}) {\n    for (let i = 0; i < this.subscriptions.length; i++) {\n      this.callFunction(this.subscriptions[i], data);\n    }\n  }\n\n  async callFunction(func, data) {\n    func(data);\n  }\n\n  /**\n   * @param functions {function}\n   * @return {Observable}\n   */\n  pipe(...functions) {\n    let lastSteam = this;\n    for (const func of functions) {\n      const stream = new Observable();\n      lastSteam.on((data) => func(data, stream));\n      lastSteam = stream;\n    }\n    return lastSteam;\n  }\n\n  /**\n   * @param func {function}\n   */\n  unsub(func) {\n    this.subscriptions = this.subscriptions.filter((f) => f !== func);\n  }\n\n  /**\n   * @param func {function}\n   */\n  on(func) {\n    this.subscriptions.push(func);\n  }\n}\n\n/**\n * Filter the value of an Observable\n * @param stopper {Observable}\n */\nexport function takeUntil(stopper) {\n  let streamCancel = false;\n  const cancelFunction = () => {\n    streamCancel = true;\n    stopper.unsub(cancelFunction);\n  };\n  stopper.on(cancelFunction);\n  return (data, /** @param {Observable} */ observable) => {\n    if (streamCancel) {\n      observable.subscriptions = [];\n    }\n    observable.emit(data);\n  };\n}\n\n/**\n * Filter the value of an Observable\n * @param func {function}\n */\nexport function filterObservable(func) {\n  return (data, /** @param {Observable} */ observable) => {\n    if (func(data)) {\n      observable.emit(data);\n    }\n  };\n}\n\n/**\n * The value of the observable can be mapped and returned with transformations\n * @param func {function}\n */\nexport function mapObservable(func) {\n  return (data, /** @param {Observable} */ observable) => {\n    observable.emit(func(data));\n  };\n}\n","import Observable, {\n  filterObservable,\n  takeUntil\n} from \"../../utils/observable\";\nimport {\n  EVENT_KEYDOWN,\n  EVENT_KEYPRESS,\n  EVENT_KEYUP,\n  EVENT_MOUSELEAVE,\n  EVENT_MOUSEOUT,\n  EVENT_TOUCHCANCEL,\n  EVENT_TOUCHUP\n} from \"../../utils/variables\";\n\nexport default class BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    this.destroy = new Observable();\n    /** @member {Observable} */\n    this.eventEmitter = eventEmitter;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.lastMousePosition = null;\n    this.isMouseHover = false;\n\n    if (global['idCount'] === undefined) {\n      global['idCount'] = 0;\n    }\n    this.id = global['idCount']++;\n  }\n\n  set eventEmitter(value) {\n    this._eventEmitter = value ? value.pipe(takeUntil(this.destroy)) : value;\n  }\n\n  get eventEmitter() {\n    return this._eventEmitter;\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n  }\n\n  /**\n   * Event listener\n   * @param event {string}\n   * @param callback {function}\n   */\n  listenerEvent(event, callback) {\n    this.eventEmitter\n      .pipe(filterObservable((data) => data.event === event))\n      .on((data) => {\n        if (\n          (data &&\n            this.validateMouseEventPropagation(data.position, data.event)) ||\n          this.validateKeyboardEventPropagation(data.event)\n        ) {\n          callback(data);\n        }\n      });\n  }\n\n  validateKeyboardEventPropagation(event) {\n    return (\n      event === EVENT_KEYDOWN ||\n      event === EVENT_KEYUP ||\n      event === EVENT_KEYPRESS\n    );\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   * @param event {string}\n   * @return {boolean}\n   */\n  validateMouseEventPropagation(position, event) {\n    if (\n      event === EVENT_TOUCHUP ||\n      event === EVENT_MOUSEOUT ||\n      event === EVENT_TOUCHCANCEL ||\n      event === EVENT_MOUSELEAVE\n    ) {\n      return true;\n    }\n    if (\n      this.isPositionInside(this.lastMousePosition) &&\n      !this.isPositionInside(position)\n    ) {\n      this.eventEmitter.emit({ event: EVENT_MOUSEOUT });\n    }\n    this.lastMousePosition = position;\n    return (this.isMouseHover = this.isPositionInside(position));\n  }\n\n  isPositionInside(position) {\n    return (\n      position &&\n      position.x >= this.x &&\n      position.x <= this.x + this.width &&\n      position.y >= this.y &&\n      position.y <= this.y + this.height\n    );\n  }\n}\n","import BaseObject from \"../../components/shared/base-object\";\n\nexport default class Scene extends BaseObject {\n  /**\n   * @param navigator {Navigator}\n   * @param eventEmitter {Observable}\n   */\n  constructor(navigator, eventEmitter) {\n    super(eventEmitter);\n    this.navigator = navigator;\n    this.backgroundColor = \"#f00\";\n    /** @member {BaseObject[]} */\n    this.elements = [];\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    this.cleanCanvas(context);\n    // render scene elements\n    for (const element of this.elements) {\n      element.render(context);\n    }\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  cleanCanvas(context) {\n    context.rect(0, 0, this.width, this.height);\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   * @param event {string}\n   * @return {boolean}\n   */\n  validateEventPropagation(position, event) {\n    const validation = super.validateEventPropagation(position, event);\n    if (validation) {\n      for (const e of this.elements) {\n        if (e.validateEventPropagation(position, event)) {\n          return false;\n        }\n      }\n    }\n    return validation;\n  }\n}\n","import { SCREEN_WIDTH } from \"./variables\";\n\n/**\n * Vector to angle conversion\n * @param vector {{x: number, y: number}}\n * @returns {number}\n */\nexport function vectorToAngle(vector) {\n  return Math.atan2(vector.y, vector.x);\n}\n\n/**\n * Multiply a vector by a scalar\n * @param vector {{x: number, y: number}}\n * @param scalar {number}\n * @returns {{x: number, y: number}}\n */\nexport function multiplyVector(vector, scalar) {\n  return { x: vector.x * scalar, y: vector.y * scalar };\n}\n\n/**\n * Add two vectors\n * @param v1 {{x: number, y: number}}\n * @param v2 {{x: number, y: number}}\n * @returns {{x: number, y: number}}\n */\nexport function addVectors(v1, v2) {\n  return { x: v1.x + v2.x, y: v1.y + v2.y };\n}\n\n/**\n * @param maxValue {number}\n * @param currentValue {number}\n */\nexport function linearFunction(maxValue, currentValue) {\n  // toDo (gonzalezext)[20.04.24]: maybe it can be removed\n  return Math.min(currentValue / maxValue, 1);\n}\n\n/**\n * @param maxValue {number}\n * @param currentValue {number}\n */\nexport function logFunction(maxValue, currentValue) {\n  // toDo (gonzalezext)[20.04.24]: maybe it can be removed\n  const x = (9 * currentValue) / maxValue + 1;\n  return Math.min(Math.log10(x), 1);\n}\n\n/**\n * @param vector {{x: number, y: number}}\n * @param pivot {{x: number, y: number}}\n * @param phi {number}\n * @return {{x: number, y: number}}\n */\nexport function getPointByVectorRotation(vector, pivot, phi) {\n  const result = rotateVector(vector, phi);\n  return { x: pivot.x + result.x, y: pivot.y - result.y };\n}\n\n/**\n * @param vector {{x: number, y: number}}\n * @param phi {number}\n * @return {{x: number, y: number}}\n */\nexport function rotateVector(vector, phi) {\n  return {\n    x: vector.x * Math.cos(phi) - vector.y * Math.sin(phi),\n    y: vector.x * Math.sin(phi) + vector.y * Math.cos(phi)\n  };\n}\n\nexport function getVector(p1, p2) {\n  return { x: p2.x - p1.x, y: p2.y - p1.y };\n}\n\nexport function distance(p1, p2) {\n  // toDo guille 31.08.21: maybe it can be improved (check it)\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\n/**\n * @param value {number}\n * @return {number}\n */\nexport function scale(value) {\n  return (value * window.currentWidth) / SCREEN_WIDTH;\n}\n\nexport function unscale(value) {\n  return (value * SCREEN_WIDTH) / window.currentWidth;\n}\n\n/**\n * @param limit {number}\n * @param start {number}\n * @returns {number}\n */\nexport function randomNumber(limit, start = 0) {\n  return Math.floor(Math.random() * limit) + start;\n}\n\n/**\n * @param shape1 {{x: number, y: number}[]}\n * @param shape2 {{x: number, y: number}[]}\n * @return {boolean}\n */\nexport function detectCollision(shape1, shape2) {\n  if (shape1.length < 3 || shape2.length < 3) {\n    return false;\n  }\n  const axis = [...extractAxis(shape1), ...extractAxis(shape2)];\n\n  for (const axi of axis) {\n    const p1 = shapeProjection(shape1, axi);\n    const p2 = shapeProjection(shape2, axi);\n    if (\n      !(\n        (p1.min > p2.min && p1.min < p2.max) ||\n        (p1.max > p2.min && p1.max < p2.max) ||\n        (p2.min > p1.min && p2.min < p1.max) ||\n        (p2.max > p1.min && p2.max < p1.max) ||\n        (p1.min === p2.min && p1.max === p2.max)\n      )\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Normalize a vector\n * @param v {{x: number, y: number}}\n * @returns {{x: number, y: number}}\n */\nexport function normalizeVector(v) {\n  if (v.x === 0 && v.y === 0) {\n    return { x: 0, y: 0 };\n  }\n  const length = Math.sqrt(v.x * v.x + v.y * v.y);\n  return { x: v.x / length, y: v.y / length };\n}\n\n/**\n * Linear interpolation between two vectors\n * @param v1 {{x: number, y: number}}\n * @param v2 {{x: number, y: number}}\n * @param t {number}\n * @returns {{x: number, y: number}}\n */\nexport function lerpVector(v1, v2, t) {\n  return {\n    x: v1.x + (v2.x - v1.x) * t,\n    y: v1.y + (v2.y - v1.y) * t\n  };\n}\n\n/**\n * @param shape {{x: number, y: number}[]}\n * @return {{x: number, y: number}[]}\n */\nfunction extractAxis(shape) {\n  if (shape.length <= 1) {\n    return [];\n  }\n  const axis = [];\n  for (let i = 1; i < shape.length; i++) {\n    axis.push({\n      x: shape[i].x - shape[i - 1].x,\n      y: shape[i - 1].y - shape[i].y\n    });\n  }\n  axis.push({\n    x: shape[0].x - shape[shape.length - 1].x,\n    y: shape[shape.length - 1].y - shape[0].y\n  });\n  return axis;\n}\n\n/**\n * @param shape {{x: number, y: number}[]}\n * @param v {{x: number, y: number}}\n * @return {{max: number, min: number}}\n */\nfunction shapeProjection(shape, v) {\n  let min = projection(v, shape[0]);\n  let max = min;\n  for (let i = 1; i < shape.length; i++) {\n    const p = projection(v, shape[i]);\n    min = Math.min(min, p);\n    max = Math.max(max, p);\n  }\n  return { min, max };\n}\n\n/**\n * @param v {{x: number, y: number}}\n * @param u {{x: number, y: number}}\n * @return {number}\n */\nfunction projection(v, u) {\n  return (u.x * v.x + u.y * v.y) / (v.x * v.x + v.y * v.y);\n}\n","import BaseObject from \"./base-object\";\nimport { getPointByVectorRotation, scale, vectorToAngle } from \"../../utils/math\";\n\nexport default class BaseShape extends BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = \"#00f\";\n    this.rotation = 0;\n    this.directionVector = { x: 1, y: 0 };\n    this.scaleShape = 3.3;\n    this.brakedShape = null;\n  }\n\n  updateCoordinates(x, y) {\n    this.x = x || this.x;\n    this.y = y || this.y;\n  }\n\n  render(context) {\n    // ship painted\n    const shapes = this.getProjection();\n\n    for (const shape of shapes) {\n      const points = shape.points;\n      if (points.length === 0) {\n        continue;\n      }\n      context.beginPath();\n      context.moveTo(scale(points[0].x), scale(points[0].y));\n      for (let i = 1; i < points.length; i++) {\n        context.lineTo(scale(points[i].x), scale(points[i].y));\n      }\n      context.closePath();\n      context.fillStyle = shape.background;\n      if (Boolean(shape.stroke)) {\n        context.stroke();\n        context.strokeStyle = shape.stroke;\n        context.lineWidth = shape.strokeWidth * 5;\n      }\n      context.fill();\n    }\n  }\n\n  animate() {\n    this.moveBrakedPiece();\n  }\n\n  brakeShapes() {\n    const shapes = this.shipShape().shapes;\n\n    this.brakedShape = { shapes: [] };\n\n    // brake in triangles\n    for (const shape of shapes) {\n      this.brakedShape = {\n        shapes: [...this.brakedShape.shapes, ...this.brakeShape(shape)]\n      };\n    }\n\n    // calculate direction vector\n    for (const shape of this.brakedShape.shapes) {\n      const cp = this.shapeCenter(shape.points);\n      const d = Math.random() + 0.5;\n      const factor = d / Math.sqrt(Math.pow(cp.x, 2) + Math.pow(cp.y, 2));\n      shape.vector = { x: cp.x * factor, y: cp.y * factor };\n    }\n  }\n\n  /**\n   * @param shape {{points: {x: number, y: number}[], background: string}}\n   * @return {{x: number, y: number}[]}\n   */\n  brakeShape(shape) {\n    if (shape.points.length === 0) {\n      return shape.points;\n    }\n    const { min, max } = this.coverBox(shape.points);\n\n    const fixedSize = 2;\n    const size = 2.5;\n    const newShapes = [];\n    let count = Math.ceil(((max.x - min.x) * (max.y - min.y)) / fixedSize);\n    count = Math.min(count, 150);\n\n    for (let i = 0; i < count; i++) {\n      const pos = {\n        x: (max.x - min.x) * Math.random() + min.x,\n        y: (max.y - min.y) * Math.random() + min.y\n      };\n      newShapes.push({\n        points: new Array(3).fill(null).map(() => ({\n          x: pos.x + size * Math.random(),\n          y: pos.y + size * Math.random()\n        })),\n        background: shape.background\n      });\n    }\n\n    return newShapes;\n  }\n\n  /**\n   * @param points {{x: number, y: number}[]}\n   */\n  shapeCenter(points) {\n    const { min, max } = this.coverBox(points);\n    return { x: (max.x + min.x) / 2, y: (max.y + min.y) / 2 };\n  }\n\n  coverBox(points) {\n    const min = { x: points[0].x, y: points[0].y };\n    const max = { ...min };\n    for (let i = 1; i < points.length; i++) {\n      min.x = Math.min(min.x, points[i].x);\n      min.y = Math.min(min.y, points[i].y);\n      max.x = Math.max(max.x, points[i].x);\n      max.y = Math.max(max.y, points[i].y);\n    }\n    return { min, max };\n  }\n\n  moveBrakedPiece() {\n    if (this.brakedShape) {\n      for (const shape of this.brakedShape.shapes) {\n        shape.points = shape.points.map((p) => ({\n          x: p.x + shape.vector.x,\n          y: p.y + shape.vector.y\n        }));\n        shape.background = this.reduceOpacity(shape.background, 30);\n      }\n    }\n  }\n\n  /**\n   * @param color {string}\n   * @param extract {number}\n   * @returns {string}\n   */\n  reduceOpacity(color, extract) {\n    // toDo (gonzalezext)[21.04.24]: remove this method\n    let alpha = this.getOpacity(color);\n    alpha = Math.min(255, Math.max(alpha - extract, 0));\n    alpha = alpha.toString(16);\n    return `#${color.substr(1, 6)}${(alpha.length < 2 ? \"0\" : \"\") + alpha}`;\n  }\n\n  getColorWithOpacity(color, alphaFactor) {\n    let alpha = Math.min(255, Math.max(Math.floor(255 * alphaFactor), 0));\n    alpha = alpha.toString(16);\n    return `#${color.substr(1, 6)}${(alpha.length < 2 ? \"0\" : \"\") + alpha}`;\n  }\n\n  /**\n   * @param color {string}\n   * @return {number}\n   */\n  getOpacity(color) {\n    return color.length > 7 ? parseInt(color.substr(7, 2), 16) : 255;\n  }\n\n  /**\n   * @param shapeId {string}\n   * @return {{points: {x: number, y: number}[], background: string, stroke: string, strokeWidth: number, smoke: boolean}[]}\n   */\n  getProjection(shapeId = undefined) {\n    const rotation = vectorToAngle(this.directionVector) + Math.PI / 2;\n\n    const shapes = this.currentShape().shapes;\n    const pivot = this.getPosition();\n\n    const projectedShape = [];\n\n    for (const shape of shapes) {\n      if (shapeId && shape.id !== shapeId) {\n        continue;\n      }\n\n      const points = shape.points.map((p) => ({\n        x: p.x * this.scaleShape,\n        y: p.y * this.scaleShape\n      }));\n      for (let i = 0; i < points.length; i++) {\n        points[i] = getPointByVectorRotation(points[i], pivot, rotation);\n      }\n      projectedShape.push({ ...shape, points });\n    }\n    return projectedShape;\n  }\n\n  /**\n   * @returns {{x: number, y: number}}\n   */\n  getPosition() {\n    return { x: this.x, y: this.y };\n  }\n\n  /**\n   * @returns {{shapes: {background: string, id: string, points: {x: number, y: number}[]}[]}}\n   */\n  currentShape() {\n    return {\n      shapes: []\n    };\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport shape from \"../shapes/character.json\";\n\nexport default class Player extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    super(eventEmitter, x, y, width, height);\n    /** @member {number} */\n    this.rotation = Math.PI / 2;\n    this.directionVector = { x: 0, y: 1 };\n    this.scaleShape = 1.5;\n    this.shape = shape;\n\n    this.updateCoordinates();\n  }\n\n  /**\n   * Update the coordinates of the player\n   * @param x {number}\n   * @param y {number}\n   */\n  updateCoordinates({ x, y } = {}) {\n    this.x = x || this.x;\n    this.y = y || this.y;\n  }\n\n  /**\n   * Update the direction vector of the player\n   * @param v\n   */\n  updateDirectionVector(v) {\n    this.directionVector = v;\n  }\n\n  animate() {\n    super.animate();\n  }\n\n  currentShape() {\n    return this.brakedShape || this.shape;\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { scale } from \"../utils/math\";\n\nexport default class Score extends BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number} corner coordinates\n   * @param y {number} corner coordinates\n   */\n  constructor(eventEmitter, x, y) {\n    super(eventEmitter, x, y);\n    this.score = 0;\n    this.textSize = 30;\n    this.backgroundColor = \"#000\";\n    this.textColor = \"#fff\";\n\n    this.lastTime = 0;\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    context.font = `${scale(this.textSize)}px Arial`;\n    const metrics = context.measureText(this.score + \"\");\n    const textWidth = metrics.width;\n    const textHeight =\n      metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n    const padding = 5;\n\n    context.beginPath();\n    context.rect(\n      scale(this.x - textWidth - padding * 2),\n      scale(this.y),\n      scale(textWidth + padding * 2),\n      scale(textHeight + padding * 2),\n    );\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n\n    context.beginPath();\n    context.font = `${scale(this.textSize)}px Arial`;\n    context.fillStyle = this.textColor;\n    context.fillText(\n      this.score + \"\",\n      scale(this.x - textWidth - padding),\n      scale(this.y + textHeight + padding),\n    );\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { scale, unscale } from \"../utils/math\";\nimport { EVENT_MOUSEMOVE, EVENT_MOUSEOUT } from \"../utils/variables\";\n\nexport default class Button extends BaseObject {\n  /**\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param text {string}\n   * @param eventEmitter {Observable}\n   */\n  constructor(eventEmitter, x, y, width, height, text) {\n    super(eventEmitter, x, y, width, height);\n    this.text = text;\n    this.textSize = 10;\n    this.backgroundColor = \"#000\";\n    this.textColor = \"#fff\";\n    this.textColorHover = \"#9a9a9a\";\n\n    this.listenerEvent(EVENT_MOUSEMOVE, (data) => {\n      if (this.isPositionInside(data.position)) {\n        document.body.style.cursor = \"pointer\";\n      }\n    });\n    this.listenerEvent(EVENT_MOUSEOUT, (data) => {\n      document.body.style.cursor = \"default\";\n    });\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    context.beginPath();\n    context.rect(\n      scale(this.x),\n      scale(this.y),\n      scale(this.width),\n      scale(this.height),\n    );\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n\n    context.beginPath();\n    context.font = `${scale(this.textSize)}px Arial`;\n    const metrics = context.measureText(this.text);\n    const textWidth = unscale(metrics.width);\n    const textHeight = unscale(\n      metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent,\n    );\n    context.fillStyle = this.isMouseHover\n      ? this.textColorHover\n      : this.textColor;\n    // context.text;\n    context.fillText(\n      this.text,\n      scale(this.x + this.width / 2 - textWidth / 2),\n      scale(this.y + this.height / 2 + textHeight / 2),\n    );\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { EVENT_CLICK, SCREEN_HEIGHT, SCREEN_WIDTH } from \"../utils/variables\";\nimport { scale, unscale } from \"../utils/math\";\nimport Button from \"./button\";\n\nexport default class Modal extends BaseObject {\n  /**\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param eventEmitter {Observable}\n   */\n  constructor(eventEmitter, x, y, width, height) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = \"#fff\";\n    this.textSize = 90;\n    this.text2Size = 30;\n    this.text = \"RECORD\";\n    this.score = 1000;\n\n    const buttonHeight = 30;\n    const button1Width = 40;\n    const button2Width = 120;\n    const buttonMargin = 15;\n\n    this.createCredits(\n      this.x + buttonMargin,\n      this.y,\n      button1Width,\n      buttonHeight,\n    );\n    this.createPlayButton(\n      this.x + (this.width - button1Width - button2Width - buttonMargin) / 2,\n      this.y + this.height - buttonHeight - buttonMargin,\n      button1Width,\n      buttonHeight,\n    );\n    this.createShareButton(\n      this.x +\n        (this.width - button1Width - button2Width - buttonMargin) / 2 +\n        button1Width +\n        buttonMargin,\n      this.y + this.height - buttonHeight - buttonMargin,\n      button2Width,\n      buttonHeight,\n    );\n  }\n\n  createPlayButton(x, y, w, h) {\n    this.buttonPlay = new Button(this.eventEmitter, x, y, w, h, \"PLAY\");\n  }\n\n  createCredits(x, y, w, h) {\n    this.buttonCredits = new Button(this.eventEmitter, x, y, w, h, \"@ggjnez92\");\n    this.buttonCredits.backgroundColor = \"#00000000\";\n    this.buttonCredits.textColor = \"#000\";\n    this.buttonCredits.textColorHover = \"#0048ff\";\n    this.buttonCredits.listenerEvent(EVENT_CLICK, () =>\n      window.open(\"https://twitter.com/ggjnez92\", \"_blank\").focus(),\n    );\n  }\n\n  createShareButton(x, y, w, h) {\n    this.buttonShareRecord = new Button(\n      this.eventEmitter,\n      x,\n      y,\n      w,\n      h,\n      \"SHARE ON TWITTER\",\n    );\n    this.buttonShareRecord.listenerEvent(EVENT_CLICK, () => {\n      const message = `I%20just%20make%20a%20new%20record%20of%20${this.score}%20points%20in%20the%20%23azetz%20%23game%20developed%20for%20the%20%40js13kGames%20competition.%0A%0A%23js13k%20%23gamedev%0A%0AIf%20you%20want%20to%20check%20it%20out%2C%20here%20is%20the%20link%20to%20the%20%23github%20repository%0Ahttps%3A%2F%2Fgithub.com%2Finflagames%2Fazetz`;\n      const url = `https://twitter.com/intent/tweet?text=${message}`;\n      window.open(url, \"_blank\").focus();\n    });\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    context.beginPath();\n    context.rect(0, 0, scale(SCREEN_WIDTH), scale(SCREEN_HEIGHT));\n    context.fillStyle = \"rgba(0,0,0,0.82)\";\n    context.fill();\n\n    context.beginPath();\n    context.rect(\n      scale(this.x),\n      scale(this.y),\n      scale(this.width),\n      scale(this.height),\n    );\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n\n    this.buttonPlay.render(context);\n    this.buttonCredits.render(context);\n    this.buttonShareRecord.render(context);\n\n    this.renderScore(context);\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  renderScore(context) {\n    // toDo guille 01.09.21: refactor this code\n    context.beginPath();\n    context.font = `${scale(this.textSize)}px Arial`;\n    const metrics = context.measureText(this.score + \"\");\n    const textWidth = unscale(metrics.width);\n    const textHeight = unscale(\n      metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent,\n    );\n    context.fillStyle = \"#000\";\n    context.fillText(\n      this.score + \"\",\n      scale(this.x + this.width / 2 - textWidth / 2),\n      scale(this.y + this.height / 2 + textHeight / 2),\n    );\n\n    context.beginPath();\n    context.font = `${scale(this.text2Size)}px Arial`;\n    const metrics2 = context.measureText(this.text);\n    const text2Width = unscale(metrics2.width);\n    const text2Height = unscale(\n      metrics2.actualBoundingBoxAscent + metrics2.actualBoundingBoxDescent,\n    );\n    context.fillStyle = \"#000\";\n    context.fillText(\n      this.text,\n      scale(this.x + this.width / 2 - text2Width / 2),\n      scale(\n        this.y +\n          this.height / 2 +\n          textHeight / 2 -\n          textHeight -\n          text2Height / 2,\n      ),\n    );\n  }\n}\n","const APPLICATION_PREFIX = \"azetzv1\";\nconst SCORE_KEY = `${APPLICATION_PREFIX}_game_score`;\n\n/** @type Data */\nlet data = null;\n\nexport default class Data {\n  static getInstance() {\n    if (!data) {\n      data = new Data();\n    }\n    return data;\n  }\n\n  /**\n   * @param score {number}\n   */\n  saveScore(score) {\n    localStorage.setItem(SCORE_KEY, score + \"\");\n  }\n\n  getScore() {\n    const score = localStorage.getItem(SCORE_KEY);\n    return score ? +score : 0;\n  }\n}\n","export const isMobileMethod = {\n  Android: function () {\n    return navigator.userAgent.match(/Android/i);\n  },\n  BlackBerry: function () {\n    return navigator.userAgent.match(/BlackBerry/i);\n  },\n  iOS: function () {\n    return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n  },\n  Opera: function () {\n    return navigator.userAgent.match(/Opera Mini/i);\n  },\n  Windows: function () {\n    return (\n      navigator.userAgent.match(/IEMobile/i) ||\n      navigator.userAgent.match(/WPDesktop/i)\n    );\n  },\n  any: function () {\n    return (\n      isMobileMethod.Android() ||\n      isMobileMethod.BlackBerry() ||\n      isMobileMethod.iOS() ||\n      isMobileMethod.Opera() ||\n      isMobileMethod.Windows()\n    );\n  },\n};\n","import { normalizeVector } from \"../../utils/math\";\n\nexport const UP_DIRECTION = 1;\nexport const DOWN_DIRECTION = 2;\nexport const LEFT_DIRECTION = 4;\nexport const RIGHT_DIRECTION = 8;\n\nexport default class DirectionKeys {\n  constructor() {\n    /** @member {string[]} */\n    this.presedKeys = [];\n  }\n\n  clear() {\n    this.presedKeys = [];\n  }\n\n  /**\n   * @param key {string}\n   */\n  addKey(key) {\n    if (this.isDirectionKey(key) && !this.presedKeys.includes(key)) {\n      this.presedKeys.push(key);\n    }\n  }\n\n  /**\n   * @param key {string}\n   */\n  removeKey(key) {\n    this.presedKeys = this.presedKeys.filter((k) => k !== key);\n  }\n\n  /**\n   * @param key {string}\n   * @return {boolean}\n   */\n  isDirectionKey(key) {\n    return key === \"a\" || key === \"w\" || key === \"s\" || key === \"d\";\n  }\n\n  /**\n   * Current state of the keys\n   * @returns {boolean}\n   */\n  hasPressedKeys() {\n    return this.presedKeys.length > 0;\n  }\n\n  /**\n   * @returns {{x: number, y: number}}\n   */\n  directionVector() {\n    let directionVec = { x: 0, y: 0 };\n\n    /** @type {number} */\n    const direction = this.direction();\n\n    if ((direction & UP_DIRECTION) !== 0) {\n      directionVec.y = -1;\n    } else if ((direction & DOWN_DIRECTION) !== 0) {\n      directionVec.y = 1;\n    }\n\n    if ((direction & LEFT_DIRECTION) !== 0) {\n      directionVec.x = -1;\n    } else if ((direction & RIGHT_DIRECTION) !== 0) {\n      directionVec.x = 1;\n    }\n\n    // console.log(normalizeVector(directionVec));\n\n    return normalizeVector(directionVec);\n  }\n\n  direction() {\n    let dir = 0;\n\n    if (this.presedKeys.length > 0) {\n      dir = this.directionMap(this.presedKeys[0]);\n      let position = 1;\n      while (position < this.presedKeys.length) {\n        let n = this.consumeNextDirection(\n          UP_DIRECTION,\n          LEFT_DIRECTION,\n          RIGHT_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n        n |= this.consumeNextDirection(\n          DOWN_DIRECTION,\n          LEFT_DIRECTION,\n          RIGHT_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n        n |= this.consumeNextDirection(\n          LEFT_DIRECTION,\n          UP_DIRECTION,\n          DOWN_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n        n |= this.consumeNextDirection(\n          RIGHT_DIRECTION,\n          UP_DIRECTION,\n          DOWN_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n\n        if (n) {\n          dir |= n;\n          break;\n        }\n\n        position++;\n      }\n    }\n\n    return dir;\n  }\n\n  consumeNextDirection(dir, acDir1, acDir2, currentDir, nextDir) {\n    if (dir === currentDir && (nextDir === acDir1 || nextDir === acDir2)) {\n      return nextDir;\n    }\n    return 0;\n  }\n\n  /**\n   * @param key {string}\n   * @returns {number}\n   */\n  directionMap(key) {\n    if (key === \"w\") {\n      return UP_DIRECTION;\n    }\n    if (key === \"s\") {\n      return DOWN_DIRECTION;\n    }\n    if (key === \"a\") {\n      return LEFT_DIRECTION;\n    }\n    if (key === \"d\") {\n      return RIGHT_DIRECTION;\n    }\n    return 0;\n  }\n}\n","import { addVectors, detectCollision, lerpVector, multiplyVector, normalizeVector } from \"../../utils/math\";\nimport DirectionKeys from \"./direction-keys\";\n\nconst GAME_STOP = \"3\";\nconst GAME_OVER = \"5\";\nconst GAME_PAUSE = \"7\";\n\nexport default class GameLogic {\n  /**\n   *\n   * @param playerPosition {{x: number, y: number}}\n   */\n  constructor(playerPosition) {\n    /** @member {Score} */\n    this.score = null;\n\n    this.time = 0;\n\n    /** @member {DirectionKeys} */\n    this.directionKeys = new DirectionKeys();\n\n    /** @member {Level} */\n    this.level = null;\n\n    this.player = {\n      position: playerPosition,\n      rotation: Math.PI / 2, // todo: eliminate this property\n      directionVector: { x: 0, y: 1 },\n      expectedRotation: 0,\n      velocity: 0,\n      minVelocity: 10,\n      acceleration: 20,\n      deceleration: -1.5,\n      status: [GAME_STOP],\n      component: undefined\n    };\n    this.enemies = [];\n    this.objects = [];\n\n    this.configs = {};\n  }\n\n  destroy() {\n    this.enemies.forEach((enemy) => enemy.component.destroy.emit());\n    this.objects.forEach((obj) => obj.component.destroy.emit());\n    this.player.component.destroy.emit();\n  }\n\n  /**\n   * run an iteration of the game logic\n   */\n  play() {\n    this.movePlayer();\n    this.animateComponents();\n  }\n\n  /**\n   * Move the player base on the direction keys\n   */\n  movePlayer() {\n    const VELOCITY = 10;\n\n    if (this.directionKeys.hasPressedKeys()) {\n      const rot = lerpVector(this.player.directionVector, this.directionKeys.directionVector(), 0.95);\n      this.player.directionVector = multiplyVector(normalizeVector(rot), VELOCITY);\n\n      // check collision\n      const prevPosition = this.player.position;\n      this.player.position = addVectors(this.player.directionVector, this.player.position);\n      if (this.checkCollisionWithMap()) {\n        this.player.position = prevPosition;\n      }\n    }\n\n    this.player.component.updateCoordinates(this.player.position);\n    this.player.component.updateDirectionVector({ ...this.player.directionVector, y: -this.player.directionVector.y });\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  checkCollisionWithMap() {\n    // toDo (gonzalezext)[19.04.24]: this need to be optimized (check only with the nearest components)\n    for (const component of this.level.tiles) {\n      if (this.checkCollisionInProjections(this.player.component.getProjection(), component.getProjection())) {\n        return true;\n      }\n    }\n\n    // validate end of the level\n    if (this.checkCollisionInProjections(this.player.component.getProjection(), this.level.hole.getProjection(\"center\"))) {\n      this.levelComplete();\n      return false;\n    }\n\n    return false;\n  }\n\n  canPauseGame() {\n    // toDo (gonzalezext)[18.04.24]:\n    return true;\n  }\n\n  animateComponents() {\n    // toDo (gonzalezext)[18.04.24]:\n    // animation in general\n    // this.ship.component.animate();\n  }\n\n  pause() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  unpause() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  updateSpaces() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  updateScore() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  /**\n   * @return {number}\n   */\n  getScore() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  checkCollision() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  /**\n   * @param shapes1 {{points: {x: number, y: number}[], background: string}[]}\n   * @param shapes2 {{points: {x: number, y: number}[], background: string}[]}\n   * @return {boolean}\n   */\n  checkCollisionInProjections(shapes1, shapes2) {\n    for (const s1 of shapes1) {\n      for (const s2 of shapes2) {\n        if (detectCollision(s1.points, s2.points)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  levelComplete() {\n    // toDo (gonzalezext)[18.04.24]:\n    console.log(\"Level complete\");\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport shapeTile1 from \"../shapes/tile1.json\";\nimport shapeTile2 from \"../shapes/tile2.json\";\nimport floorTile from \"../shapes/floor.tile.json\";\nimport { GRID_SIZE } from \"../utils/variables\";\nimport { addVectors, randomNumber } from \"../utils/math\";\n\nexport const TILE_1X1 = 1;\nexport const TILE_2X2 = 2;\nexport const TILE_FLOOR = 3;\n\nexport default class Tile extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param type {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, type) {\n    super(eventEmitter, x, y, type * GRID_SIZE, type * GRID_SIZE);\n\n    this.directionVector = this.getRotation();\n\n    this.type = type;\n    this.tileShape = { ...this.getShape(type) };\n    this.positionCorrection = { x: 0, y: 0 };\n\n    this.setupTile();\n  }\n\n  getShape(type) {\n    switch (type) {\n    case TILE_1X1:\n      return shapeTile2;\n    case TILE_2X2:\n      return shapeTile1;\n    case TILE_FLOOR:\n    default:\n      return floorTile;\n    }\n  }\n\n  getRotation() {\n    const currentDirection = randomNumber(4);\n    switch (currentDirection) {\n    case 0:\n      return { x: 1, y: 0 };\n    case 1:\n      return { x: 0, y: 1 };\n    case 2:\n      return { x: -1, y: 0 };\n    case 3:\n      return { x: 0, y: -1 };\n    }\n  }\n\n  /**\n   * Setting up the tile shape. This method calculate the correction needed to center the tile in the grid\n   */\n  setupTile() {\n    let minPosition = { ...this.tileShape.shapes[0].points[0] };\n    let maxPosition = { ...this.tileShape.shapes[0].points[0] };\n    for (let s of this.tileShape.shapes) {\n      for (let p of s.points) {\n        if (p.x < minPosition.x) {\n          minPosition.x = p.x;\n        }\n        if (p.y < minPosition.y) {\n          minPosition.y = p.y;\n        }\n        if (p.x > maxPosition.x) {\n          maxPosition.x = p.x;\n        }\n        if (p.y > maxPosition.y) {\n          maxPosition.y = p.y;\n        }\n      }\n    }\n\n    const tileFactor = {\n      x: (GRID_SIZE * this.getGridSize()) / ((maxPosition.x - minPosition.x) * this.scaleShape),\n      y: (GRID_SIZE * this.getGridSize()) / ((maxPosition.y - minPosition.y) * this.scaleShape)\n    };\n\n    this.positionCorrection = {\n      x: (GRID_SIZE * this.getGridSize()) * 0.5,\n      y: (GRID_SIZE * this.getGridSize()) * 0.5\n    };\n\n    // make size correction base on the grid size\n    this.tileShape.shapes = this.tileShape.shapes.map(s => ({\n      ...s,\n      points: s.points.map(p => ({\n        x: p.x * tileFactor.x,\n        y: p.y * tileFactor.y\n      }))\n    }));\n  }\n\n  getGridSize() {\n    switch (this.type) {\n    case TILE_1X1:\n    case TILE_FLOOR:\n      return 1;\n    case TILE_2X2:\n      return 2;\n    }\n  }\n\n  /**\n   * Calculate the tile position correction\n   * @returns {{x: number, y: number}}\n   */\n  getPosition() {\n    return addVectors(super.getPosition(), this.positionCorrection);\n  }\n\n  currentShape() {\n    return this.tileShape;\n  }\n\n  animate() {\n    // toDo (gonzalezext)[19.04.24]: maybe we can animate the leafs\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\n\nconst ROUND_RECT_CORNER = 5;\nconst MAX_LIFE_TIME = 20;\n\nexport default class Bubble extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width\n   * @param height\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    super(eventEmitter, x, y, width, height);\n\n    this.scaleShape = 0;\n    this.lifeTime = 0;\n  }\n\n  render(context) {\n    this.calculateScale();\n    this.lifeTime++;\n\n    context.beginPath();\n    context.fillStyle = this.getColorWithOpacity(\"#6c8d8eff\", this.showAndHideFunction(this.getTimeFactor()));\n    this.scaleShape = this.growBubbleFunction(this.getTimeFactor());\n    const w = this.width * this.scaleShape;\n    const h = this.height * this.scaleShape;\n    context.roundRect(this.x - w * .5, this.y - h * .5, w, h, ROUND_RECT_CORNER);\n    context.fill();\n  }\n\n  calculateScale() {\n    this.scaleShape = Math.sin(this.y / 10);\n  }\n\n  getTimeFactor() {\n    return Math.min(this.lifeTime / MAX_LIFE_TIME, 1);\n  }\n\n  showAndHideFunction(time) {\n    // toDo (gonzalezext)[21.04.24]: check if this function can be optimized\n    return Math.sin(time * Math.PI) / 1.5;\n  }\n\n  growBubbleFunction(time) {\n    // todo (gonzalezext)[21.04.24]: check if this function can be optimized\n    return Math.log(time + 1) * 1.4426950408889634;\n  }\n\n  bubbleDead() {\n    return this.lifeTime > MAX_LIFE_TIME;\n  }\n\n  animate() {\n    // toDo (gonzalezext)[19.04.24]: maybe we can animate the leafs\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport hole from \"../shapes/hole.json\";\n\nexport default class Hole extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0) {\n    super(eventEmitter, x, y, 0, 0);\n\n    this.directionVector = { x: 0, y: 1 };\n    this.shape = { ...hole };\n    this.scaleShape = 1.7;\n  }\n\n  getPosition() {\n    return { x: this.x - 8, y: this.y + 10 };\n  }\n\n  currentShape() {\n    return this.shape;\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { randomNumber, scale } from \"../utils/math\";\nimport { SCREEN_HEIGHT, SCREEN_WIDTH, GRID_SIZE } from \"../utils/variables\";\nimport Tile, { TILE_1X1, TILE_2X2, TILE_FLOOR } from \"./tile\";\nimport level1 from \"./levels/level.001.json\";\nimport Bubble from \"./bubble\";\nimport Hole from \"./hole\";\n\nconst ROW_TILE = 1; //         0001\nconst ROW_HOLE = 2; //         0010\nconst ROW_TILE_TREE_V1 = 4; // 0100\nconst ROW_PLAYER_START = 8; // 1000\n\nconst MAX_NUMBER_OF_BUBBLES = 40;\n\nexport default class Level extends BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param background {string}\n   */\n  constructor(\n    eventEmitter,\n    x = 0,\n    y = 0,\n    width = 0,\n    height = 0,\n    background = \"\"\n  ) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = background;\n\n    const bubble = this.newBubble();\n\n    /** @member {BaseObject[]} */\n    this.components = [];\n\n    this.tiles = [];\n    this.floor = [];\n    this.bubbles = [];\n    this.hole = undefined;\n\n    this.currentLevel = { ...level1 };\n    this.playerInitialPosition = { x: 0, y: 0 };\n\n    this.loadLevel(this.currentLevel);\n  }\n\n  loadLevel(level) {\n    // load level background\n    this.backgroundColor = level.background;\n\n    const map = level.map;\n    const flags = new Array(map.length).fill(1).map(() => new Array(map[0].length).fill(true));\n    for (let row = 0; row < map.length; row++) {\n      for (let col = 0; col < map[row].length; col++) {\n        const tile = map[row][col];\n        if (flags[row][col] && ((tile & ROW_TILE) !== 0)) {\n\n          let type = TILE_1X1;\n\n          // check if 2x2 tile fit\n          if (row + 1 < map.length && col + 1 < map[row].length &&\n            (map[row][col + 1] & ROW_TILE) &&\n            (map[row + 1][col] & ROW_TILE) &&\n            (map[row + 1][col + 1] & ROW_TILE)\n          ) {\n            flags[row][col] = false;\n            flags[row][col + 1] = false;\n            flags[row + 1][col] = false;\n            flags[row + 1][col + 1] = false;\n\n            type = TILE_2X2;\n          }\n\n          const tile = new Tile(\n            this.eventEmitter,\n            col * GRID_SIZE,\n            row * GRID_SIZE,\n            type\n          );\n          this.tiles.push(tile);\n          this.components.push(tile);\n        } else if ((tile & ROW_TILE) === 0) {\n          const tile = new Tile(\n            this.eventEmitter,\n            col * GRID_SIZE,\n            row * GRID_SIZE,\n            TILE_FLOOR\n          );\n          this.floor.push(tile);\n        }\n\n        if (tile & ROW_HOLE) {\n          const hole = new Hole(\n            this.eventEmitter,\n            col * GRID_SIZE + GRID_SIZE * .5,\n            row * GRID_SIZE + GRID_SIZE * .5\n          );\n          this.hole = hole;\n          this.components.push(hole);\n        }\n\n        if (tile & ROW_PLAYER_START) {\n          this.playerInitialPosition = {\n            x: col * GRID_SIZE + GRID_SIZE * .5,\n            y: row * GRID_SIZE + GRID_SIZE * .5\n          };\n        }\n      }\n    }\n  }\n\n  render(context) {\n    this.cleanScreen(context);\n\n    this.floor.forEach((component) => component.render(context));\n    this.renderWatterColor(context);\n    this.updateBubbles();\n\n    this.components.forEach((component) => component.render(context));\n  }\n\n  updateBubbles() {\n    const toRemove = new Set();\n    for (const b of this.bubbles) {\n      if (b.bubbleDead()) {\n        toRemove.add(b.id);\n      }\n    }\n\n    this.bubbles = this.bubbles.filter((b) => !toRemove.has(b.id));\n    this.components = this.components.filter((c) => !toRemove.has(c.id));\n\n    if (this.bubbles.length < MAX_NUMBER_OF_BUBBLES) {\n      if (randomNumber(2) === 1) {\n        const bubble = this.newBubble();\n        this.components.unshift(bubble);\n        this.bubbles.push(bubble);\n      }\n    }\n  }\n\n  newBubble() {\n    const width = randomNumber(40, 10);\n    const height = randomNumber(40, 10);\n    const x = randomNumber(SCREEN_WIDTH);\n    const y = randomNumber(SCREEN_HEIGHT);\n    return new Bubble(this.eventEmitter, x, y, width, height);\n  }\n\n  renderWatterColor(context) {\n    if (this.backgroundColor) {\n      context.beginPath();\n      context.fillStyle = this.backgroundColor;\n      context.rect(0, 0, scale(this.width), scale(this.height));\n      context.fill();\n    }\n  }\n\n  cleanScreen(context) {\n    context.clearRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\n  }\n}\n","import Scene from \"./shared/scene\";\nimport {\n  EVENT_CLICK,\n  EVENT_KEYDOWN,\n  EVENT_KEYUP,\n  EVENT_MOUSEUP,\n  SCREEN_HEIGHT,\n  SCREEN_WIDTH\n} from \"../utils/variables\";\nimport Player from \"../components/player\";\nimport Score from \"../components/score\";\nimport Modal from \"../components/modal\";\nimport Button from \"../components/button\";\nimport Data from \"../utils/data\";\nimport { isMobileMethod } from \"../utils/mobile-device\";\nimport GameLogic from \"./shared/game.logic\";\nimport Level from \"../components/level\";\n\nexport const isMobile = isMobileMethod.any();\n\nconst SCORE_MARGIN = 10;\n\nexport default class ScenePlay extends Scene {\n  /**\n   * @param navigator {Navigator}\n   * @param eventEmitter {Observable}\n   */\n  constructor(navigator, eventEmitter) {\n    super(navigator, eventEmitter);\n\n    this.buttonPause = new Button(\n      this.eventEmitter,\n      SCORE_MARGIN,\n      SCORE_MARGIN,\n      60,\n      30,\n      \"PAUSE\"\n    );\n    this.buttonPause.backgroundColor = \"#00000000\";\n    this.buttonPause.textSize = 20;\n    this.buttonPause.listenerEvent(EVENT_CLICK, () => {\n      if (this.currentGame.canPauseGame()) {\n        this.currentGame.pause();\n        this.showModal(Data.getInstance().getScore(), false);\n      }\n    });\n\n    this.listenerEvent(EVENT_KEYDOWN, this.keyDown.bind(this));\n    this.listenerEvent(EVENT_KEYUP, this.keyUp.bind(this));\n\n    this.initGame();\n  }\n\n  initGame() {\n    this.isModalShow = false;\n\n    // game logic\n    if (this.currentGame) {\n      this.currentGame.destroy();\n    }\n\n    // create level\n    this.level = new Level(\n      this.eventEmitter,\n      0,\n      0,\n      SCREEN_WIDTH,\n      SCREEN_HEIGHT,\n      \"#000\"\n    );\n\n    // player component\n    this.player = new Player(\n      this.eventEmitter,\n      this.level.playerInitialPosition.x,\n      this.level.playerInitialPosition.y,\n      30,\n      35\n    );\n    this.currentGame = new GameLogic(this.level.playerInitialPosition);\n    this.currentGame.player.component = this.player;\n    this.currentGame.level = this.level;\n\n    // score component\n    const score = new Score(\n      this.eventEmitter,\n      SCREEN_WIDTH - SCORE_MARGIN,\n      SCORE_MARGIN\n    );\n    score.backgroundColor = \"#00000000\";\n    this.currentGame.score = score;\n\n    // add components to the element array\n    this.elements = [this.player, this.buttonPause];\n    this.elements.push(score);\n\n    // elements of the game\n    this.playableElements = [this.player];\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    // execute game logic\n    this.currentGame.play();\n\n    // render background\n    this.cleanCanvas(context);\n\n    this.renderOrRemovePlayableElements(context);\n\n    // render scene elements\n    for (const element of this.elements) {\n      element.render(context);\n    }\n  }\n\n  keyDown(event) {\n    this.currentGame.directionKeys.addKey(event.key);\n  }\n\n  keyUp(event) {\n    this.currentGame.directionKeys.removeKey(event.key);\n  }\n\n  showModal(score, restartGame = true) {\n    if (!this.isModalShow) {\n      this.isModalShow = true;\n      const modalWidth = 300;\n      const modalHeight = 200;\n      const modal = new Modal(\n        this.eventEmitter,\n        SCREEN_WIDTH / 2 - modalWidth / 2,\n        SCREEN_HEIGHT / 2 - modalWidth / 2,\n        modalWidth,\n        modalHeight\n      );\n      Data.getInstance().saveScore(\n        Math.max(Data.getInstance().getScore(), score)\n      );\n      modal.score = score;\n      modal.buttonPlay.listenerEvent(EVENT_MOUSEUP, () => {\n        modal.buttonPlay.destroy.emit();\n        modal.buttonShareRecord.destroy.emit();\n        modal.buttonCredits.destroy.emit();\n        this.currentGame.unpause();\n        this.elements.pop();\n        this.isModalShow = false;\n        if (restartGame) {\n          this.initGame();\n        }\n      });\n      this.elements.push(modal);\n    }\n  }\n\n  renderOrRemovePlayableElements(context) {\n    const toRemove = new Set();\n    for (const element of this.playableElements) {\n      if (this.isElementVisible(element)) {\n        element.render(context);\n      } else {\n        toRemove.add(element.id);\n      }\n    }\n    this.playableElements = this.playableElements.filter(\n      (ele) => !toRemove.has(ele.id)\n    );\n  }\n\n  isElementVisible(element) {\n    return element.y - element.height * 2 < SCREEN_HEIGHT;\n  }\n\n  cleanCanvas(context) {\n    this.level.render(context);\n  }\n}\n","import {\n  EVENT_RESIZE,\n  SCENE_GAME,\n  SCREEN_RATIO,\n  SCREEN_WIDTH,\n} from \"./utils/variables\";\nimport ScenePlay from \"./scenes/play.scene\";\nimport Observable from \"./utils/observable\";\n\nexport default class Navigator {\n  /**\n   * @param scene {number}\n   * @param eventEmitter {Observable}\n   */\n  constructor(scene, eventEmitter) {\n    this.gameWidth = SCREEN_WIDTH;\n    this.gameHeght = SCREEN_WIDTH * SCREEN_RATIO;\n    this.sceneClasses = new Map();\n    this.sceneClasses.set(SCENE_GAME, ScenePlay);\n    this.scenesInstances = new Map();\n    /** @member {Scene} */\n    this.currentScene = null;\n    eventEmitter.on((data) => {\n      this.currentScene.eventEmitter.emit(data);\n      if (data.event === EVENT_RESIZE && data.dimension) {\n        this.gameWidth = data.dimension.w;\n        this.gameHeght = data.dimension.h;\n        this.updateGameDimensions();\n      }\n    });\n\n    // initial navigation\n    this.navigate(scene);\n  }\n\n  /**\n   * Navigate to a different scene\n   * @param scene {number}\n   */\n  navigate(scene) {\n    if (this.scenesInstances.has(scene)) {\n      this.currentScene = this.scenesInstances.get(scene);\n    } else if (this.sceneClasses.has(scene)) {\n      this.scenesInstances.set(\n        scene,\n        new (this.sceneClasses.get(scene))(this, new Observable()),\n      );\n      this.currentScene = this.scenesInstances.get(scene);\n    }\n    this.updateGameDimensions();\n  }\n\n  updateGameDimensions() {\n    if (this.currentScene) {\n      this.currentScene.width = this.gameWidth;\n      this.currentScene.height = this.gameHeght;\n    }\n  }\n}\n","import Navigator from \"./navigator\";\nimport Observable from \"./utils/observable\";\nimport { unscale } from \"./utils/math\";\nimport {\n  SCREEN_WIDTH,\n  SCREEN_RATIO,\n  SCENE_GAME,\n  STOP,\n  EVENT_CLICK,\n  EVENT_MOUSEDOWN,\n  EVENT_MOUSEUP,\n  EVENT_MOUSEOUT,\n  EVENT_MOUSELEAVE,\n  EVENT_MOUSEMOVE,\n  EVENT_TOUCHDOWN,\n  EVENT_TOUCHUP,\n  EVENT_TOUCHCANCEL,\n  EVENT_TOUCHMOVE,\n  EVENT_RESIZE,\n  RUNNING,\n  FPS,\n  EVENT_KEYDOWN,\n  EVENT_KEYPRESS,\n  EVENT_KEYUP,\n} from \"./utils/variables\";\n\nconst intervalPerSecond = 1000 / FPS;\n\nlet gameInstance = null;\n\nexport default class Game {\n  constructor() {\n    window.addEventListener(\"resize\", this.resizeScreen.bind(this));\n\n    /** @member {HTMLCanvasElement} */\n    this.canvas = document.getElementById(\"game\");\n\n    this.registerEvents();\n\n    /** @member {Observable} */\n    this.eventEmitter = new Observable();\n\n    /** @member {CanvasRenderingContext2D} */\n    this.context = this.canvas.getContext(\"2d\");\n\n    /** @member {Navigator} */\n    this.navigatorRoot = new Navigator(SCENE_GAME, this.eventEmitter);\n\n    this.loopStatus = STOP;\n    this.lastTime = 0;\n    this.width = this.canvas.width;\n    this.height = this.canvas.height;\n\n    this.resizeScreen();\n  }\n\n  registerEvents() {\n    // keyboard events\n    this.registerKeyboardEvent(\"keydown\", EVENT_KEYDOWN);\n    this.registerKeyboardEvent(\"keyup\", EVENT_KEYUP);\n    this.registerKeyboardEvent(\"keypress\", EVENT_KEYPRESS);\n\n    // mouse events\n    this.registerClickEvent(\"click\", EVENT_CLICK);\n    this.registerClickEvent(\"mousedown\", EVENT_MOUSEDOWN);\n    this.registerClickEvent(\"mouseup\", EVENT_MOUSEUP);\n    this.registerClickEvent(\"mouseout\", EVENT_MOUSEOUT);\n    this.registerClickEvent(\"mouseleave\", EVENT_MOUSELEAVE);\n    this.registerClickEvent(\"mousemove\", EVENT_MOUSEMOVE);\n\n    // touch events\n    this.registerTouchEvent(\"touchstart\", EVENT_TOUCHDOWN, false);\n    this.registerTouchEvent(\"touchend\", EVENT_TOUCHUP, false);\n    this.registerTouchEvent(\"touchcancel\", EVENT_TOUCHCANCEL, false);\n    this.registerTouchEvent(\"touchmove\", EVENT_TOUCHMOVE, false);\n  }\n\n  /**\n   * @param type {string}\n   * @param eventType {string}\n   * @param option {boolean}\n   */\n  registerClickEvent(type, eventType, option = undefined) {\n    this.canvas.addEventListener(\n      type,\n      (e) => this.clickEvent(e, eventType),\n      option,\n    );\n  }\n\n  /**\n   * @param type {string}\n   * @param eventType {string}\n   * @param option {boolean}\n   */\n  registerTouchEvent(type, eventType, option = undefined) {\n    this.canvas.addEventListener(\n      type,\n      (e) => this.touchEvent(e, eventType),\n      option,\n    );\n  }\n\n  /**\n   * @param type {string}\n   * @param eventType {string}\n   * @param option {boolean}\n   */\n  registerKeyboardEvent(type, eventType, option = undefined) {\n    document.addEventListener(\n      type,\n      (e) => this.keyboardEvent(e, eventType),\n      option,\n    );\n  }\n\n  resizeScreen() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    let calculatedWidth = Math.min(SCREEN_WIDTH, width);\n    let calculatedHeight = calculatedWidth * SCREEN_RATIO;\n\n    if (calculatedHeight > height) {\n      calculatedHeight = height;\n      calculatedWidth = height / SCREEN_RATIO;\n    }\n\n    this.canvas.width = calculatedWidth;\n    this.canvas.height = calculatedHeight;\n\n    window.currentWidth = calculatedWidth;\n    this.eventEmitter.emit({\n      event: EVENT_RESIZE,\n      dimension: { w: calculatedWidth, h: calculatedHeight },\n    });\n  }\n\n  /**\n   * @param event {TouchEvent}\n   * @param type {string}\n   */\n  touchEvent(event, type) {\n    this.emitPositionEvent(\n      {\n        x: event?.targetTouches[0]?.pageX,\n        y: event?.targetTouches[0]?.pageY,\n      },\n      type,\n    );\n  }\n\n  /**\n   * @param event {MouseEvent}\n   * @param type {string}\n   */\n  clickEvent(event, type) {\n    this.emitPositionEvent({ x: event?.clientX, y: event?.clientY }, type);\n  }\n\n  /**\n   * @param event {KeyboardEvent}\n   * @param type {string}\n   */\n  keyboardEvent(event, type) {\n    this.eventEmitter.emit({\n      event: type,\n      key: event.key,\n    });\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   * @param type {string}\n   */\n  emitPositionEvent(position, type) {\n    const rect = this.canvas.getBoundingClientRect();\n    this.eventEmitter.emit({\n      event: type,\n      position: {\n        x: unscale(position.x - rect.left),\n        y: unscale(position.y - rect.top),\n      },\n    });\n  }\n\n  /**\n   * Get game instance\n   * @returns {Game}\n   */\n  static getInstance() {\n    if (!gameInstance) {\n      gameInstance = new Game();\n    }\n    return gameInstance;\n  }\n\n  /**\n   * Initialize game\n   */\n  init() {\n    this.loopStatus = RUNNING;\n    requestAnimationFrame(this.loop.bind(this));\n  }\n\n  /**\n   * Application loop\n   * @param currentTime {number}\n   */\n  loop(currentTime) {\n    if (this.loopStatus === RUNNING) {\n      if (\n        this.loopStatus === RUNNING &&\n        intervalPerSecond <= currentTime - this.lastTime\n      ) {\n        this.lastTime = currentTime;\n\n        this.navigatorRoot.currentScene.render(this.context);\n      }\n\n      requestAnimationFrame(this.loop.bind(this));\n    }\n    // the else here will end the loop\n  }\n}\n","import Game from \"./game/game\";\n\nGame.getInstance().init();\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","SCREEN_RATIO","SCREEN_WIDTH","SCREEN_HEIGHT","GRID_SIZE","EVENT_CLICK","EVENT_MOUSEOUT","EVENT_KEYDOWN","EVENT_KEYUP","Observable","constructor","subscriptions","open","emit","data","i","length","callFunction","func","pipe","functions","lastSteam","stream","on","unsub","filter","f","push","BaseObject","eventEmitter","x","y","width","height","destroy","lastMousePosition","isMouseHover","undefined","id","value","_eventEmitter","stopper","streamCancel","cancelFunction","observable","takeUntil","render","context","listenerEvent","event","callback","validateMouseEventPropagation","position","validateKeyboardEventPropagation","isPositionInside","Scene","navigator","super","backgroundColor","elements","cleanCanvas","element","rect","fillStyle","fill","validateEventPropagation","validation","addVectors","v1","v2","getPointByVectorRotation","vector","pivot","phi","result","Math","cos","sin","rotateVector","scale","currentWidth","unscale","randomNumber","limit","start","floor","random","detectCollision","shape1","shape2","axis","extractAxis","axi","p1","shapeProjection","p2","min","max","normalizeVector","v","sqrt","shape","projection","p","u","BaseShape","rotation","directionVector","scaleShape","brakedShape","updateCoordinates","shapes","getProjection","points","beginPath","moveTo","lineTo","closePath","background","Boolean","stroke","strokeStyle","lineWidth","strokeWidth","animate","moveBrakedPiece","brakeShapes","shipShape","brakeShape","cp","shapeCenter","factor","pow","coverBox","newShapes","count","ceil","pos","Array","map","reduceOpacity","color","extract","alpha","getOpacity","toString","substr","getColorWithOpacity","alphaFactor","parseInt","shapeId","atan2","PI","currentShape","getPosition","projectedShape","Player","updateDirectionVector","Score","score","textSize","textColor","lastTime","font","metrics","measureText","textWidth","textHeight","actualBoundingBoxAscent","actualBoundingBoxDescent","padding","fillText","Button","text","textColorHover","document","body","style","cursor","Modal","text2Size","buttonMargin","createCredits","createPlayButton","createShareButton","w","h","buttonPlay","buttonCredits","focus","buttonShareRecord","url","renderScore","metrics2","text2Width","text2Height","SCORE_KEY","Data","getInstance","saveScore","localStorage","setItem","getScore","getItem","isMobileMethod","Android","userAgent","match","BlackBerry","iOS","Opera","Windows","any","DirectionKeys","presedKeys","clear","addKey","key","isDirectionKey","includes","removeKey","k","hasPressedKeys","directionVec","direction","dir","directionMap","n","consumeNextDirection","acDir1","acDir2","currentDir","nextDir","GameLogic","playerPosition","time","directionKeys","level","player","expectedRotation","velocity","minVelocity","acceleration","deceleration","status","component","enemies","objects","configs","forEach","enemy","obj","play","movePlayer","animateComponents","rot","t","scalar","prevPosition","checkCollisionWithMap","tiles","checkCollisionInProjections","hole","levelComplete","canPauseGame","pause","unpause","updateSpaces","updateScore","checkCollision","shapes1","shapes2","s1","s2","console","log","Tile","type","getRotation","tileShape","getShape","positionCorrection","setupTile","minPosition","maxPosition","s","tileFactor","getGridSize","Bubble","lifeTime","calculateScale","showAndHideFunction","getTimeFactor","growBubbleFunction","roundRect","bubbleDead","Hole","Level","newBubble","components","bubbles","currentLevel","playerInitialPosition","loadLevel","flags","row","col","tile","cleanScreen","renderWatterColor","updateBubbles","toRemove","Set","b","add","has","c","bubble","unshift","clearRect","ScenePlay","buttonPause","currentGame","showModal","keyDown","bind","keyUp","initGame","isModalShow","playableElements","renderOrRemovePlayableElements","restartGame","modalWidth","modalHeight","modal","pop","isElementVisible","ele","Navigator","scene","gameWidth","gameHeght","sceneClasses","Map","set","scenesInstances","currentScene","dimension","updateGameDimensions","navigate","get","intervalPerSecond","gameInstance","Game","addEventListener","resizeScreen","canvas","getElementById","registerEvents","getContext","navigatorRoot","loopStatus","registerKeyboardEvent","registerClickEvent","registerTouchEvent","eventType","option","clickEvent","touchEvent","keyboardEvent","innerWidth","innerHeight","calculatedWidth","calculatedHeight","emitPositionEvent","targetTouches","pageX","pageY","clientX","clientY","getBoundingClientRect","left","top","init","requestAnimationFrame","loop","currentTime"],"sourceRoot":""}