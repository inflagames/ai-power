{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./game/utils/variables.js","webpack:///./game/utils/observable.js","webpack:///./game/components/shared/base-object.js","webpack:///./game/scenes/shared/scene.js","webpack:///./game/utils/math.js","webpack:///./game/components/shared/base-shape.js","webpack:///./game/components/player.js","webpack:///./game/components/score.js","webpack:///./game/components/button.js","webpack:///./game/components/modal.js","webpack:///./game/utils/data.js","webpack:///./game/utils/mobile-device.js","webpack:///./game/scenes/shared/direction-keys.js","webpack:///./game/scenes/shared/game.logic.js","webpack:///./game/components/tile.js","webpack:///./game/components/level.js","webpack:///./game/scenes/play.scene.js","webpack:///./game/navigator.js","webpack:///./game/game.js","webpack:///./main.js"],"sourcesContent":["// game dimensions\nexport const SCREEN_RATIO = 3 / 4;\nexport const SCREEN_WIDTH = 1024;\nexport const SCREEN_HEIGHT = SCREEN_WIDTH * SCREEN_RATIO;\nexport const GRID_SIZE = (SCREEN_WIDTH - 1) / 12;\n\n// game status\nexport const RUNNING = 1;\nexport const PAUSE = 2;\nexport const STOP = 3;\n\n// game events\nexport const EVENT_CLICK = \"0\";\nexport const EVENT_MOUSEDOWN = \"1\";\nexport const EVENT_MOUSEUP = \"2\";\nexport const EVENT_MOUSEMOVE = \"3\";\nexport const EVENT_MOUSEOUT = \"8\";\nexport const EVENT_MOUSELEAVE = \"9\";\nexport const EVENT_TOUCHDOWN = \"4\";\nexport const EVENT_TOUCHUP = \"5\";\nexport const EVENT_TOUCHMOVE = \"6\";\nexport const EVENT_TOUCHCANCEL = \"7\";\nexport const EVENT_RESIZE = \"8\";\nexport const EVENT_KEYPRESS = \"9\";\nexport const EVENT_KEYDOWN = \"10\";\nexport const EVENT_KEYUP = \"11\";\n\n// scene values\nexport const SCENE_GAME = 1;\n\nexport const FPS = 30;\n","export default class Observable {\n  constructor() {\n    /** @member {function[]} */\n    this.subscriptions = [];\n    this.open = true;\n  }\n\n  /**\n   * @param data {Object}\n   */\n  emit(data = {}) {\n    for (let i = 0; i < this.subscriptions.length; i++) {\n      this.callFunction(this.subscriptions[i], data);\n    }\n  }\n\n  async callFunction(func, data) {\n    func(data);\n  }\n\n  /**\n   * @param functions {function}\n   * @return {Observable}\n   */\n  pipe(...functions) {\n    let lastSteam = this;\n    for (const func of functions) {\n      const stream = new Observable();\n      lastSteam.on((data) => func(data, stream));\n      lastSteam = stream;\n    }\n    return lastSteam;\n  }\n\n  /**\n   * @param func {function}\n   */\n  unsub(func) {\n    this.subscriptions = this.subscriptions.filter((f) => f !== func);\n  }\n\n  /**\n   * @param func {function}\n   */\n  on(func) {\n    this.subscriptions.push(func);\n  }\n}\n\n/**\n * Filter the value of an Observable\n * @param stopper {Observable}\n */\nexport function takeUntil(stopper) {\n  let streamCancel = false;\n  const cancelFunction = () => {\n    streamCancel = true;\n    stopper.unsub(cancelFunction);\n  };\n  stopper.on(cancelFunction);\n  return (data, /** @param {Observable} */ observable) => {\n    if (streamCancel) {\n      observable.subscriptions = [];\n    }\n    observable.emit(data);\n  };\n}\n\n/**\n * Filter the value of an Observable\n * @param func {function}\n */\nexport function filterObservable(func) {\n  return (data, /** @param {Observable} */ observable) => {\n    if (func(data)) {\n      observable.emit(data);\n    }\n  };\n}\n\n/**\n * The value of the observable can be mapped and returned with transformations\n * @param func {function}\n */\nexport function mapObservable(func) {\n  return (data, /** @param {Observable} */ observable) => {\n    observable.emit(func(data));\n  };\n}\n","import Observable, {\n  filterObservable,\n  takeUntil,\n} from \"../../utils/observable\";\nimport {\n  EVENT_KEYDOWN,\n  EVENT_KEYPRESS,\n  EVENT_KEYUP,\n  EVENT_MOUSELEAVE,\n  EVENT_MOUSEOUT,\n  EVENT_TOUCHCANCEL,\n  EVENT_TOUCHUP,\n} from \"../../utils/variables\";\n\nexport default class BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    this.destroy = new Observable();\n    /** @member {Observable} */\n    this.eventEmitter = eventEmitter;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.lastMousePosition = null;\n    this.isMouseHover = false;\n\n    // toDo guille 27.08.21: improve this random value to be unique\n    this.id = Math.random() * 1000000;\n  }\n\n  set eventEmitter(value) {\n    this._eventEmitter = value ? value.pipe(takeUntil(this.destroy)) : value;\n  }\n\n  get eventEmitter() {\n    return this._eventEmitter;\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n  }\n\n  /**\n   * Event listener\n   * @param event {string}\n   * @param callback {function}\n   */\n  listenerEvent(event, callback) {\n    this.eventEmitter\n      .pipe(filterObservable((data) => data.event === event))\n      .on((data) => {\n        if (\n          (data &&\n            this.validateMouseEventPropagation(data.position, data.event)) ||\n          this.validateKeyboardEventPropagation(data.event)\n        ) {\n          callback(data);\n        }\n      });\n  }\n\n  validateKeyboardEventPropagation(event) {\n    return (\n      event === EVENT_KEYDOWN ||\n      event === EVENT_KEYUP ||\n      event === EVENT_KEYPRESS\n    );\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   * @param event {string}\n   * @return {boolean}\n   */\n  validateMouseEventPropagation(position, event) {\n    if (\n      event === EVENT_TOUCHUP ||\n      event === EVENT_MOUSEOUT ||\n      event === EVENT_TOUCHCANCEL ||\n      event === EVENT_MOUSELEAVE\n    ) {\n      return true;\n    }\n    if (\n      this.isPositionInside(this.lastMousePosition) &&\n      !this.isPositionInside(position)\n    ) {\n      this.eventEmitter.emit({ event: EVENT_MOUSEOUT });\n    }\n    this.lastMousePosition = position;\n    return (this.isMouseHover = this.isPositionInside(position));\n  }\n\n  isPositionInside(position) {\n    return (\n      position &&\n      position.x >= this.x &&\n      position.x <= this.x + this.width &&\n      position.y >= this.y &&\n      position.y <= this.y + this.height\n    );\n  }\n}\n","import BaseObject from \"../../components/shared/base-object\";\n\nexport default class Scene extends BaseObject {\n  /**\n   * @param navigator {Navigator}\n   * @param eventEmitter {Observable}\n   */\n  constructor(navigator, eventEmitter) {\n    super(eventEmitter);\n    this.navigator = navigator;\n    this.backgroundColor = \"#f00\";\n    /** @member {BaseObject[]} */\n    this.elements = [];\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    this.cleanCanvas(context);\n    // render scene elements\n    for (const element of this.elements) {\n      element.render(context);\n    }\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  cleanCanvas(context) {\n    context.rect(0, 0, this.width, this.height);\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   * @param event {string}\n   * @return {boolean}\n   */\n  validateEventPropagation(position, event) {\n    const validation = super.validateEventPropagation(position, event);\n    if (validation) {\n      for (const e of this.elements) {\n        if (e.validateEventPropagation(position, event)) {\n          return false;\n        }\n      }\n    }\n    return validation;\n  }\n}\n","import { SCREEN_WIDTH } from \"./variables\";\n\n/**\n * Vector to angle conversion\n * @param vector {{x: number, y: number}}\n * @returns {number}\n */\nexport function vectorToAngle(vector) {\n  return Math.atan2(vector.y, vector.x);\n}\n\n/**\n * Multiply a vector by a scalar\n * @param vector {{x: number, y: number}}\n * @param scalar {number}\n * @returns {{x: number, y: number}}\n */\nexport function multiplyVector(vector, scalar) {\n  return { x: vector.x * scalar, y: vector.y * scalar };\n}\n\n/**\n * Add two vectors\n * @param v1 {{x: number, y: number}}\n * @param v2 {{x: number, y: number}}\n * @returns {{x: number, y: number}}\n */\nexport function addVectors(v1, v2) {\n  return { x: v1.x + v2.x, y: v1.y + v2.y };\n}\n\n/**\n * @param maxValue {number}\n * @param currentValue {number}\n */\nexport function linearFunction(maxValue, currentValue) {\n  return Math.min(currentValue / maxValue, 1);\n}\n\n/**\n * @param maxValue {number}\n * @param currentValue {number}\n */\nexport function logFunction(maxValue, currentValue) {\n  const x = (9 * currentValue) / maxValue + 1;\n  return Math.min(Math.log10(x), 1);\n}\n\n/**\n * @param vector {{x: number, y: number}}\n * @param pivot {{x: number, y: number}}\n * @param phi {number}\n * @return {{x: number, y: number}}\n */\nexport function getPointByVectorRotation(vector, pivot, phi) {\n  const result = rotateVector(vector, phi);\n  return { x: pivot.x + result.x, y: pivot.y - result.y };\n}\n\n/**\n * @param vector {{x: number, y: number}}\n * @param phi {number}\n * @return {{x: number, y: number}}\n */\nexport function rotateVector(vector, phi) {\n  return {\n    x: vector.x * Math.cos(phi) - vector.y * Math.sin(phi),\n    y: vector.x * Math.sin(phi) + vector.y * Math.cos(phi)\n  };\n}\n\nexport function getVector(p1, p2) {\n  return { x: p2.x - p1.x, y: p2.y - p1.y };\n}\n\nexport function distance(p1, p2) {\n  // toDo guille 31.08.21: maybe it can be improved (check it)\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\n/**\n * @param value {number}\n * @return {number}\n */\nexport function scale(value) {\n  return (value * window.currentWidth) / SCREEN_WIDTH;\n}\n\nexport function unscale(value) {\n  return (value * SCREEN_WIDTH) / window.currentWidth;\n}\n\n/**\n * @param limit {number}\n * @param start {number}\n * @returns {number}\n */\nexport function randomNumber(limit, start = 0) {\n  return Math.floor(Math.random() * limit) + start;\n}\n\n/**\n * @param shape1 {{x: number, y: number}[]}\n * @param shape2 {{x: number, y: number}[]}\n * @return {boolean}\n */\nexport function detectCollision(shape1, shape2) {\n  if (shape1.length < 3 || shape2.length < 3) {\n    return false;\n  }\n  const axis = [...extractAxis(shape1), ...extractAxis(shape2)];\n\n  for (const axi of axis) {\n    const p1 = shapeProjection(shape1, axi);\n    const p2 = shapeProjection(shape2, axi);\n    if (\n      !(\n        (p1.min > p2.min && p1.min < p2.max) ||\n        (p1.max > p2.min && p1.max < p2.max) ||\n        (p2.min > p1.min && p2.min < p1.max) ||\n        (p2.max > p1.min && p2.max < p1.max) ||\n        (p1.min === p2.min && p1.max === p2.max)\n      )\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Normalize a vector\n * @param v {{x: number, y: number}}\n * @returns {{x: number, y: number}}\n */\nexport function normalizeVector(v) {\n  if (v.x === 0 && v.y === 0) {\n    return { x: 0, y: 0 };\n  }\n  const length = Math.sqrt(v.x * v.x + v.y * v.y);\n  return { x: v.x / length, y: v.y / length };\n}\n\n/**\n * Linear interpolation between two vectors\n * @param v1 {{x: number, y: number}}\n * @param v2 {{x: number, y: number}}\n * @param t {number}\n * @returns {{x: number, y: number}}\n */\nexport function lerpVector(v1, v2, t) {\n  return {\n    x: v1.x + (v2.x - v1.x) * t,\n    y: v1.y + (v2.y - v1.y) * t\n  };\n}\n\n/**\n * @param shape {{x: number, y: number}[]}\n * @return {{x: number, y: number}[]}\n */\nfunction extractAxis(shape) {\n  if (shape.length <= 1) {\n    return [];\n  }\n  const axis = [];\n  for (let i = 1; i < shape.length; i++) {\n    axis.push({\n      x: shape[i].x - shape[i - 1].x,\n      y: shape[i - 1].y - shape[i].y\n    });\n  }\n  axis.push({\n    x: shape[0].x - shape[shape.length - 1].x,\n    y: shape[shape.length - 1].y - shape[0].y\n  });\n  return axis;\n}\n\n/**\n * @param shape {{x: number, y: number}[]}\n * @param v {{x: number, y: number}}\n * @return {{max: number, min: number}}\n */\nfunction shapeProjection(shape, v) {\n  let min = projection(v, shape[0]);\n  let max = min;\n  for (let i = 1; i < shape.length; i++) {\n    const p = projection(v, shape[i]);\n    min = Math.min(min, p);\n    max = Math.max(max, p);\n  }\n  return { min, max };\n}\n\n/**\n * @param v {{x: number, y: number}}\n * @param u {{x: number, y: number}}\n * @return {number}\n */\nfunction projection(v, u) {\n  return (u.x * v.x + u.y * v.y) / (v.x * v.x + v.y * v.y);\n}\n","import BaseObject from \"./base-object\";\nimport { getPointByVectorRotation, scale, vectorToAngle } from \"../../utils/math\";\n\nexport default class BaseShape extends BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = \"#00f\";\n    this.rotation = 0;\n    this.directionVector = { x: 1, y: 0 };\n    this.scaleShape = 3.3;\n    this.brakedShape = null;\n  }\n\n  updateCoordinates(x, y) {\n    this.x = x || this.x;\n    this.y = y || this.y;\n  }\n\n  render(context) {\n    // ship painted\n    const shapes = this.getProjection();\n\n    for (const shape of shapes) {\n      const points = shape.points;\n      if (points.length === 0) {\n        continue;\n      }\n      context.beginPath();\n      context.moveTo(scale(points[0].x), scale(points[0].y));\n      for (let i = 1; i < points.length; i++) {\n        context.lineTo(scale(points[i].x), scale(points[i].y));\n      }\n      context.closePath();\n      context.fillStyle = shape.background;\n      if (Boolean(shape.stroke)) {\n        context.stroke();\n        context.strokeStyle = shape.stroke;\n        context.lineWidth = shape.strokeWidth * 5;\n      }\n      context.fill();\n    }\n  }\n\n  animate() {\n    this.moveBrakedPiece();\n  }\n\n  brakeShapes() {\n    const shapes = this.shipShape().shapes;\n\n    this.brakedShape = { shapes: [] };\n\n    // brake in triangles\n    for (const shape of shapes) {\n      this.brakedShape = {\n        shapes: [...this.brakedShape.shapes, ...this.brakeShape(shape)],\n      };\n    }\n\n    // calculate direction vector\n    for (const shape of this.brakedShape.shapes) {\n      const cp = this.shapeCenter(shape.points);\n      const d = Math.random() + 0.5;\n      const factor = d / Math.sqrt(Math.pow(cp.x, 2) + Math.pow(cp.y, 2));\n      shape.vector = { x: cp.x * factor, y: cp.y * factor };\n    }\n  }\n\n  /**\n   * @param shape {{points: {x: number, y: number}[], background: string}}\n   * @return {{x: number, y: number}[]}\n   */\n  brakeShape(shape) {\n    if (shape.points.length === 0) {\n      return shape.points;\n    }\n    const { min, max } = this.coverBox(shape.points);\n\n    const fixedSize = 2;\n    const size = 2.5;\n    const newShapes = [];\n    let count = Math.ceil(((max.x - min.x) * (max.y - min.y)) / fixedSize);\n    count = Math.min(count, 150);\n\n    for (let i = 0; i < count; i++) {\n      const pos = {\n        x: (max.x - min.x) * Math.random() + min.x,\n        y: (max.y - min.y) * Math.random() + min.y,\n      };\n      newShapes.push({\n        points: new Array(3).fill(null).map(() => ({\n          x: pos.x + size * Math.random(),\n          y: pos.y + size * Math.random(),\n        })),\n        background: shape.background,\n      });\n    }\n\n    return newShapes;\n  }\n\n  /**\n   * @param points {{x: number, y: number}[]}\n   */\n  shapeCenter(points) {\n    const { min, max } = this.coverBox(points);\n    return { x: (max.x + min.x) / 2, y: (max.y + min.y) / 2 };\n  }\n\n  coverBox(points) {\n    const min = { x: points[0].x, y: points[0].y };\n    const max = { ...min };\n    for (let i = 1; i < points.length; i++) {\n      min.x = Math.min(min.x, points[i].x);\n      min.y = Math.min(min.y, points[i].y);\n      max.x = Math.max(max.x, points[i].x);\n      max.y = Math.max(max.y, points[i].y);\n    }\n    return { min, max };\n  }\n\n  moveBrakedPiece() {\n    if (this.brakedShape) {\n      for (const shape of this.brakedShape.shapes) {\n        shape.points = shape.points.map((p) => ({\n          x: p.x + shape.vector.x,\n          y: p.y + shape.vector.y,\n        }));\n        shape.background = this.reduceOpacity(shape.background, 30);\n      }\n    }\n  }\n\n  /**\n   * @param color {string}\n   * @param extract {number}\n   * @returns {string}\n   */\n  reduceOpacity(color, extract) {\n    let alpha = this.getOpacity(color);\n    alpha = Math.min(255, Math.max(alpha - extract, 0));\n    alpha = alpha.toString(16);\n    return `#${color.substr(1, 6)}${(alpha.length < 2 ? \"0\" : \"\") + alpha}`;\n  }\n\n  /**\n   * @param color {string}\n   * @return {number}\n   */\n  getOpacity(color) {\n    return color.length > 7 ? parseInt(color.substr(7, 2), 16) : 255;\n  }\n\n  /**\n   * @return {{points: {x: number, y: number}[], background: string, stroke: string, strokeWidth: number, smoke: boolean}[]}\n   */\n  getProjection() {\n    // const rotation = this.rotation + Math.PI / 2;\n    const rotation = vectorToAngle(this.directionVector) + Math.PI / 2;\n\n    const shapes = this.currentShape().shapes;\n    const pivot = this.getPosition();\n\n    const projectedShape = [];\n\n    for (const shape of shapes) {\n      const points = shape.points.map((p) => ({\n        x: p.x * this.scaleShape,\n        y: p.y * this.scaleShape,\n      }));\n      for (let i = 0; i < points.length; i++) {\n        points[i] = getPointByVectorRotation(points[i], pivot, rotation);\n      }\n      projectedShape.push({ ...shape, points });\n    }\n    return projectedShape;\n  }\n\n  /**\n   * @returns {{x: number, y: number}}\n   */\n  getPosition() {\n    return { x: this.x, y: this.y };\n  }\n\n  /**\n   * @returns {{shapes: {background: string, points: {x: number, y: number}[]}[]}}\n   */\n  currentShape() {\n    return {\n      shapes: [],\n    };\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport shape from \"../shapes/character.json\";\n\nexport default class Player extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    super(eventEmitter, x, y, width, height);\n    /** @member {number} */\n    this.rotation = Math.PI / 2;\n    this.directionVector = { x: 0, y: 1 };\n    this.scaleShape = 1.5;\n    this.shape = shape;\n\n    this.updateCoordinates();\n  }\n\n  /**\n   * Update the coordinates of the player\n   * @param x {number}\n   * @param y {number}\n   */\n  updateCoordinates({ x, y } = {}) {\n    this.x = x || this.x;\n    this.y = y || this.y;\n  }\n\n  /**\n   * Update the direction vector of the player\n   * @param v\n   */\n  updateDirectionVector(v) {\n    this.directionVector = v;\n  }\n\n  animate() {\n    super.animate();\n  }\n\n  currentShape() {\n    return this.brakedShape || this.shape;\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { scale } from \"../utils/math\";\n\nexport default class Score extends BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number} corner coordinates\n   * @param y {number} corner coordinates\n   */\n  constructor(eventEmitter, x, y) {\n    super(eventEmitter, x, y);\n    this.score = 0;\n    this.textSize = 30;\n    this.backgroundColor = \"#000\";\n    this.textColor = \"#fff\";\n\n    this.lastTime = 0;\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    context.font = `${scale(this.textSize)}px Arial`;\n    const metrics = context.measureText(this.score + \"\");\n    const textWidth = metrics.width;\n    const textHeight =\n      metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n    const padding = 5;\n\n    context.beginPath();\n    context.rect(\n      scale(this.x - textWidth - padding * 2),\n      scale(this.y),\n      scale(textWidth + padding * 2),\n      scale(textHeight + padding * 2),\n    );\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n\n    context.beginPath();\n    context.font = `${scale(this.textSize)}px Arial`;\n    context.fillStyle = this.textColor;\n    context.fillText(\n      this.score + \"\",\n      scale(this.x - textWidth - padding),\n      scale(this.y + textHeight + padding),\n    );\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { scale, unscale } from \"../utils/math\";\nimport { EVENT_MOUSEMOVE, EVENT_MOUSEOUT } from \"../utils/variables\";\n\nexport default class Button extends BaseObject {\n  /**\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param text {string}\n   * @param eventEmitter {Observable}\n   */\n  constructor(eventEmitter, x, y, width, height, text) {\n    super(eventEmitter, x, y, width, height);\n    this.text = text;\n    this.textSize = 10;\n    this.backgroundColor = \"#000\";\n    this.textColor = \"#fff\";\n    this.textColorHover = \"#9a9a9a\";\n\n    this.listenerEvent(EVENT_MOUSEMOVE, (data) => {\n      if (this.isPositionInside(data.position)) {\n        document.body.style.cursor = \"pointer\";\n      }\n    });\n    this.listenerEvent(EVENT_MOUSEOUT, (data) => {\n      document.body.style.cursor = \"default\";\n    });\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    context.beginPath();\n    context.rect(\n      scale(this.x),\n      scale(this.y),\n      scale(this.width),\n      scale(this.height),\n    );\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n\n    context.beginPath();\n    context.font = `${scale(this.textSize)}px Arial`;\n    const metrics = context.measureText(this.text);\n    const textWidth = unscale(metrics.width);\n    const textHeight = unscale(\n      metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent,\n    );\n    context.fillStyle = this.isMouseHover\n      ? this.textColorHover\n      : this.textColor;\n    // context.text;\n    context.fillText(\n      this.text,\n      scale(this.x + this.width / 2 - textWidth / 2),\n      scale(this.y + this.height / 2 + textHeight / 2),\n    );\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { EVENT_CLICK, SCREEN_HEIGHT, SCREEN_WIDTH } from \"../utils/variables\";\nimport { scale, unscale } from \"../utils/math\";\nimport Button from \"./button\";\n\nexport default class Modal extends BaseObject {\n  /**\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param eventEmitter {Observable}\n   */\n  constructor(eventEmitter, x, y, width, height) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = \"#fff\";\n    this.textSize = 90;\n    this.text2Size = 30;\n    this.text = \"RECORD\";\n    this.score = 1000;\n\n    const buttonHeight = 30;\n    const button1Width = 40;\n    const button2Width = 120;\n    const buttonMargin = 15;\n\n    this.createCredits(\n      this.x + buttonMargin,\n      this.y,\n      button1Width,\n      buttonHeight,\n    );\n    this.createPlayButton(\n      this.x + (this.width - button1Width - button2Width - buttonMargin) / 2,\n      this.y + this.height - buttonHeight - buttonMargin,\n      button1Width,\n      buttonHeight,\n    );\n    this.createShareButton(\n      this.x +\n        (this.width - button1Width - button2Width - buttonMargin) / 2 +\n        button1Width +\n        buttonMargin,\n      this.y + this.height - buttonHeight - buttonMargin,\n      button2Width,\n      buttonHeight,\n    );\n  }\n\n  createPlayButton(x, y, w, h) {\n    this.buttonPlay = new Button(this.eventEmitter, x, y, w, h, \"PLAY\");\n  }\n\n  createCredits(x, y, w, h) {\n    this.buttonCredits = new Button(this.eventEmitter, x, y, w, h, \"@ggjnez92\");\n    this.buttonCredits.backgroundColor = \"#00000000\";\n    this.buttonCredits.textColor = \"#000\";\n    this.buttonCredits.textColorHover = \"#0048ff\";\n    this.buttonCredits.listenerEvent(EVENT_CLICK, () =>\n      window.open(\"https://twitter.com/ggjnez92\", \"_blank\").focus(),\n    );\n  }\n\n  createShareButton(x, y, w, h) {\n    this.buttonShareRecord = new Button(\n      this.eventEmitter,\n      x,\n      y,\n      w,\n      h,\n      \"SHARE ON TWITTER\",\n    );\n    this.buttonShareRecord.listenerEvent(EVENT_CLICK, () => {\n      const message = `I%20just%20make%20a%20new%20record%20of%20${this.score}%20points%20in%20the%20%23azetz%20%23game%20developed%20for%20the%20%40js13kGames%20competition.%0A%0A%23js13k%20%23gamedev%0A%0AIf%20you%20want%20to%20check%20it%20out%2C%20here%20is%20the%20link%20to%20the%20%23github%20repository%0Ahttps%3A%2F%2Fgithub.com%2Finflagames%2Fazetz`;\n      const url = `https://twitter.com/intent/tweet?text=${message}`;\n      window.open(url, \"_blank\").focus();\n    });\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    context.beginPath();\n    context.rect(0, 0, scale(SCREEN_WIDTH), scale(SCREEN_HEIGHT));\n    context.fillStyle = \"rgba(0,0,0,0.82)\";\n    context.fill();\n\n    context.beginPath();\n    context.rect(\n      scale(this.x),\n      scale(this.y),\n      scale(this.width),\n      scale(this.height),\n    );\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n\n    this.buttonPlay.render(context);\n    this.buttonCredits.render(context);\n    this.buttonShareRecord.render(context);\n\n    this.renderScore(context);\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  renderScore(context) {\n    // toDo guille 01.09.21: refactor this code\n    context.beginPath();\n    context.font = `${scale(this.textSize)}px Arial`;\n    const metrics = context.measureText(this.score + \"\");\n    const textWidth = unscale(metrics.width);\n    const textHeight = unscale(\n      metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent,\n    );\n    context.fillStyle = \"#000\";\n    context.fillText(\n      this.score + \"\",\n      scale(this.x + this.width / 2 - textWidth / 2),\n      scale(this.y + this.height / 2 + textHeight / 2),\n    );\n\n    context.beginPath();\n    context.font = `${scale(this.text2Size)}px Arial`;\n    const metrics2 = context.measureText(this.text);\n    const text2Width = unscale(metrics2.width);\n    const text2Height = unscale(\n      metrics2.actualBoundingBoxAscent + metrics2.actualBoundingBoxDescent,\n    );\n    context.fillStyle = \"#000\";\n    context.fillText(\n      this.text,\n      scale(this.x + this.width / 2 - text2Width / 2),\n      scale(\n        this.y +\n          this.height / 2 +\n          textHeight / 2 -\n          textHeight -\n          text2Height / 2,\n      ),\n    );\n  }\n}\n","const APPLICATION_PREFIX = \"azetzv1\";\nconst SCORE_KEY = `${APPLICATION_PREFIX}_game_score`;\n\n/** @type Data */\nlet data = null;\n\nexport default class Data {\n  static getInstance() {\n    if (!data) {\n      data = new Data();\n    }\n    return data;\n  }\n\n  /**\n   * @param score {number}\n   */\n  saveScore(score) {\n    localStorage.setItem(SCORE_KEY, score + \"\");\n  }\n\n  getScore() {\n    const score = localStorage.getItem(SCORE_KEY);\n    return score ? +score : 0;\n  }\n}\n","export const isMobileMethod = {\n  Android: function () {\n    return navigator.userAgent.match(/Android/i);\n  },\n  BlackBerry: function () {\n    return navigator.userAgent.match(/BlackBerry/i);\n  },\n  iOS: function () {\n    return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n  },\n  Opera: function () {\n    return navigator.userAgent.match(/Opera Mini/i);\n  },\n  Windows: function () {\n    return (\n      navigator.userAgent.match(/IEMobile/i) ||\n      navigator.userAgent.match(/WPDesktop/i)\n    );\n  },\n  any: function () {\n    return (\n      isMobileMethod.Android() ||\n      isMobileMethod.BlackBerry() ||\n      isMobileMethod.iOS() ||\n      isMobileMethod.Opera() ||\n      isMobileMethod.Windows()\n    );\n  },\n};\n","import { normalizeVector } from \"../../utils/math\";\n\nexport const UP_DIRECTION = 1;\nexport const DOWN_DIRECTION = 2;\nexport const LEFT_DIRECTION = 4;\nexport const RIGHT_DIRECTION = 8;\n\nexport default class DirectionKeys {\n  constructor() {\n    /** @member {string[]} */\n    this.presedKeys = [];\n  }\n\n  clear() {\n    this.presedKeys = [];\n  }\n\n  /**\n   * @param key {string}\n   */\n  addKey(key) {\n    if (this.isDirectionKey(key) && !this.presedKeys.includes(key)) {\n      this.presedKeys.push(key);\n    }\n  }\n\n  /**\n   * @param key {string}\n   */\n  removeKey(key) {\n    this.presedKeys = this.presedKeys.filter((k) => k !== key);\n  }\n\n  /**\n   * @param key {string}\n   * @return {boolean}\n   */\n  isDirectionKey(key) {\n    return key === \"a\" || key === \"w\" || key === \"s\" || key === \"d\";\n  }\n\n  /**\n   * Current state of the keys\n   * @returns {boolean}\n   */\n  hasPressedKeys() {\n    return this.presedKeys.length > 0;\n  }\n\n  /**\n   * @returns {{x: number, y: number}}\n   */\n  directionVector() {\n    let directionVec = { x: 0, y: 0 };\n\n    /** @type {number} */\n    const direction = this.direction();\n\n    if ((direction & UP_DIRECTION) !== 0) {\n      directionVec.y = -1;\n    } else if ((direction & DOWN_DIRECTION) !== 0) {\n      directionVec.y = 1;\n    }\n\n    if ((direction & LEFT_DIRECTION) !== 0) {\n      directionVec.x = -1;\n    } else if ((direction & RIGHT_DIRECTION) !== 0) {\n      directionVec.x = 1;\n    }\n\n    // console.log(normalizeVector(directionVec));\n\n    return normalizeVector(directionVec);\n  }\n\n  direction() {\n    let dir = 0;\n\n    if (this.presedKeys.length > 0) {\n      dir = this.directionMap(this.presedKeys[0]);\n      let position = 1;\n      while (position < this.presedKeys.length) {\n        let n = this.consumeNextDirection(\n          UP_DIRECTION,\n          LEFT_DIRECTION,\n          RIGHT_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n        n |= this.consumeNextDirection(\n          DOWN_DIRECTION,\n          LEFT_DIRECTION,\n          RIGHT_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n        n |= this.consumeNextDirection(\n          LEFT_DIRECTION,\n          UP_DIRECTION,\n          DOWN_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n        n |= this.consumeNextDirection(\n          RIGHT_DIRECTION,\n          UP_DIRECTION,\n          DOWN_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n\n        if (n) {\n          dir |= n;\n          break;\n        }\n\n        position++;\n      }\n    }\n\n    return dir;\n  }\n\n  consumeNextDirection(dir, acDir1, acDir2, currentDir, nextDir) {\n    if (dir === currentDir && (nextDir === acDir1 || nextDir === acDir2)) {\n      return nextDir;\n    }\n    return 0;\n  }\n\n  /**\n   * @param key {string}\n   * @returns {number}\n   */\n  directionMap(key) {\n    if (key === \"w\") {\n      return UP_DIRECTION;\n    }\n    if (key === \"s\") {\n      return DOWN_DIRECTION;\n    }\n    if (key === \"a\") {\n      return LEFT_DIRECTION;\n    }\n    if (key === \"d\") {\n      return RIGHT_DIRECTION;\n    }\n    return 0;\n  }\n}\n","import { addVectors, detectCollision, lerpVector, multiplyVector, normalizeVector } from \"../../utils/math\";\nimport { SCREEN_HEIGHT, SCREEN_WIDTH } from \"../../utils/variables\";\nimport DirectionKeys from \"./direction-keys\";\n\nconst GAME_STOP = \"3\";\nconst GAME_OVER = \"5\";\nconst GAME_PAUSE = \"7\";\n\nexport default class GameLogic {\n  constructor() {\n    /** @member {Score} */\n    this.score = null;\n\n    this.time = 0;\n\n    /** @member {DirectionKeys} */\n    this.directionKeys = new DirectionKeys();\n\n    this.player = {\n      position: {\n        x: SCREEN_WIDTH / 2,\n        y: SCREEN_HEIGHT / 2\n      },\n      rotation: Math.PI / 2, // todo: eliminate this property\n      directionVector: { x: 0, y: 1 },\n      expectedRotation: 0,\n      velocity: 0,\n      minVelocity: 10,\n      acceleration: 20,\n      deceleration: -1.5,\n      status: [GAME_STOP],\n      component: undefined\n    };\n    this.enemies = [];\n    this.objects = [];\n\n    this.configs = {};\n  }\n\n  destroy() {\n    this.enemies.forEach((enemy) => enemy.component.destroy.emit());\n    this.objects.forEach((obj) => obj.component.destroy.emit());\n    this.player.component.destroy.emit();\n  }\n\n  /**\n   * run an iteration of the game logic\n   */\n  play() {\n    this.movePlayer();\n    this.animateComponents();\n  }\n\n  /**\n   * Move the player base on the direction keys\n   */\n  movePlayer() {\n    const VELOCITY = 10;\n\n    if (this.directionKeys.hasPressedKeys()) {\n      const rot = lerpVector(this.player.directionVector, this.directionKeys.directionVector(), 0.95);\n      this.player.directionVector = multiplyVector(normalizeVector(rot), VELOCITY);\n      this.player.position = addVectors(this.player.directionVector, this.player.position);\n    }\n\n    this.player.component.updateCoordinates(this.player.position);\n    this.player.component.updateDirectionVector({ ...this.player.directionVector, y: -this.player.directionVector.y });\n    // toDo (gonzalezext)[18.04.24]: validate collision\n  }\n\n  canPauseGame() {\n    // toDo (gonzalezext)[18.04.24]:\n    return true;\n  }\n\n  animateComponents() {\n    // toDo (gonzalezext)[18.04.24]:\n    // animation in general\n    // this.ship.component.animate();\n  }\n\n  pause() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  unpause() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  updateSpaces() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  updateScore() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  /**\n   * @return {number}\n   */\n  getScore() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  checkCollision() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  /**\n   * @param shapes1 {{points: {x: number, y: number}[], background: string}[]}\n   * @param shapes2 {{points: {x: number, y: number}[], background: string}[]}\n   * @return {boolean}\n   */\n  checkCollisionInProjections(shapes1, shapes2) {\n    for (const s1 of shapes1) {\n      for (const s2 of shapes2) {\n        if (detectCollision(s1.points, s2.points)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport shapeTile1 from \"../shapes/tile1.json\";\nimport shapeTile2 from \"../shapes/tile2.json\";\nimport { GRID_SIZE } from \"../utils/variables\";\nimport { addVectors, randomNumber } from \"../utils/math\";\n\nexport default class Tile extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param size {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, size) {\n    super(eventEmitter, x, y, size * GRID_SIZE, size * GRID_SIZE);\n\n    this.directionVector = this.getRotation();\n\n    this.size = size;\n    this.tileShape = size === 1 ? {...shapeTile2} : {...shapeTile1};\n    this.positionCorrection = { x: 0, y: 0 };\n\n    this.setupTile();\n  }\n\n  getRotation() {\n    const currentDirection = randomNumber(4);\n    switch (currentDirection) {\n      case 0:\n        return { x: 1, y: 0 };\n      case 1:\n        return { x: 0, y: 1 };\n      case 2:\n        return { x: -1, y: 0 };\n      case 3:\n        return { x: 0, y: -1 };\n    }\n  }\n\n  /**\n   * Setting up the tile shape. This method calculate the correction needed to center the tile in the grid\n   */\n  setupTile() {\n    let minPosition = { ...this.tileShape.shapes[0].points[0] };\n    let maxPosition = { ...this.tileShape.shapes[0].points[0] };\n    for (let s of this.tileShape.shapes) {\n      for (let p of s.points) {\n        if (p.x < minPosition.x) {\n          minPosition.x = p.x;\n        }\n        if (p.y < minPosition.y) {\n          minPosition.y = p.y;\n        }\n        if (p.x > maxPosition.x) {\n          maxPosition.x = p.x;\n        }\n        if (p.y > maxPosition.y) {\n          maxPosition.y = p.y;\n        }\n      }\n    }\n\n    const tileFactor = {\n      x: (GRID_SIZE * this.size) / ((maxPosition.x - minPosition.x) * this.scaleShape),\n      y: (GRID_SIZE * this.size) / ((maxPosition.y - minPosition.y) * this.scaleShape)\n    };\n\n    this.positionCorrection = {\n      x: (GRID_SIZE * this.size) * 0.5,\n      y: (GRID_SIZE * this.size) * 0.5\n    };\n\n    // make size correction base on the grid size\n    this.tileShape.shapes = this.tileShape.shapes.map(s => ({\n      ...s,\n      points: s.points.map(p => ({\n        x: p.x * tileFactor.x,\n        y: p.y * tileFactor.y\n      }))\n    }));\n  }\n\n  /**\n   * Calculate the tile position correction\n   * @returns {{x: number, y: number}}\n   */\n  getPosition() {\n    return addVectors(super.getPosition(), this.positionCorrection);\n  }\n\n  currentShape() {\n    return this.tileShape;\n  }\n\n  animate() {\n    // toDo (gonzalezext)[19.04.24]: maybe we can animate the leafs\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { scale } from \"../utils/math\";\nimport { SCREEN_HEIGHT, SCREEN_WIDTH, GRID_SIZE } from \"../utils/variables\";\nimport Tile from \"./tile\";\nimport level1 from \"./levels/level.001.json\";\n\nconst ROW_TILE = 1; //     001\nconst ROW_TILE_FREE = 2; //    010\nconst ROW_TILE_TREE_V1 = 4; // 100\n\n\nexport default class Level extends BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param background {string}\n   */\n  constructor(\n    eventEmitter,\n    x = 0,\n    y = 0,\n    width = 0,\n    height = 0,\n    background = \"\"\n  ) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = background;\n\n    this.components = [];\n\n    this.loadLevel(level1.map);\n  }\n\n  loadLevel(level) {\n    const flags = new Array(level.length).fill(1).map(() => new Array(level[0].length).fill(true));\n    for (let row = 0; row < level.length; row++) {\n      for (let col = 0; col < level[row].length; col++) {\n        const tile = level[row][col];\n        if (flags[row][col] && (tile & ROW_TILE !== 0)) {\n\n          let size = 1;\n\n          // check if 2x2 tile fit\n          if (row + 1 < level.length && col + 1 < level[row].length &&\n            (level[row][col + 1] & ROW_TILE) &&\n            (level[row + 1][col] & ROW_TILE) &&\n            (level[row + 1][col + 1] & ROW_TILE)\n          ) {\n            flags[row][col] = false;\n            flags[row][col + 1] = false;\n            flags[row + 1][col] = false;\n            flags[row + 1][col + 1] = false;\n\n            size = 2;\n          }\n\n          const tile = new Tile(\n            this.eventEmitter,\n            col * GRID_SIZE,\n            row * GRID_SIZE,\n            size\n          );\n          this.components.push(tile);\n        }\n      }\n    }\n  }\n\n  render(context) {\n    this.cleanScreen(context);\n\n    this.paintGrid(context);\n\n    this.components.forEach((component) => component.render(context));\n  }\n\n  cleanScreen(context) {\n    if (this.backgroundColor) {\n      context.beginPath();\n      context.fillStyle = this.backgroundColor;\n      context.rect(0, 0, scale(this.width), scale(this.height));\n      context.fill();\n    } else {\n      context.clearRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\n    }\n  }\n\n  paintGrid(context) {\n    context.strokeStyle = \"#fff\";\n    context.lineWidth = 1;\n    for (let i = 0; i < SCREEN_WIDTH; i += GRID_SIZE) {\n      context.beginPath();\n      context.moveTo(i, 0);\n      context.lineTo(i, SCREEN_HEIGHT);\n      context.stroke();\n    }\n    for (let i = 0; i < SCREEN_HEIGHT; i += GRID_SIZE) {\n      context.beginPath();\n      context.moveTo(0, i);\n      context.lineTo(SCREEN_WIDTH, i);\n      context.stroke();\n    }\n  }\n}\n","import Scene from \"./shared/scene\";\nimport {\n  EVENT_CLICK,\n  EVENT_KEYDOWN,\n  EVENT_KEYUP,\n  EVENT_MOUSEUP,\n  SCREEN_HEIGHT,\n  SCREEN_WIDTH\n} from \"../utils/variables\";\nimport Player from \"../components/player\";\nimport Score from \"../components/score\";\nimport Modal from \"../components/modal\";\nimport Button from \"../components/button\";\nimport Data from \"../utils/data\";\nimport { isMobileMethod } from \"../utils/mobile-device\";\nimport GameLogic from \"./shared/game.logic\";\nimport Level from \"../components/level\";\nimport Plant from \"../components/plant\";\nimport Tile from \"../components/tile\";\n\nexport const isMobile = isMobileMethod.any();\n\nconst SCORE_MARGIN = 10;\n\nexport default class ScenePlay extends Scene {\n  /**\n   * @param navigator {Navigator}\n   * @param eventEmitter {Observable}\n   */\n  constructor(navigator, eventEmitter) {\n    super(navigator, eventEmitter);\n\n    this.buttonPause = new Button(\n      this.eventEmitter,\n      SCORE_MARGIN,\n      SCORE_MARGIN,\n      60,\n      30,\n      \"PAUSE\"\n    );\n    this.buttonPause.textSize = 20;\n    this.buttonPause.listenerEvent(EVENT_CLICK, () => {\n      if (this.currentGame.canPauseGame()) {\n        this.currentGame.pause();\n        this.showModal(Data.getInstance().getScore(), false);\n      }\n    });\n\n    this.listenerEvent(EVENT_KEYDOWN, this.keyDown.bind(this));\n    this.listenerEvent(EVENT_KEYUP, this.keyUp.bind(this));\n\n    this.initGame();\n  }\n\n  initGame() {\n    this.isModalShow = false;\n\n    // game logic\n    if (this.currentGame) {\n      this.currentGame.destroy();\n    }\n    this.currentGame = new GameLogic();\n\n    // player component\n    this.player = new Player(\n      this.eventEmitter,\n      SCREEN_WIDTH / 2,\n      SCREEN_HEIGHT / 2,\n      30,\n      35\n    );\n    this.currentGame.player.component = this.player;\n\n    // create level\n    this.level = new Level(\n      this.eventEmitter,\n      0,\n      0,\n      SCREEN_WIDTH,\n      SCREEN_HEIGHT,\n      \"#000\"\n    );\n\n    // score component\n    const score = new Score(\n      this.eventEmitter,\n      SCREEN_WIDTH - SCORE_MARGIN,\n      SCORE_MARGIN\n    );\n    this.currentGame.score = score;\n\n    // add components to the element array\n    this.elements = [this.player, this.buttonPause];\n    this.elements.push(score);\n\n    // elements of the game\n    this.playableElements = [this.player];\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    // execute game logic\n    this.currentGame.play();\n\n    // render background\n    this.cleanCanvas(context);\n\n    this.renderOrRemovePlayableElements(context);\n\n    // render scene elements\n    for (const element of this.elements) {\n      element.render(context);\n    }\n  }\n\n  keyDown(event) {\n    this.currentGame.directionKeys.addKey(event.key);\n  }\n\n  keyUp(event) {\n    this.currentGame.directionKeys.removeKey(event.key);\n  }\n\n  showModal(score, restartGame = true) {\n    if (!this.isModalShow) {\n      this.isModalShow = true;\n      const modalWidth = 300;\n      const modalHeight = 200;\n      const modal = new Modal(\n        this.eventEmitter,\n        SCREEN_WIDTH / 2 - modalWidth / 2,\n        SCREEN_HEIGHT / 2 - modalWidth / 2,\n        modalWidth,\n        modalHeight\n      );\n      Data.getInstance().saveScore(\n        Math.max(Data.getInstance().getScore(), score)\n      );\n      modal.score = score;\n      modal.buttonPlay.listenerEvent(EVENT_MOUSEUP, () => {\n        modal.buttonPlay.destroy.emit();\n        modal.buttonShareRecord.destroy.emit();\n        modal.buttonCredits.destroy.emit();\n        this.currentGame.unpause();\n        this.elements.pop();\n        this.isModalShow = false;\n        if (restartGame) {\n          this.initGame();\n        }\n      });\n      this.elements.push(modal);\n    }\n  }\n\n  renderOrRemovePlayableElements(context) {\n    const toRemove = new Set();\n    for (const element of this.playableElements) {\n      if (this.isElementVisible(element)) {\n        element.render(context);\n      } else {\n        toRemove.add(element.id);\n      }\n    }\n    this.playableElements = this.playableElements.filter(\n      (ele) => !toRemove.has(ele.id)\n    );\n  }\n\n  isElementVisible(element) {\n    return element.y - element.height * 2 < SCREEN_HEIGHT;\n  }\n\n  cleanCanvas(context) {\n    this.level.render(context);\n  }\n}\n","import {\n  EVENT_RESIZE,\n  SCENE_GAME,\n  SCREEN_RATIO,\n  SCREEN_WIDTH,\n} from \"./utils/variables\";\nimport ScenePlay from \"./scenes/play.scene\";\nimport Observable from \"./utils/observable\";\n\nexport default class Navigator {\n  /**\n   * @param scene {number}\n   * @param eventEmitter {Observable}\n   */\n  constructor(scene, eventEmitter) {\n    this.gameWidth = SCREEN_WIDTH;\n    this.gameHeght = SCREEN_WIDTH * SCREEN_RATIO;\n    this.sceneClasses = new Map();\n    this.sceneClasses.set(SCENE_GAME, ScenePlay);\n    this.scenesInstances = new Map();\n    /** @member {Scene} */\n    this.currentScene = null;\n    eventEmitter.on((data) => {\n      this.currentScene.eventEmitter.emit(data);\n      if (data.event === EVENT_RESIZE && data.dimension) {\n        this.gameWidth = data.dimension.w;\n        this.gameHeght = data.dimension.h;\n        this.updateGameDimensions();\n      }\n    });\n\n    // initial navigation\n    this.navigate(scene);\n  }\n\n  /**\n   * Navigate to a different scene\n   * @param scene {number}\n   */\n  navigate(scene) {\n    if (this.scenesInstances.has(scene)) {\n      this.currentScene = this.scenesInstances.get(scene);\n    } else if (this.sceneClasses.has(scene)) {\n      this.scenesInstances.set(\n        scene,\n        new (this.sceneClasses.get(scene))(this, new Observable()),\n      );\n      this.currentScene = this.scenesInstances.get(scene);\n    }\n    this.updateGameDimensions();\n  }\n\n  updateGameDimensions() {\n    if (this.currentScene) {\n      this.currentScene.width = this.gameWidth;\n      this.currentScene.height = this.gameHeght;\n    }\n  }\n}\n","import Navigator from \"./navigator\";\nimport Observable from \"./utils/observable\";\nimport { unscale } from \"./utils/math\";\nimport {\n  SCREEN_WIDTH,\n  SCREEN_RATIO,\n  SCENE_GAME,\n  STOP,\n  EVENT_CLICK,\n  EVENT_MOUSEDOWN,\n  EVENT_MOUSEUP,\n  EVENT_MOUSEOUT,\n  EVENT_MOUSELEAVE,\n  EVENT_MOUSEMOVE,\n  EVENT_TOUCHDOWN,\n  EVENT_TOUCHUP,\n  EVENT_TOUCHCANCEL,\n  EVENT_TOUCHMOVE,\n  EVENT_RESIZE,\n  RUNNING,\n  FPS,\n  EVENT_KEYDOWN,\n  EVENT_KEYPRESS,\n  EVENT_KEYUP,\n} from \"./utils/variables\";\n\nconst intervalPerSecond = 1000 / FPS;\n\nlet gameInstance = null;\n\nexport default class Game {\n  constructor() {\n    window.addEventListener(\"resize\", this.resizeScreen.bind(this));\n\n    /** @member {HTMLCanvasElement} */\n    this.canvas = document.getElementById(\"game\");\n\n    this.registerEvents();\n\n    /** @member {Observable} */\n    this.eventEmitter = new Observable();\n\n    /** @member {CanvasRenderingContext2D} */\n    this.context = this.canvas.getContext(\"2d\");\n\n    /** @member {Navigator} */\n    this.navigatorRoot = new Navigator(SCENE_GAME, this.eventEmitter);\n\n    this.loopStatus = STOP;\n    this.lastTime = 0;\n    this.width = this.canvas.width;\n    this.height = this.canvas.height;\n\n    this.resizeScreen();\n  }\n\n  registerEvents() {\n    // keyboard events\n    this.registerKeyboardEvent(\"keydown\", EVENT_KEYDOWN);\n    this.registerKeyboardEvent(\"keyup\", EVENT_KEYUP);\n    this.registerKeyboardEvent(\"keypress\", EVENT_KEYPRESS);\n\n    // mouse events\n    this.registerClickEvent(\"click\", EVENT_CLICK);\n    this.registerClickEvent(\"mousedown\", EVENT_MOUSEDOWN);\n    this.registerClickEvent(\"mouseup\", EVENT_MOUSEUP);\n    this.registerClickEvent(\"mouseout\", EVENT_MOUSEOUT);\n    this.registerClickEvent(\"mouseleave\", EVENT_MOUSELEAVE);\n    this.registerClickEvent(\"mousemove\", EVENT_MOUSEMOVE);\n\n    // touch events\n    this.registerTouchEvent(\"touchstart\", EVENT_TOUCHDOWN, false);\n    this.registerTouchEvent(\"touchend\", EVENT_TOUCHUP, false);\n    this.registerTouchEvent(\"touchcancel\", EVENT_TOUCHCANCEL, false);\n    this.registerTouchEvent(\"touchmove\", EVENT_TOUCHMOVE, false);\n  }\n\n  /**\n   * @param type {string}\n   * @param eventType {string}\n   * @param option {boolean}\n   */\n  registerClickEvent(type, eventType, option = undefined) {\n    this.canvas.addEventListener(\n      type,\n      (e) => this.clickEvent(e, eventType),\n      option,\n    );\n  }\n\n  /**\n   * @param type {string}\n   * @param eventType {string}\n   * @param option {boolean}\n   */\n  registerTouchEvent(type, eventType, option = undefined) {\n    this.canvas.addEventListener(\n      type,\n      (e) => this.touchEvent(e, eventType),\n      option,\n    );\n  }\n\n  /**\n   * @param type {string}\n   * @param eventType {string}\n   * @param option {boolean}\n   */\n  registerKeyboardEvent(type, eventType, option = undefined) {\n    document.addEventListener(\n      type,\n      (e) => this.keyboardEvent(e, eventType),\n      option,\n    );\n  }\n\n  resizeScreen() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    let calculatedWidth = Math.min(SCREEN_WIDTH, width);\n    let calculatedHeight = calculatedWidth * SCREEN_RATIO;\n\n    if (calculatedHeight > height) {\n      calculatedHeight = height;\n      calculatedWidth = height / SCREEN_RATIO;\n    }\n\n    this.canvas.width = calculatedWidth;\n    this.canvas.height = calculatedHeight;\n\n    window.currentWidth = calculatedWidth;\n    this.eventEmitter.emit({\n      event: EVENT_RESIZE,\n      dimension: { w: calculatedWidth, h: calculatedHeight },\n    });\n  }\n\n  /**\n   * @param event {TouchEvent}\n   * @param type {string}\n   */\n  touchEvent(event, type) {\n    this.emitPositionEvent(\n      {\n        x: event?.targetTouches[0]?.pageX,\n        y: event?.targetTouches[0]?.pageY,\n      },\n      type,\n    );\n  }\n\n  /**\n   * @param event {MouseEvent}\n   * @param type {string}\n   */\n  clickEvent(event, type) {\n    this.emitPositionEvent({ x: event?.clientX, y: event?.clientY }, type);\n  }\n\n  /**\n   * @param event {KeyboardEvent}\n   * @param type {string}\n   */\n  keyboardEvent(event, type) {\n    this.eventEmitter.emit({\n      event: type,\n      key: event.key,\n    });\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   * @param type {string}\n   */\n  emitPositionEvent(position, type) {\n    const rect = this.canvas.getBoundingClientRect();\n    this.eventEmitter.emit({\n      event: type,\n      position: {\n        x: unscale(position.x - rect.left),\n        y: unscale(position.y - rect.top),\n      },\n    });\n  }\n\n  /**\n   * Get game instance\n   * @returns {Game}\n   */\n  static getInstance() {\n    if (!gameInstance) {\n      gameInstance = new Game();\n    }\n    return gameInstance;\n  }\n\n  /**\n   * Initialize game\n   */\n  init() {\n    this.loopStatus = RUNNING;\n    requestAnimationFrame(this.loop.bind(this));\n  }\n\n  /**\n   * Application loop\n   * @param currentTime {number}\n   */\n  loop(currentTime) {\n    if (this.loopStatus === RUNNING) {\n      if (\n        this.loopStatus === RUNNING &&\n        intervalPerSecond <= currentTime - this.lastTime\n      ) {\n        this.lastTime = currentTime;\n\n        this.navigatorRoot.currentScene.render(this.context);\n      }\n\n      requestAnimationFrame(this.loop.bind(this));\n    }\n    // the else here will end the loop\n  }\n}\n","import Game from \"./game/game\";\n\nGame.getInstance().init();\n"],"names":["SCREEN_RATIO","SCREEN_WIDTH","SCREEN_HEIGHT","GRID_SIZE","EVENT_CLICK","EVENT_MOUSEOUT","EVENT_KEYDOWN","EVENT_KEYUP","Observable","constructor","this","subscriptions","open","emit","data","i","length","callFunction","func","pipe","functions","lastSteam","stream","on","unsub","filter","f","push","BaseObject","eventEmitter","x","y","width","height","destroy","lastMousePosition","isMouseHover","id","Math","random","value","_eventEmitter","stopper","streamCancel","cancelFunction","observable","takeUntil","render","context","listenerEvent","event","callback","validateMouseEventPropagation","position","validateKeyboardEventPropagation","isPositionInside","Scene","navigator","super","backgroundColor","elements","cleanCanvas","element","rect","fillStyle","fill","validateEventPropagation","validation","e","addVectors","v1","v2","getPointByVectorRotation","vector","pivot","phi","result","cos","sin","rotateVector","scale","window","currentWidth","unscale","detectCollision","shape1","shape2","axis","extractAxis","axi","p1","shapeProjection","p2","min","max","normalizeVector","v","sqrt","shape","projection","p","u","BaseShape","rotation","directionVector","scaleShape","brakedShape","updateCoordinates","shapes","getProjection","points","beginPath","moveTo","lineTo","closePath","background","Boolean","stroke","strokeStyle","lineWidth","strokeWidth","animate","moveBrakedPiece","brakeShapes","shipShape","brakeShape","cp","shapeCenter","factor","pow","coverBox","newShapes","count","ceil","pos","Array","map","reduceOpacity","color","extract","alpha","getOpacity","toString","substr","parseInt","atan2","PI","currentShape","getPosition","projectedShape","Player","updateDirectionVector","Score","score","textSize","textColor","lastTime","font","metrics","measureText","textWidth","textHeight","actualBoundingBoxAscent","actualBoundingBoxDescent","padding","fillText","Button","text","textColorHover","document","body","style","cursor","Modal","text2Size","buttonMargin","createCredits","createPlayButton","createShareButton","w","h","buttonPlay","buttonCredits","focus","buttonShareRecord","url","renderScore","metrics2","text2Width","text2Height","SCORE_KEY","Data","getInstance","saveScore","localStorage","setItem","getScore","getItem","isMobileMethod","Android","userAgent","match","BlackBerry","iOS","Opera","Windows","any","DirectionKeys","presedKeys","clear","addKey","key","isDirectionKey","includes","removeKey","k","hasPressedKeys","directionVec","direction","dir","directionMap","n","consumeNextDirection","acDir1","acDir2","currentDir","nextDir","GameLogic","time","directionKeys","player","expectedRotation","velocity","minVelocity","acceleration","deceleration","status","component","undefined","enemies","objects","configs","forEach","enemy","obj","play","movePlayer","animateComponents","rot","t","scalar","canPauseGame","pause","unpause","updateSpaces","updateScore","checkCollision","checkCollisionInProjections","shapes1","shapes2","s1","s2","Tile","size","getRotation","tileShape","positionCorrection","setupTile","limit","start","floor","randomNumber","minPosition","maxPosition","s","tileFactor","Level","components","loadLevel","level","flags","row","col","tile","cleanScreen","paintGrid","clearRect","ScenePlay","buttonPause","currentGame","showModal","keyDown","bind","keyUp","initGame","isModalShow","playableElements","renderOrRemovePlayableElements","restartGame","modalWidth","modalHeight","modal","pop","toRemove","Set","isElementVisible","add","ele","has","Navigator","scene","gameWidth","gameHeght","sceneClasses","Map","set","scenesInstances","currentScene","dimension","updateGameDimensions","navigate","get","intervalPerSecond","gameInstance","Game","addEventListener","resizeScreen","canvas","getElementById","registerEvents","getContext","navigatorRoot","loopStatus","registerKeyboardEvent","registerClickEvent","registerTouchEvent","type","eventType","option","clickEvent","touchEvent","keyboardEvent","innerWidth","innerHeight","calculatedWidth","calculatedHeight","emitPositionEvent","targetTouches","pageX","pageY","clientX","clientY","getBoundingClientRect","left","top","init","requestAnimationFrame","loop","currentTime"],"sourceRoot":""}