{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/global","webpack:///./game/utils/variables.js","webpack:///./game/utils/observable.js","webpack:///./game/components/shared/base-object.js","webpack:///./game/scenes/shared/scene.js","webpack:///./game/utils/math.js","webpack:///./game/components/shared/base-shape.js","webpack:///./game/components/bubble.js","webpack:///./game/components/player.js","webpack:///./game/components/score.js","webpack:///./game/components/button.js","webpack:///./game/utils/data.js","webpack:///./game/components/settings.js","webpack:///./game/utils/mobile-device.js","webpack:///./game/scenes/shared/direction-keys.js","webpack:///./game/components/tile.js","webpack:///./game/components/hole.js","webpack:///./game/components/camera.js","webpack:///./game/components/plant.js","webpack:///./game/components/level.js","webpack:///./game/scenes/shared/game.logic.js","webpack:///./game/components/help.js","webpack:///./game/scenes/play.scene.js","webpack:///./game/navigator.js","webpack:///./game/game.js","webpack:///./main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// game dimensions\nexport const SCREEN_RATIO = 3 / 4;\nexport const SCREEN_WIDTH = 1024;\nexport const SCREEN_HEIGHT = SCREEN_WIDTH * SCREEN_RATIO;\nexport const GRID_SIZE = (SCREEN_WIDTH - 1) / 12;\n\n// game status\nexport const RUNNING = 1;\nexport const PAUSE = 2;\nexport const STOP = 3;\n\n// game events\nexport const EVENT_CLICK = \"0\";\nexport const EVENT_MOUSEDOWN = \"1\";\nexport const EVENT_MOUSEUP = \"2\";\nexport const EVENT_MOUSEMOVE = \"3\";\nexport const EVENT_MOUSEOUT = \"8\";\nexport const EVENT_MOUSELEAVE = \"9\";\nexport const EVENT_TOUCHDOWN = \"4\";\nexport const EVENT_TOUCHUP = \"5\";\nexport const EVENT_TOUCHMOVE = \"6\";\nexport const EVENT_TOUCHCANCEL = \"7\";\nexport const EVENT_RESIZE = \"8\";\nexport const EVENT_KEYPRESS = \"9\";\nexport const EVENT_KEYDOWN = \"10\";\nexport const EVENT_KEYUP = \"11\";\n\n// scene values\nexport const SCENE_GAME = 1;\n\nexport const FPS = 30;\n","export default class Observable {\n  constructor() {\n    /** @member {function[]} */\n    this.subscriptions = [];\n    this.open = true;\n  }\n\n  /**\n   * @param data {Object}\n   */\n  emit(data = {}) {\n    for (let i = 0; i < this.subscriptions.length; i++) {\n      this.callFunction(this.subscriptions[i], data);\n    }\n  }\n\n  async callFunction(func, data) {\n    func(data);\n  }\n\n  /**\n   * @param functions {function}\n   * @return {Observable}\n   */\n  pipe(...functions) {\n    let lastSteam = this;\n    for (const func of functions) {\n      const stream = new Observable();\n      lastSteam.on((data) => func(data, stream));\n      lastSteam = stream;\n    }\n    return lastSteam;\n  }\n\n  /**\n   * @param func {function}\n   */\n  unsub(func) {\n    this.subscriptions = this.subscriptions.filter((f) => f !== func);\n  }\n\n  /**\n   * @param func {function}\n   */\n  on(func) {\n    this.subscriptions.push(func);\n  }\n}\n\n/**\n * Filter the value of an Observable\n * @param stopper {Observable}\n */\nexport function takeUntil(stopper) {\n  let streamCancel = false;\n  const cancelFunction = () => {\n    streamCancel = true;\n    stopper.unsub(cancelFunction);\n  };\n  stopper.on(cancelFunction);\n  return (data, /** @param {Observable} */ observable) => {\n    if (streamCancel) {\n      observable.subscriptions = [];\n    }\n    observable.emit(data);\n  };\n}\n\n/**\n * Filter the value of an Observable\n * @param func {function}\n */\nexport function filterObservable(func) {\n  return (data, /** @param {Observable} */ observable) => {\n    if (func(data)) {\n      observable.emit(data);\n    }\n  };\n}\n\n/**\n * The value of the observable can be mapped and returned with transformations\n * @param func {function}\n */\nexport function mapObservable(func) {\n  return (data, /** @param {Observable} */ observable) => {\n    observable.emit(func(data));\n  };\n}\n","import Observable, {\n  filterObservable,\n  takeUntil\n} from \"../../utils/observable\";\nimport {\n  EVENT_KEYDOWN,\n  EVENT_KEYPRESS,\n  EVENT_KEYUP,\n  EVENT_MOUSELEAVE,\n  EVENT_MOUSEOUT,\n  EVENT_TOUCHCANCEL,\n  EVENT_TOUCHUP\n} from \"../../utils/variables\";\n\nexport default class BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    this.destroy = new Observable();\n    /** @member {Observable} */\n    this.eventEmitter = eventEmitter;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.lastMousePosition = null;\n    this.isMouseHover = false;\n\n    if (global['idCount'] === undefined) {\n      global['idCount'] = 0;\n    }\n    this.id = global['idCount']++;\n  }\n\n  set eventEmitter(value) {\n    this._eventEmitter = value ? value.pipe(takeUntil(this.destroy)) : value;\n  }\n\n  get eventEmitter() {\n    return this._eventEmitter;\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n  }\n\n  /**\n   * Event listener\n   * @param event {string}\n   * @param callback {function}\n   */\n  listenerEvent(event, callback) {\n    this.eventEmitter\n      .pipe(filterObservable((data) => data.event === event))\n      .on((data) => {\n        if (\n          (data &&\n            this.validateMouseEventPropagation(data.position, data.event)) ||\n          this.validateKeyboardEventPropagation(data.event)\n        ) {\n          callback(data);\n        }\n      });\n  }\n\n  validateKeyboardEventPropagation(event) {\n    return (\n      event === EVENT_KEYDOWN ||\n      event === EVENT_KEYUP ||\n      event === EVENT_KEYPRESS\n    );\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   * @param event {string}\n   * @return {boolean}\n   */\n  validateMouseEventPropagation(position, event) {\n    if (\n      event === EVENT_TOUCHUP ||\n      event === EVENT_MOUSEOUT ||\n      event === EVENT_TOUCHCANCEL ||\n      event === EVENT_MOUSELEAVE\n    ) {\n      return true;\n    }\n    if (\n      this.isPositionInside(this.lastMousePosition) &&\n      !this.isPositionInside(position)\n    ) {\n      this.eventEmitter.emit({ event: EVENT_MOUSEOUT });\n    }\n    this.lastMousePosition = position;\n    return (this.isMouseHover = this.isPositionInside(position));\n  }\n\n  isPositionInside(position) {\n    return (\n      position &&\n      position.x >= this.x &&\n      position.x <= this.x + this.width &&\n      position.y >= this.y &&\n      position.y <= this.y + this.height\n    );\n  }\n}\n","import BaseObject from \"../../components/shared/base-object\";\n\nexport default class Scene extends BaseObject {\n  /**\n   * @param navigator {Navigator}\n   * @param eventEmitter {Observable}\n   */\n  constructor(navigator, eventEmitter) {\n    super(eventEmitter);\n    this.navigator = navigator;\n    this.backgroundColor = \"#f00\";\n    /** @member {BaseObject[]} */\n    this.elements = [];\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    this.cleanCanvas(context);\n    // render scene elements\n    for (const element of this.elements) {\n      element.render(context);\n    }\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  cleanCanvas(context) {\n    context.rect(0, 0, this.width, this.height);\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   * @param event {string}\n   * @return {boolean}\n   */\n  validateEventPropagation(position, event) {\n    const validation = super.validateEventPropagation(position, event);\n    if (validation) {\n      for (const e of this.elements) {\n        if (e.validateEventPropagation(position, event)) {\n          return false;\n        }\n      }\n    }\n    return validation;\n  }\n}\n","import { SCREEN_WIDTH } from \"./variables\";\n\n/**\n * Vector to angle conversion\n * @param vector {{x: number, y: number}}\n * @returns {number}\n */\nexport function vectorToAngle(vector) {\n  return Math.atan2(vector.y, vector.x);\n}\n\n/**\n * Multiply a vector by a scalar\n * @param vector {{x: number, y: number}}\n * @param scalar {number}\n * @returns {{x: number, y: number}}\n */\nexport function multiplyVector(vector, scalar) {\n  return { x: vector.x * scalar, y: vector.y * scalar };\n}\n\n/**\n * Add two vectors\n * @param v1 {{x: number, y: number}}\n * @param v2 {{x: number, y: number}}\n * @returns {{x: number, y: number}}\n */\nexport function addVectors(v1, v2) {\n  return { x: v1.x + v2.x, y: v1.y + v2.y };\n}\n\n/**\n * @param maxValue {number}\n * @param currentValue {number}\n */\nexport function linearFunction(maxValue, currentValue) {\n  // toDo (gonzalezext)[20.04.24]: maybe it can be removed\n  return Math.min(currentValue / maxValue, 1);\n}\n\n/**\n * @param maxValue {number}\n * @param currentValue {number}\n */\nexport function logFunction(maxValue, currentValue) {\n  // toDo (gonzalezext)[20.04.24]: maybe it can be removed\n  const x = (9 * currentValue) / maxValue + 1;\n  return Math.min(Math.log10(x), 1);\n}\n\n/**\n * @param vector {{x: number, y: number}}\n * @param pivot {{x: number, y: number}}\n * @param phi {number}\n * @return {{x: number, y: number}}\n */\nexport function getPointByVectorRotation(vector, pivot, phi) {\n  const result = rotateVector(vector, phi);\n  return { x: pivot.x + result.x, y: pivot.y - result.y };\n}\n\n/**\n * @param vector {{x: number, y: number}}\n * @param phi {number}\n * @return {{x: number, y: number}}\n */\nexport function rotateVector(vector, phi) {\n  return {\n    x: vector.x * Math.cos(phi) - vector.y * Math.sin(phi),\n    y: vector.x * Math.sin(phi) + vector.y * Math.cos(phi)\n  };\n}\n\nexport function getVector(p1, p2) {\n  return { x: p2.x - p1.x, y: p2.y - p1.y };\n}\n\nexport function distanceNoSqrt(p1, p2) {\n  return square(p2.x - p1.x) + square(p2.y - p1.y);\n}\n\nexport const square = (x) => x * x;\n\nexport function distance(p1, p2) {\n  // toDo guille 31.08.21: maybe it can be improved (check it)\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\n/**\n * @param value {number}\n * @return {number}\n */\nexport function scale(value) {\n  return (value * window.currentWidth) / SCREEN_WIDTH;\n}\n\nexport function unscale(value) {\n  return (value * SCREEN_WIDTH) / window.currentWidth;\n}\n\n/**\n * @param limit {number}\n * @param start {number}\n * @returns {number}\n */\nexport function randomNumber(limit, start = 0) {\n  return Math.floor(Math.random() * limit) + start;\n}\n\n/**\n * @param shape1 {{x: number, y: number}[]}\n * @param shape2 {{x: number, y: number}[]}\n * @return {boolean}\n */\nexport function detectCollision(shape1, shape2) {\n  if (shape1.length < 3 || shape2.length < 3) {\n    return false;\n  }\n  const axis = [...extractAxis(shape1), ...extractAxis(shape2)];\n\n  for (const axi of axis) {\n    const p1 = shapeProjection(shape1, axi);\n    const p2 = shapeProjection(shape2, axi);\n    if (\n      !(\n        (p1.min > p2.min && p1.min < p2.max) ||\n        (p1.max > p2.min && p1.max < p2.max) ||\n        (p2.min > p1.min && p2.min < p1.max) ||\n        (p2.max > p1.min && p2.max < p1.max) ||\n        (p1.min === p2.min && p1.max === p2.max)\n      )\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Normalize a vector\n * @param v {{x: number, y: number}}\n * @returns {{x: number, y: number}}\n */\nexport function normalizeVector(v) {\n  if (v.x === 0 && v.y === 0) {\n    return { x: 0, y: 0 };\n  }\n  const length = Math.sqrt(v.x * v.x + v.y * v.y);\n  return { x: v.x / length, y: v.y / length };\n}\n\n/**\n * Linear interpolation between two vectors\n * @param v1 {{x: number, y: number}}\n * @param v2 {{x: number, y: number}}\n * @param t {number}\n * @returns {{x: number, y: number}}\n */\nexport function lerpVector(v1, v2, t) {\n  return {\n    x: v1.x + (v2.x - v1.x) * t,\n    y: v1.y + (v2.y - v1.y) * t\n  };\n}\n\n/**\n * @param shape {{x: number, y: number}[]}\n * @return {{x: number, y: number}[]}\n */\nfunction extractAxis(shape) {\n  if (shape.length <= 1) {\n    return [];\n  }\n  const axis = [];\n  for (let i = 1; i < shape.length; i++) {\n    axis.push({\n      x: shape[i].x - shape[i - 1].x,\n      y: shape[i - 1].y - shape[i].y\n    });\n  }\n  axis.push({\n    x: shape[0].x - shape[shape.length - 1].x,\n    y: shape[shape.length - 1].y - shape[0].y\n  });\n  return axis;\n}\n\n/**\n * @param shape {{x: number, y: number}[]}\n * @param v {{x: number, y: number}}\n * @return {{max: number, min: number}}\n */\nfunction shapeProjection(shape, v) {\n  let min = projection(v, shape[0]);\n  let max = min;\n  for (let i = 1; i < shape.length; i++) {\n    const p = projection(v, shape[i]);\n    min = Math.min(min, p);\n    max = Math.max(max, p);\n  }\n  return { min, max };\n}\n\n/**\n * @param v {{x: number, y: number}}\n * @param u {{x: number, y: number}}\n * @return {number}\n */\nfunction projection(v, u) {\n  return (u.x * v.x + u.y * v.y) / (v.x * v.x + v.y * v.y);\n}\n","import BaseObject from \"./base-object\";\nimport { getPointByVectorRotation, scale, vectorToAngle } from \"../../utils/math\";\n\nexport default class BaseShape extends BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = \"#00f\";\n    this.rotation = 0;\n    this.directionVector = { x: 1, y: 0 };\n    this.scaleShape = 3.3;\n    this.brakedShape = null;\n  }\n\n  updateCoordinates(x, y) {\n    this.x = x || this.x;\n    this.y = y || this.y;\n  }\n\n  render(context) {\n    // ship painted\n    const shapes = this.getProjection();\n\n    for (const shape of shapes) {\n      const points = shape.points;\n      if (points.length === 0) {\n        continue;\n      }\n      context.beginPath();\n      context.moveTo(scale(points[0].x), scale(points[0].y));\n      for (let i = 1; i < points.length; i++) {\n        context.lineTo(scale(points[i].x), scale(points[i].y));\n      }\n      context.closePath();\n      context.fillStyle = shape.background;\n      if (Boolean(shape.stroke)) {\n        context.stroke();\n        context.strokeStyle = shape.stroke;\n        context.lineWidth = shape.strokeWidth * 5;\n      }\n      context.fill();\n    }\n  }\n\n  animate() {\n    this.moveBrakedPiece();\n  }\n\n  brakeShapes() {\n    const shapes = this.currentShape().shapes;\n\n    this.brakedShape = { shapes: [] };\n\n    // brake in triangles\n    for (const shape of shapes) {\n      this.brakedShape = {\n        shapes: [...this.brakedShape.shapes, ...this.brakeShape(shape)]\n      };\n    }\n\n    // calculate direction vector\n    for (const shape of this.brakedShape.shapes) {\n      const cp = this.shapeCenter(shape.points);\n      const d = Math.random() + 0.5;\n      const factor = d / Math.sqrt(Math.pow(cp.x, 2) + Math.pow(cp.y, 2));\n      shape.vector = { x: cp.x * factor, y: cp.y * factor };\n    }\n  }\n\n  /**\n   * @param shape {{points: {x: number, y: number}[], background: string}}\n   * @return {{x: number, y: number}[]}\n   */\n  brakeShape(shape) {\n    if (shape.points.length === 0) {\n      return shape.points;\n    }\n    const { min, max } = this.coverBox(shape.points);\n\n    const fixedSize = 2;\n    const size = 2.5;\n    const newShapes = [];\n    let count = Math.ceil(((max.x - min.x) * (max.y - min.y)) / fixedSize);\n    count = Math.min(count, 150);\n\n    for (let i = 0; i < count; i++) {\n      const pos = {\n        x: (max.x - min.x) * Math.random() + min.x,\n        y: (max.y - min.y) * Math.random() + min.y\n      };\n      newShapes.push({\n        points: new Array(3).fill(null).map(() => ({\n          x: pos.x + size * Math.random(),\n          y: pos.y + size * Math.random()\n        })),\n        background: shape.background\n      });\n    }\n\n    return newShapes;\n  }\n\n  /**\n   * @param points {{x: number, y: number}[]}\n   */\n  shapeCenter(points) {\n    const { min, max } = this.coverBox(points);\n    return { x: (max.x + min.x) / 2, y: (max.y + min.y) / 2 };\n  }\n\n  coverBox(points) {\n    const min = { x: points[0].x, y: points[0].y };\n    const max = { ...min };\n    for (let i = 1; i < points.length; i++) {\n      min.x = Math.min(min.x, points[i].x);\n      min.y = Math.min(min.y, points[i].y);\n      max.x = Math.max(max.x, points[i].x);\n      max.y = Math.max(max.y, points[i].y);\n    }\n    return { min, max };\n  }\n\n  moveBrakedPiece() {\n    if (this.brakedShape) {\n      for (const shape of this.brakedShape.shapes) {\n        shape.points = shape.points.map((p) => ({\n          x: p.x + shape.vector.x,\n          y: p.y + shape.vector.y\n        }));\n        shape.background = this.reduceOpacity(shape.background, 30);\n      }\n    }\n  }\n\n  /**\n   * @param color {string}\n   * @param extract {number}\n   * @returns {string}\n   */\n  reduceOpacity(color, extract) {\n    // toDo (gonzalezext)[21.04.24]: remove this method\n    let alpha = this.getOpacity(color);\n    alpha = Math.min(255, Math.max(alpha - extract, 0));\n    alpha = alpha.toString(16);\n    return `#${color.substr(1, 6)}${(alpha.length < 2 ? \"0\" : \"\") + alpha}`;\n  }\n\n  getColorWithOpacity(color, alphaFactor) {\n    let alpha = Math.min(255, Math.max(Math.floor(255 * alphaFactor), 0));\n    alpha = alpha.toString(16);\n    return `#${color.substr(1, 6)}${(alpha.length < 2 ? \"0\" : \"\") + alpha}`;\n  }\n\n  /**\n   * @param color {string}\n   * @return {number}\n   */\n  getOpacity(color) {\n    return color.length > 7 ? parseInt(color.substr(7, 2), 16) : 255;\n  }\n\n  /**\n   * @param shapeId {string}\n   * @return {{points: {x: number, y: number}[], background: string, stroke: string, strokeWidth: number, smoke: boolean}[]}\n   */\n  getProjection(shapeId = undefined) {\n    const rotation = vectorToAngle(this.directionVector) + Math.PI / 2;\n\n    const shapes = this.currentShape().shapes;\n    const pivot = this.getPosition();\n\n    const projectedShape = [];\n\n    for (const shape of shapes) {\n      if (shapeId && shape.id !== shapeId) {\n        continue;\n      }\n\n      const points = shape.points.map((p) => ({\n        x: p.x * this.scaleShape,\n        y: p.y * this.scaleShape\n      }));\n      for (let i = 0; i < points.length; i++) {\n        points[i] = getPointByVectorRotation(points[i], pivot, rotation);\n      }\n      projectedShape.push({ ...shape, points });\n    }\n    return projectedShape;\n  }\n\n  /**\n   * @returns {{x: number, y: number}}\n   */\n  getPosition() {\n    return { x: this.x, y: this.y };\n  }\n\n  /**\n   * @returns {{shapes: {background: string, id: string, points: {x: number, y: number}[]}[]}}\n   */\n  currentShape() {\n    return {\n      shapes: []\n    };\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport { randomNumber } from \"../utils/math\";\nimport { SCREEN_HEIGHT, SCREEN_WIDTH } from \"../utils/variables\";\n\nexport const MAX_LIFE_TIME = 20;\n\nexport function newBubble(eventEmitter, x = undefined, y = undefined, w = undefined, h = undefined) {\n  x = x ? x : randomNumber(SCREEN_WIDTH);\n  y = y ? y : randomNumber(SCREEN_HEIGHT);\n  const width = w ? w : randomNumber(40, 10);\n  const height = h ? h : randomNumber(40, 10);\n  return new Bubble(eventEmitter, x, y, width, height);\n}\n\nexport default class Bubble extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width\n   * @param height\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    super(eventEmitter, x, y, width, height);\n\n    this.scaleShape = 0;\n    this.lifeTime = 0;\n  }\n\n  render(context) {\n    this.calculateScale();\n    this.lifeTime++;\n\n    context.beginPath();\n    context.fillStyle = this.getColorWithOpacity(\"#6c8d8eff\", this.showAndHideFunction(this.getTimeFactor()));\n    this.scaleShape = this.growBubbleFunction(this.getTimeFactor());\n    const w = this.width * this.scaleShape;\n    const h = this.height * this.scaleShape;\n    context.ellipse(this.x, this.y, w, h, 0, 0, Math.PI * 2);\n    context.fill();\n  }\n\n  calculateScale() {\n    this.scaleShape = Math.sin(this.y / 10);\n  }\n\n  getTimeFactor() {\n    return Math.min(this.lifeTime / MAX_LIFE_TIME, 1);\n  }\n\n  showAndHideFunction(time) {\n    return Math.sin(time * Math.PI) / 4;\n  }\n\n  growBubbleFunction(time) {\n    return Math.log(time + 1) * 1.4426950408889634;\n  }\n\n  bubbleDead() {\n    return this.lifeTime > MAX_LIFE_TIME;\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport shape from \"../shapes/character.json\";\nimport { MAX_LIFE_TIME, newBubble } from \"./bubble\";\n\n// shape.shapes = shape.shapes.filter((shape) => shape.id.startsWith(\"hand\") || shape.id.startsWith(\"foot\"));\n\nexport const ANIMATE_WALK = 1;\n\nexport default class Player extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param gridSize {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, gridSize) {\n    super(eventEmitter, x, y, gridSize, gridSize);\n    /** @member {number} */\n    this.rotation = Math.PI / 2;\n    this.directionVector = { x: 0, y: 1 };\n\n    this.calculateScale();\n\n    this.shape = { ...shape };\n\n    this.time = new Date().getTime();\n\n    this.animation = 0;\n    this.animationIsOn = false;\n\n    this.bubblesIntervalToShow = 3;\n    this.bubblesCount = 0;\n    this.bubbles = [];\n\n    this.updateCoordinates();\n  }\n\n  calculateScale() {\n    const scaleConst = 0.012578125;\n    this.scaleShape = this.width * scaleConst;\n  }\n\n  render(context) {\n    //clean bubbles\n    this.bubbles = this.bubbles.filter((bubble) => !bubble.bubbleDead());\n\n    // render bubbles\n    this.bubbles.forEach((bubble) => bubble.render(context));\n\n    super.render(context);\n  }\n\n  /**\n   * Update the coordinates of the player\n   * @param x {number}\n   * @param y {number}\n   */\n  updateCoordinates({ x, y } = {}) {\n    this.x = x || this.x;\n    this.y = y || this.y;\n  }\n\n  /**\n   * Update the direction vector of the player\n   * @param v\n   */\n  updateDirectionVector(v) {\n    this.directionVector = v;\n  }\n\n  animate() {\n    super.animate();\n\n    if ((this.animation & ANIMATE_WALK) !== 0) {\n      if (!this.animationIsOn) {\n        this.time = new Date().getTime();\n      }\n      this.animationIsOn = true;\n      this.animateWalk();\n    } else if (this.animationIsOn) {\n      this.animationIsOn = false;\n\n      this.shape = { ...shape };\n    }\n  }\n\n  animateWalk() {\n    const maxMovement = -20;\n    const footMovement = this.stepAnimationFunction() * maxMovement;\n    const handMovement = this.handAnimationFunction();\n\n    let minPoint = { x: 1000, y: 1000 };\n    let maxPoint = { x: -1000, y: -1000 };\n    // toDo (gonzalezext)[23.04.24]: this can be calculated at the begining\n    this.shape.shapes.forEach((shape) => shape.points.forEach((point) => {\n      minPoint.y = Math.min(minPoint.y, point.y);\n      minPoint.x = Math.min(minPoint.x, point.x);\n      maxPoint.y = Math.max(maxPoint.y, point.y);\n      maxPoint.x = Math.max(maxPoint.x, point.x);\n    }));\n    const middleHandPivot = -2;\n\n    // toDo (gonzalezext)[23.04.24]: this can be optimized by using a map\n    this.shape.shapes = shape.shapes.map((shape) => {\n      // foot animation\n      if (shape.id.startsWith(\"foot\")) {\n        const footMov = shape.id.endsWith(\"-l\") ? footMovement : -footMovement;\n        return {\n          ...shape,\n          points: shape.points.map((point) => {\n            return { ...point, y: point.y + footMov };\n          })\n        };\n      }\n      // hand animation\n      if (shape.id.startsWith(\"hand\")) {\n        const dir = shape.id.endsWith(\"-l\") ? 1 : -1;\n        return {\n          ...shape,\n          points: shape.points.map((point) => {\n            return {\n              ...point,\n              y: (point.y - middleHandPivot) * handMovement * dir + middleHandPivot\n            };\n          })\n        };\n      }\n      return { ...shape };\n    });\n\n    // create walk bubbles\n    if (this.bubblesCount === 0) {\n      this.newBubble();\n    }\n    this.bubblesCount++;\n    if (this.bubblesCount >= this.bubblesIntervalToShow) {\n      this.bubblesCount = 0;\n    }\n  }\n\n  newBubble() {\n    const bubble = newBubble(this.eventEmitter, this.x, this.y, 50, 50);\n    bubble.lifeTime = MAX_LIFE_TIME / 4;\n    this.bubbles.push(bubble);\n  }\n\n  stepAnimationFunction() {\n    const time = (new Date().getTime() - this.time) / 500;\n    return Math.sin(time * Math.PI);\n  }\n\n  handAnimationFunction() {\n    const time = (new Date().getTime() - this.time) / 500;\n    return Math.cos(time * Math.PI);\n  }\n\n  currentShape() {\n    return this.brakedShape || this.shape;\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { scale } from \"../utils/math\";\n\nexport default class Score extends BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number} corner coordinates\n   * @param y {number} corner coordinates\n   * @param text {string}\n   */\n  constructor(eventEmitter, x, y, text) {\n    super(eventEmitter, x, y);\n    this.score = 0;\n    this.textSize = 20;\n    this.backgroundColor = \"#000\";\n    this.textColor = \"#fff\";\n    this.text = text;\n\n    this.lastTime = 0;\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    context.font = `${scale(this.textSize)}px Arial`;\n    const text = `${this.text} ${this.score}`;\n    const metrics = context.measureText(text);\n    const textWidth = metrics.width;\n    const textHeight =\n      metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n    const padding = 5;\n\n    context.beginPath();\n    context.rect(\n      scale(this.x - textWidth - padding * 2),\n      scale(this.y),\n      scale(textWidth + padding * 2),\n      scale(textHeight + padding * 2)\n    );\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n\n    context.beginPath();\n    context.font = `${scale(this.textSize)}px Arial`;\n    context.fillStyle = this.textColor;\n    context.fillText(\n      text,\n      scale(this.x - textWidth - padding),\n      scale(this.y + textHeight + padding)\n    );\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { scale, unscale } from \"../utils/math\";\nimport { EVENT_MOUSEMOVE, EVENT_MOUSEOUT } from \"../utils/variables\";\n\nexport default class Button extends BaseObject {\n  /**\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param text {string}\n   * @param eventEmitter {Observable}\n   */\n  constructor(eventEmitter, x, y, width, height, text) {\n    super(eventEmitter, x, y, width, height);\n    this.text = text;\n    this.textSize = 10;\n    this.backgroundColor = \"#000\";\n    this.textColor = \"#fff\";\n    this.textColorHover = \"#9a9a9a\";\n\n    this.listenerEvent(EVENT_MOUSEMOVE, (data) => {\n      if (this.isPositionInside(data.position)) {\n        document.body.style.cursor = \"pointer\";\n      }\n    });\n    this.listenerEvent(EVENT_MOUSEOUT, (data) => {\n      document.body.style.cursor = \"default\";\n    });\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    context.beginPath();\n    context.rect(\n      scale(this.x),\n      scale(this.y),\n      scale(this.width),\n      scale(this.height),\n    );\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n\n    context.beginPath();\n    context.font = `${scale(this.textSize)}px Arial`;\n    const metrics = context.measureText(this.text);\n    const textWidth = unscale(metrics.width);\n    const textHeight = unscale(\n      metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent,\n    );\n    context.fillStyle = this.isMouseHover\n      ? this.textColorHover\n      : this.textColor;\n    // context.text;\n    context.fillText(\n      this.text,\n      scale(this.x + this.width / 2 - textWidth / 2),\n      scale(this.y + this.height / 2 + textHeight / 2),\n    );\n  }\n}\n","export const APPLICATION_PREFIX = \"fearwater\";\nexport const LAST_LEVEL_KEY = `${APPLICATION_PREFIX}_game_last_level`;\nexport const CURRENT_DEATHS_KEY = `${APPLICATION_PREFIX}_game_current_deaths`;\nexport const FIRST_TIME_KEY = `${APPLICATION_PREFIX}_game_first_time`;\nexport const BEST_DEATHS_KEY = `${APPLICATION_PREFIX}_game_best_deaths`;\n\n/** @type Data */\nlet data = null;\n\nexport default class Data {\n  static getInstance() {\n    if (!data) {\n      data = new Data();\n    }\n    return data;\n  }\n\n  /**\n   * @param deaths {number}\n   */\n  saveBestDeaths(deaths) {\n    const bestDeaths = +(this.loadBestDeaths() || 999999);\n    if (deaths < bestDeaths) {\n      this.saveData(BEST_DEATHS_KEY, deaths);\n    }\n  }\n\n  /**\n   * @returns {string|undefined}\n   */\n  loadBestDeaths() {\n    return this.getData(BEST_DEATHS_KEY);\n  }\n\n  isFirstTime() {\n    const firstTime = !this.getData(FIRST_TIME_KEY);\n    this.saveData(FIRST_TIME_KEY, \"false\");\n    return firstTime;\n  }\n\n  /**\n   * @param deaths {number}\n   */\n  saveDeaths(deaths) {\n    this.saveData(CURRENT_DEATHS_KEY, deaths);\n  }\n\n  /**\n   * @returns {number}\n   */\n  loadDeaths() {\n    return +(this.getData(CURRENT_DEATHS_KEY) || 0);\n  }\n\n  /**\n   * @param level {number}\n   */\n  saveLastLevel(level) {\n    this.saveData(LAST_LEVEL_KEY, level);\n  }\n\n  /**\n   * @returns {number}\n   */\n  getLastLevel() {\n    return +(this.getData(LAST_LEVEL_KEY) || 0);\n  }\n\n  /**\n   * @param key {string}\n   * @param value {string|number}\n   */\n  saveData(key, value) {\n    localStorage.setItem(key, value + \"\");\n  }\n\n  /**\n   * @param key {string}\n   * @returns {string}\n   */\n  getData(key) {\n    return localStorage.getItem(key);\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { EVENT_CLICK, SCREEN_HEIGHT, SCREEN_WIDTH } from \"../utils/variables\";\nimport { scale, unscale } from \"../utils/math\";\nimport Button from \"./button\";\nimport Data from \"../utils/data\";\n\nexport default class Settings extends BaseObject {\n  /**\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param eventEmitter {Observable}\n   */\n  constructor(eventEmitter, x, y, width, height) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = \"#fff\";\n    this.textSize = 90;\n    this.text2Size = 30;\n    this.text = \"FEAR THE WATER\";\n    this.score = 1000;\n    this.bestScore = Data.getInstance().loadBestDeaths();\n\n    const buttonHeight = 30;\n    const button1Width = 120;\n    const button2Width = 120;\n    const buttonMargin = 20;\n\n    this.components = [];\n\n    this.createCredits(\n      this.x,\n      this.y,\n      button1Width,\n      buttonHeight\n    );\n    this.createPlayButton(\n      this.x + (this.width - button1Width) / 2,\n      this.y + this.height - (buttonHeight + buttonMargin) * 3,\n      button1Width,\n      buttonHeight\n    );\n    this.createRestartButton(\n      this.x + (this.width - button2Width) / 2,\n      this.y + this.height - (buttonHeight + buttonMargin) * 2,\n      button2Width,\n      buttonHeight\n    );\n    this.createShareButton(\n      this.x +\n      (this.width - button2Width - buttonMargin * 2) / 2 +\n      buttonMargin,\n      this.y + this.height - buttonHeight - buttonMargin,\n      button2Width,\n      buttonHeight\n    );\n  }\n\n  destroyComponents() {\n    this.components.forEach((component) => component.destroy.emit());\n  }\n\n  createPlayButton(x, y, w, h) {\n    this.buttonPlay = new Button(this.eventEmitter, x, y, w, h, \"CONTINUE\");\n    this.components.push(this.buttonPlay);\n  }\n\n  createRestartButton(x, y, w, h) {\n    this.buttonRestart = new Button(this.eventEmitter, x, y, w, h, \"RESTART\");\n    this.components.push(this.buttonRestart);\n  }\n\n  createCredits(x, y, w, h) {\n    this.buttonCredits = new Button(this.eventEmitter, x, y, w, h, \"@ggjnez92\");\n    this.buttonCredits.backgroundColor = \"#00000000\";\n    this.buttonCredits.textColor = \"#000\";\n    this.buttonCredits.textColorHover = \"#0048ff\";\n    this.buttonCredits.listenerEvent(EVENT_CLICK, () =>\n      window.open(\"https://twitter.com/ggjnez92\", \"_blank\").focus()\n    );\n    this.components.push(this.buttonCredits);\n  }\n\n  createShareButton(x, y, w, h) {\n    this.buttonShareRecord = new Button(\n      this.eventEmitter,\n      x,\n      y,\n      w,\n      h,\n      \"SHARE ON TWITTER\"\n    );\n    this.buttonShareRecord.listenerEvent(EVENT_CLICK, () => {\n      const message = `I'm%20currently%20playing%20the%20game%20FEAR%20THE%20WATER%20developed%20for%20the%20%23gamedevjs%20jam.%0A%0A%23gamedev%0A%0AIf%20you%20want%20to%20check%20it%20out%2C%20here%20is%20the%20link%20to%20the%20%23github%20repository%0Ahttps%3A%2F%2Finflagames.github.io%2Ffear-the-water%2F`;\n      const url = `https://twitter.com/intent/tweet?text=${message}`;\n      window.open(url, \"_blank\").focus();\n    });\n    this.components.push(this.buttonShareRecord);\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    this.renderDialogBox(context);\n\n    this.components.forEach((component) => component.render(context));\n\n    this.renderTitle(context);\n    this.renderScore(context);\n  }\n\n  renderDialogBox(context) {\n    context.beginPath();\n    context.rect(0, 0, scale(SCREEN_WIDTH), scale(SCREEN_HEIGHT));\n    context.fillStyle = \"rgba(0,0,0,0.82)\";\n    context.fill();\n\n    context.beginPath();\n    context.rect(\n      scale(this.x),\n      scale(this.y),\n      scale(this.width),\n      scale(this.height)\n    );\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n  }\n\n  renderScore(context) {\n    if (this.bestScore !== undefined && this.bestScore !== null) {\n      context.beginPath();\n      context.font = `${scale(20)}px Arial`;\n      const text = `Best score: ${this.bestScore} deaths`;\n      const metrics = context.measureText(text);\n      const textWidth = unscale(metrics.width);\n      context.fillStyle = \"#000\";\n      context.fillText(\n        text,\n        scale(this.x + this.width / 2 - textWidth / 2),\n        scale(this.y + 110)\n      );\n    }\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  renderTitle(context) {\n    context.beginPath();\n    context.font = `${scale(this.text2Size)}px Arial`;\n    const metrics2 = context.measureText(this.text);\n    const text2Width = unscale(metrics2.width);\n    context.fillStyle = \"#000\";\n    context.fillText(\n      this.text,\n      scale(this.x + this.width / 2 - text2Width / 2),\n      scale(this.y + 70)\n    );\n  }\n}\n","export const isMobileMethod = {\n  Android: function () {\n    return navigator.userAgent.match(/Android/i);\n  },\n  BlackBerry: function () {\n    return navigator.userAgent.match(/BlackBerry/i);\n  },\n  iOS: function () {\n    return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n  },\n  Opera: function () {\n    return navigator.userAgent.match(/Opera Mini/i);\n  },\n  Windows: function () {\n    return (\n      navigator.userAgent.match(/IEMobile/i) ||\n      navigator.userAgent.match(/WPDesktop/i)\n    );\n  },\n  any: function () {\n    return (\n      isMobileMethod.Android() ||\n      isMobileMethod.BlackBerry() ||\n      isMobileMethod.iOS() ||\n      isMobileMethod.Opera() ||\n      isMobileMethod.Windows()\n    );\n  },\n};\n","import { normalizeVector } from \"../../utils/math\";\n\nexport const UP_DIRECTION = 1;\nexport const DOWN_DIRECTION = 2;\nexport const LEFT_DIRECTION = 4;\nexport const RIGHT_DIRECTION = 8;\n\nexport default class DirectionKeys {\n  constructor() {\n    /** @member {string[]} */\n    this.presedKeys = [];\n  }\n\n  clear() {\n    this.presedKeys = [];\n  }\n\n  /**\n   * @param key {string}\n   */\n  addKey(key) {\n    if (this.isDirectionKey(key) && !this.presedKeys.includes(key)) {\n      this.presedKeys.push(key);\n    }\n  }\n\n  /**\n   * @param key {string}\n   */\n  removeKey(key) {\n    this.presedKeys = this.presedKeys.filter((k) => k !== key);\n  }\n\n  /**\n   * @param key {string}\n   * @return {boolean}\n   */\n  isDirectionKey(key) {\n    return key === \"a\" || key === \"w\" || key === \"s\" || key === \"d\";\n  }\n\n  /**\n   * Current state of the keys\n   * @returns {boolean}\n   */\n  hasPressedKeys() {\n    return this.presedKeys.length > 0;\n  }\n\n  /**\n   * @returns {{x: number, y: number}}\n   */\n  directionVector() {\n    let directionVec = { x: 0, y: 0 };\n\n    /** @type {number} */\n    const direction = this.direction();\n\n    if ((direction & UP_DIRECTION) !== 0) {\n      directionVec.y = -1;\n    } else if ((direction & DOWN_DIRECTION) !== 0) {\n      directionVec.y = 1;\n    }\n\n    if ((direction & LEFT_DIRECTION) !== 0) {\n      directionVec.x = -1;\n    } else if ((direction & RIGHT_DIRECTION) !== 0) {\n      directionVec.x = 1;\n    }\n\n    // console.log(normalizeVector(directionVec));\n\n    return normalizeVector(directionVec);\n  }\n\n  direction() {\n    let dir = 0;\n\n    if (this.presedKeys.length > 0) {\n      dir = this.directionMap(this.presedKeys[0]);\n      let position = 1;\n      while (position < this.presedKeys.length) {\n        let n = this.consumeNextDirection(\n          UP_DIRECTION,\n          LEFT_DIRECTION,\n          RIGHT_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n        n |= this.consumeNextDirection(\n          DOWN_DIRECTION,\n          LEFT_DIRECTION,\n          RIGHT_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n        n |= this.consumeNextDirection(\n          LEFT_DIRECTION,\n          UP_DIRECTION,\n          DOWN_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n        n |= this.consumeNextDirection(\n          RIGHT_DIRECTION,\n          UP_DIRECTION,\n          DOWN_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n\n        if (n) {\n          dir |= n;\n          break;\n        }\n\n        position++;\n      }\n    }\n\n    return dir;\n  }\n\n  consumeNextDirection(dir, acDir1, acDir2, currentDir, nextDir) {\n    if (dir === currentDir && (nextDir === acDir1 || nextDir === acDir2)) {\n      return nextDir;\n    }\n    return 0;\n  }\n\n  /**\n   * @param key {string}\n   * @returns {number}\n   */\n  directionMap(key) {\n    if (key === \"w\") {\n      return UP_DIRECTION;\n    }\n    if (key === \"s\") {\n      return DOWN_DIRECTION;\n    }\n    if (key === \"a\") {\n      return LEFT_DIRECTION;\n    }\n    if (key === \"d\") {\n      return RIGHT_DIRECTION;\n    }\n    return 0;\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport shapeTile1 from \"../shapes/tile1.json\";\nimport shapeTile2 from \"../shapes/tile2.json\";\nimport floorTile from \"../shapes/floor.tile.json\";\nimport { addVectors, randomNumber } from \"../utils/math\";\n\nexport const TILE_1X1 = 1;\nexport const TILE_2X2 = 2;\nexport const TILE_FLOOR = 3;\n\nconst colors = [\"#b85c54\", \"#c56057\", \"#be7063\", \"#c55f56\"];\n\nexport default class Tile extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param type {number}\n   * @param gridSize {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, type, gridSize) {\n    super(eventEmitter, x, y, type * gridSize, type * gridSize);\n\n    this.directionVector = this.getRotation();\n\n    this.gridSize = gridSize;\n    this.type = type;\n    this.tileShape = { ...this.getShape(type) };\n    this.positionCorrection = { x: 0, y: 0 };\n\n    this.setupTile();\n  }\n\n  getShape(type) {\n    switch (type) {\n    case TILE_1X1:\n      return shapeTile2;\n    case TILE_2X2:\n      return shapeTile1;\n    case TILE_FLOOR:\n    default:\n      return floorTile;\n    }\n  }\n\n  getRotation() {\n    const currentDirection = randomNumber(4);\n    switch (currentDirection) {\n    case 0:\n      return { x: 1, y: 0 };\n    case 1:\n      return { x: 0, y: 1 };\n    case 2:\n      return { x: -1, y: 0 };\n    case 3:\n      return { x: 0, y: -1 };\n    }\n  }\n\n  /**\n   * Setting up the tile shape. This method calculate the correction needed to center the tile in the grid\n   */\n  setupTile() {\n    let minPosition = { ...this.tileShape.shapes[0].points[0] };\n    let maxPosition = { ...this.tileShape.shapes[0].points[0] };\n    for (let s of this.tileShape.shapes) {\n      for (let p of s.points) {\n        if (p.x < minPosition.x) {\n          minPosition.x = p.x;\n        }\n        if (p.y < minPosition.y) {\n          minPosition.y = p.y;\n        }\n        if (p.x > maxPosition.x) {\n          maxPosition.x = p.x;\n        }\n        if (p.y > maxPosition.y) {\n          maxPosition.y = p.y;\n        }\n      }\n    }\n\n    const tileFactor = {\n      x: (this.gridSize * this.getGridSize()) / ((maxPosition.x - minPosition.x) * this.scaleShape),\n      y: (this.gridSize * this.getGridSize()) / ((maxPosition.y - minPosition.y) * this.scaleShape)\n    };\n\n    this.positionCorrection = {\n      x: (this.gridSize * this.getGridSize()) * 0.5,\n      y: (this.gridSize * this.getGridSize()) * 0.5\n    };\n\n    // make size correction base on the grid size\n    this.tileShape.shapes = this.tileShape.shapes.map(s => ({\n      ...s,\n      background: colors[randomNumber(colors.length)],\n      points: s.points.map(p => ({\n        x: p.x * tileFactor.x,\n        y: p.y * tileFactor.y\n      }))\n    }));\n  }\n\n  getGridSize() {\n    switch (this.type) {\n    case TILE_1X1:\n    case TILE_FLOOR:\n      return 1;\n    case TILE_2X2:\n      return 2;\n    }\n  }\n\n  /**\n   * Calculate the tile position correction\n   * @returns {{x: number, y: number}}\n   */\n  getPosition() {\n    return addVectors(super.getPosition(), this.positionCorrection);\n  }\n\n  currentShape() {\n    return this.tileShape;\n  }\n\n  animate() {\n    // toDo (gonzalezext)[19.04.24]: maybe we can animate the leafs\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport hole from \"../shapes/hole.json\";\nimport { SCREEN_HEIGHT } from \"../utils/variables\";\n\nexport default class Hole extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param gridSize {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, gridSize) {\n    super(eventEmitter, x, y, gridSize, gridSize);\n\n    this.directionVector = { x: 0, y: 1 };\n    this.shape = { ...hole };\n    this.scaleShape = 1.7 * gridSize / 85;\n  }\n\n  getPosition() {\n    return { x: this.x - 8, y: this.y + 10 };\n  }\n\n  currentShape() {\n    return this.shape;\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport cameraShape from \"../shapes/camera.json\";\nimport { distanceNoSqrt, getVector, rotateVector, square, vectorToAngle } from \"../utils/math\";\n\nexport default class Camera extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param gridSize {number}\n   * @param distance {number} number of grid cells distance\n   * @param viewAngle {number} fraction of PI\n   * @param initialRotation {number} fraction of PI\n   * @param maxRotation {number} fraction of PI\n   */\n  constructor(eventEmitter, x = 0, y = 0, gridSize, distance, viewAngle, initialRotation, maxRotation = 1) {\n    super(eventEmitter, x, y, gridSize, gridSize);\n\n    this.baseDirection = rotateVector({ x: 0, y: 1 }, Math.PI * initialRotation);\n    this.directionVector = { x: 0, y: 1 };\n    this.shape = { ...cameraShape };\n    this.distance = distance;\n\n    const minPoint = { ...this.shape.shapes[0].points[0] };\n    const maxPoint = { ...this.shape.shapes[0].points[0] };\n    this.shape.shapes.forEach((shape) => shape.points.forEach((point) => {\n      minPoint.x = Math.min(minPoint.x, point.x);\n      minPoint.y = Math.min(minPoint.y, point.y);\n      maxPoint.x = Math.max(maxPoint.x, point.x);\n      maxPoint.y = Math.max(maxPoint.y, point.y);\n    }));\n\n    this.scaleShape = gridSize / Math.max(maxPoint.x - minPoint.x, maxPoint.y - minPoint.y);\n\n    this.maxRotation = Math.PI * maxRotation;\n    this.initialTime = new Date().getTime();\n    this.viewAngle = viewAngle;\n    this.sawPlayer = false;\n  }\n\n  animate() {\n    const currentTime = (this.initialTime - new Date().getTime()) / 1000;\n    const factor = Math.sin(currentTime);\n\n    this.directionVector = rotateVector(this.baseDirection, factor * this.maxRotation * .5);\n  }\n\n  render(context) {\n    // render vision cone\n    context.beginPath();\n    const angle = this.currentViewAngle();\n    context.moveTo(this.x, this.y);\n    context.arc(this.x, this.y, this.width * this.distance, angle, angle + Math.PI / this.viewAngle, false);\n    context.fillStyle = this.getVisionColor();\n    context.fill();\n\n    // render camera\n    super.render(context);\n  }\n\n  getVisionColor() {\n    if (this.sawPlayer) {\n      return \"rgba(255, 0, 0, 0.1)\";\n    }\n    return \"rgba(0, 255, 0, 0.1)\";\n  }\n\n  seeAnyPoint(shapes) {\n    for (const s of shapes) {\n      for (const p of s.points) {\n        if (this.seePoint(p)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  seePoint(p) {\n    if (distanceNoSqrt(p, { x: this.x, y: this.y }) <= square(this.width * this.distance)) {\n      const angle = vectorToAngle(getVector({ x: this.x, y: this.y }, p));\n      const halfAngle = Math.PI / (this.viewAngle * 2);\n      const cameraAngle = this.currentViewAngle() + halfAngle;\n\n      return Math.abs(angle - cameraAngle) < halfAngle || Math.abs(angle - cameraAngle + Math.PI * 2) < halfAngle;\n    }\n    return false;\n  }\n\n  toDegree(rad) {\n    return rad * 180 / Math.PI;\n  }\n\n  currentViewAngle() {\n    return vectorToAngle({\n      x: -this.directionVector.x,\n      y: this.directionVector.y\n    }) - Math.PI / (this.viewAngle * 2);\n  }\n\n  getPosition() {\n    return { x: this.x, y: this.y };\n  }\n\n  currentShape() {\n    return this.shape;\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport shapePlant from \"../shapes/plant1.json\";\nimport { rotateVector } from \"../utils/math\";\n\nexport default class Plant extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width\n   * @param height\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    super(eventEmitter, x, y, width, height);\n\n    const randomAngle = Math.random() * Math.PI * 2;\n    this.directionVector = rotateVector({ x: 0, y: 1 }, randomAngle);\n  }\n\n  currentShape() {\n    return shapePlant;\n  }\n\n  animate() {\n    // toDo (gonzalezext)[19.04.24]: maybe we can animate the leafs\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { randomNumber, scale } from \"../utils/math\";\nimport { SCREEN_HEIGHT, SCREEN_WIDTH, GRID_SIZE } from \"../utils/variables\";\nimport Tile, { TILE_1X1, TILE_2X2, TILE_FLOOR } from \"./tile\";\nimport level1 from \"./levels/level.001.json\";\nimport level2 from \"./levels/level.002.json\";\nimport { newBubble } from \"./bubble\";\nimport Hole from \"./hole\";\nimport Camera from \"./camera\";\nimport Plant from \"./plant\";\nimport Data from \"../utils/data\";\n\nconst ROW_TILE = 1;\nconst ROW_HOLE = 2;\nconst ROW_CAMERA = 4;\nconst ROW_PLAYER_START = 8;\nconst ROW_TREE = 16;\n\nconst MAX_NUMBER_OF_BUBBLES = 20;\n\nexport default class Level extends BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param background {string}\n   */\n  constructor(\n    eventEmitter,\n    x = 0,\n    y = 0,\n    width = 0,\n    height = 0,\n    background = \"\"\n  ) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = background;\n\n    /** @member {BaseObject[]} */\n    this.components = [];\n\n    this.tiles = [];\n    this.floor = [];\n    this.bubbles = [];\n    this.finishLevelItem = [];\n    this.cameras = [];\n\n    this.levels = [level1, level2];\n\n    this.playerInitialPosition = { x: 0, y: 0 };\n    this.pause = false;\n\n    this.gridSize = GRID_SIZE;\n\n    this.loadLastLevel();\n  }\n\n  hasMoreLevels() {\n    return this.levelIndex + 1 < this.levels.length;\n  }\n\n  loadLastLevel() {\n    this.levelIndex = Data.getInstance().getLastLevel();\n    this.loadLevel();\n  }\n\n  loadFirstLevel() {\n    this.levelIndex = 0;\n    this.loadLevel();\n  }\n\n  /**\n   * Load the next level if exists and return true, otherwise return false\n   * @returns {boolean}\n   */\n  loadNextLevel() {\n    this.levelIndex++;\n    if (this.levelIndex >= this.levels.length) {\n      return false;\n    }\n\n    this.loadLevel();\n    return true;\n  }\n\n  loadLevel() {\n    this.currentLevel = { ...this.levels[this.levelIndex] };\n\n    // clear previous level\n    // toDo (gonzalezext)[24.04.24]: destroy all components\n    this.components = [];\n    this.decorations = [];\n    this.tiles = [];\n    this.floor = [];\n    this.bubbles = [];\n    this.finishLevelItem = [];\n    this.cameras = [];\n\n    // load level background\n    this.backgroundColor = this.currentLevel.background;\n    this.gridSize = SCREEN_HEIGHT / this.currentLevel.map.length;\n\n    const map = this.currentLevel.map;\n    let cameraCount = 0;\n    const flags = new Array(map.length).fill(1).map(() => new Array(map[0].length).fill(true));\n    for (let row = 0; row < map.length; row++) {\n      for (let col = 0; col < map[row].length; col++) {\n        const tile = map[row][col];\n        if (flags[row][col] && ((tile & ROW_TILE) !== 0)) {\n\n          let type = TILE_1X1;\n\n          // check if 2x2 tile fit\n          if (row + 1 < map.length && col + 1 < map[row].length &&\n            (map[row][col + 1] & ROW_TILE) &&\n            (map[row + 1][col] & ROW_TILE) &&\n            (map[row + 1][col + 1] & ROW_TILE)\n          ) {\n            flags[row][col] = false;\n            flags[row][col + 1] = false;\n            flags[row + 1][col] = false;\n            flags[row + 1][col + 1] = false;\n\n            type = TILE_2X2;\n          }\n\n          const tile = new Tile(\n            this.eventEmitter,\n            col * this.gridSize,\n            row * this.gridSize,\n            type,\n            this.gridSize\n          );\n          this.tiles.push(tile);\n          this.components.push(tile);\n        } else if ((tile & ROW_TILE) === 0) {\n          const tile = new Tile(\n            this.eventEmitter,\n            col * this.gridSize,\n            row * this.gridSize,\n            TILE_FLOOR,\n            this.gridSize\n          );\n          this.floor.push(tile);\n        }\n\n        if (tile & ROW_CAMERA) {\n          const camera = new Camera(\n            this.eventEmitter,\n            col * this.gridSize + this.gridSize * .5,\n            row * this.gridSize + this.gridSize * .5,\n            this.gridSize,\n            this.currentLevel.cameras[cameraCount][\"viewDistance\"],\n            this.currentLevel.cameras[cameraCount][\"viewAngle\"],\n            this.currentLevel.cameras[cameraCount][\"initialRotation\"],\n            this.currentLevel.cameras[cameraCount][\"maxRotation\"]\n          );\n          cameraCount++;\n          this.cameras.push(camera);\n        }\n\n        if (tile & ROW_HOLE) {\n          const hole = new Hole(\n            this.eventEmitter,\n            col * this.gridSize + this.gridSize * .5,\n            row * this.gridSize + this.gridSize * .5,\n            this.gridSize\n          );\n          this.finishLevelItem.push(hole);\n          this.components.push(hole);\n        }\n\n        if (tile & ROW_TREE) {\n          const plant = new Plant(\n            this.eventEmitter,\n            col * this.gridSize + this.gridSize * .5,\n            row * this.gridSize + this.gridSize * .5\n          );\n          this.decorations.push(plant);\n        }\n\n        if (tile & ROW_PLAYER_START) {\n          this.playerInitialPosition = {\n            x: col * this.gridSize + this.gridSize * .5,\n            y: row * this.gridSize + this.gridSize * .5\n          };\n        }\n      }\n    }\n\n    // save last level loaded\n    Data.getInstance().saveLastLevel(this.levelIndex);\n  }\n\n  pauseGame() {\n    this.pause = true;\n  }\n\n  unPauseGame() {\n    this.pause = false;\n  }\n\n  render(context) {\n    this.cleanScreen(context);\n\n    this.floor.forEach((component) => component.render(context));\n    this.renderWatterColor(context);\n\n    if (!this.pause) {\n      this.updateBubbles();\n    }\n\n    this.components.forEach((component) => component.render(context));\n    this.decorations.forEach((component) => component.render(context));\n    this.cameras.forEach((component) => component.render(context));\n  }\n\n  updateBubbles() {\n    const toRemove = new Set();\n    for (const b of this.bubbles) {\n      if (b.bubbleDead()) {\n        toRemove.add(b.id);\n      }\n    }\n\n    this.bubbles = this.bubbles.filter((b) => !toRemove.has(b.id));\n    this.components = this.components.filter((c) => !toRemove.has(c.id));\n\n    if (this.bubbles.length < MAX_NUMBER_OF_BUBBLES) {\n      if (randomNumber(2) === 1) {\n        const bubble = newBubble(this.eventEmitter);\n        this.components.unshift(bubble);\n        this.bubbles.push(bubble);\n      }\n    }\n  }\n\n  renderWatterColor(context) {\n    if (this.backgroundColor) {\n      context.beginPath();\n      context.fillStyle = this.backgroundColor;\n      context.rect(0, 0, scale(this.width), scale(this.height));\n      context.fill();\n    }\n  }\n\n  cleanScreen(context) {\n    context.clearRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\n  }\n}\n","import { addVectors, detectCollision, lerpVector, multiplyVector, normalizeVector } from \"../../utils/math\";\nimport DirectionKeys from \"./direction-keys\";\nimport { ANIMATE_WALK } from \"../../components/player\";\nimport Level from \"../../components/level\";\nimport Data from \"../../utils/data\";\n\nexport const GAME_RUNNING = 1;\nexport const GAME_STOP = 3;\nexport const GAME_OVER = 5;\nexport const GAME_PAUSE = 7;\n\nexport default class GameLogic {\n  /**\n   *\n   * @param level {Level}\n   * @param score {Score}\n   * @param deathsScore {Score}\n   */\n  constructor(level, score, deathsScore) {\n    /** @member {DirectionKeys} */\n    this.directionKeys = new DirectionKeys();\n\n    /** @member {Level} */\n    this.level = level;\n\n    /** @member {Score} */\n    this.score = score;\n\n    /** @member {Score} */\n    this.scoreDeaths = deathsScore;\n\n    this.player = {};\n    this.restartLevel();\n\n    this.sideAnimation = 0;\n  }\n\n  destroy() {\n    this.player.component.destroy.emit();\n  }\n\n  /**\n   * run an iteration of the game logic\n   */\n  play() {\n    if (this.player.status === GAME_RUNNING) {\n      this.movePlayer();\n      this.animateComponents();\n      this.checkCollisionWithRelevantElements();\n    } else if (this.player.status === GAME_OVER) {\n      this.animateComponents();\n      if (new Date().getTime() - this.sideAnimation > 3000) {\n        this.restartLevel();\n      }\n    }\n  }\n\n  /**\n   * Move the player base on the direction keys\n   */\n  movePlayer() {\n    const VELOCITY = 10;\n\n    if (this.directionKeys.hasPressedKeys()) {\n      const rot = lerpVector(this.player.directionVector, this.directionKeys.directionVector(), 0.95);\n      this.player.directionVector = multiplyVector(normalizeVector(rot), VELOCITY);\n\n      // check collision\n      const prevPosition = this.player.position;\n      this.player.position = addVectors(this.player.directionVector, this.player.position);\n      if (this.checkCollisionWithMap()) {\n        this.player.position = prevPosition;\n      }\n\n      this.player.component.animation |= ANIMATE_WALK;\n    } else {\n      this.player.component.animation = 0;\n    }\n\n    this.player.component.updateCoordinates(this.player.position);\n    this.player.component.updateDirectionVector({ ...this.player.directionVector, y: -this.player.directionVector.y });\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  checkCollisionWithMap() {\n    const playerProjection = this.player.component.getProjection();\n    for (const component of this.level.tiles) {\n      if (this.checkCollisionInProjections(playerProjection, component.getProjection())) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  checkCollisionWithRelevantElements() {\n    const playerProjection = this.player.component.getProjection();\n    for (const camera of this.level.cameras) {\n      if (camera.seeAnyPoint(playerProjection)) {\n        camera.sawPlayer = true;\n        this.gameOver();\n        return true;\n      } else {\n        // toDo (gonzalezext)[23.04.24]: remove this\n        camera.sawPlayer = false;\n      }\n    }\n\n    // validate end of the level\n    for (const component of this.level.finishLevelItem) {\n      if (this.checkCollisionInProjections(playerProjection, component.getProjection(\"center\"))) {\n        this.levelComplete();\n        return false;\n      }\n    }\n  }\n\n  gameOver() {\n    // save deaths\n    this.player.deaths++;\n    Data.getInstance().saveDeaths(this.player.deaths);\n\n    this.player.status = GAME_OVER;\n    this.player.component.animation = 0;\n    this.player.component.brakeShapes();\n    this.sideAnimation = new Date().getTime();\n  }\n\n  canPauseGame() {\n    // toDo (gonzalezext)[18.04.24]:\n    return true;\n  }\n\n  animateComponents() {\n    // animate player\n    this.player.component.animate();\n\n    // animate cameras\n    this.level.cameras.forEach((obj) => obj.animate());\n  }\n\n  pause() {\n    this.player.status = GAME_PAUSE;\n    this.level.pauseGame();\n  }\n\n  unpause() {\n    this.player.status = GAME_RUNNING;\n    this.level.unPauseGame();\n  }\n\n  /**\n   * @param shapes1 {{points: {x: number, y: number}[], background: string}[]}\n   * @param shapes2 {{points: {x: number, y: number}[], background: string}[]}\n   * @return {boolean}\n   */\n  checkCollisionInProjections(shapes1, shapes2) {\n    for (const s1 of shapes1) {\n      for (const s2 of shapes2) {\n        if (detectCollision(s1.points, s2.points)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  levelComplete() {\n    if (this.level.hasMoreLevels()) {\n      this.level.loadNextLevel();\n      this.restartLevel();\n    } else {\n      Data.getInstance().saveBestDeaths(this.player.deaths);\n      Data.getInstance().saveDeaths(0);\n\n      this.loadFirstLevel();\n    }\n    this.updateDeathScore();\n  }\n\n  loadFirstLevel() {\n    this.level.loadFirstLevel();\n    Data.getInstance().saveDeaths(0);\n    this.restartLevel();\n  }\n\n  restartLevel() {\n    this.player = {\n      ...this.player,\n      position: this.level.playerInitialPosition,\n      rotation: Math.PI / 2, // todo: eliminate this property\n      directionVector: { x: 0, y: 1 },\n      expectedRotation: 0,\n      velocity: 0,\n      deaths: Data.getInstance().loadDeaths(),\n      minVelocity: 10,\n      acceleration: 20,\n      deceleration: -1.5,\n      status: GAME_RUNNING\n    };\n    if (this.player.component) {\n      this.player.component.brakedShape = null;\n      this.player.component.width = this.level.gridSize;\n      this.player.component.calculateScale();\n    }\n    this.score.score = this.level.levelIndex + 1;\n\n    this.updateDeathScore();\n  }\n\n  updateDeathScore() {\n    this.scoreDeaths.score = this.player.deaths;\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { SCREEN_HEIGHT, SCREEN_WIDTH } from \"../utils/variables\";\nimport { scale, unscale } from \"../utils/math\";\nimport Camera from \"./camera\";\nimport Hole from \"./hole\";\nimport Button from \"./button\";\n\nexport default class Help extends BaseObject {\n  /**\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param eventEmitter {Observable}\n   */\n  constructor(eventEmitter, x, y, width, height) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = \"#fff\";\n\n    this.padding = 10;\n\n    this.keysSize = 40;\n    this.keysTextSize = 10;\n    this.keysInfoTextSize = 15;\n    this.keyboardPosition = {\n      x: 30,\n      y: this.height * 0.5\n    };\n\n    this.enemySize = 60;\n    this.enemyPosition = {\n      x: x + this.width * 0.5,\n      y: y + this.height * 0.5\n    };\n    const enemy = new Camera(\n      this.eventEmitter,\n      this.enemyPosition.x,\n      this.enemyPosition.y,\n      this.enemySize, 2, 2, 2, 0.5);\n\n    this.winPosition = {\n      x: x + width - this.padding - 110,\n      y: y + height * 0.5\n    };\n    const winGame = new Hole(\n      this.eventEmitter,\n      this.winPosition.x,\n      this.winPosition.y,\n      70\n    );\n\n    const closeHelpButtonSize = 40;\n    this.closeHelpButton = new Button(\n      this.eventEmitter,\n      x + width - this.padding - closeHelpButtonSize,\n      y + this.padding,\n      closeHelpButtonSize,\n      closeHelpButtonSize,\n      \"x\"\n    );\n    this.closeHelpButton.backgroundColor = \"#ff000000\";\n    this.closeHelpButton.textColor = \"#000\";\n    this.closeHelpButton.textSize = 20;\n\n    this.components = [enemy, winGame, this.closeHelpButton];\n  }\n\n  destroyComponents() {\n    this.components.forEach((component) => component.destroy.emit());\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    this.renderDialogBox(context);\n\n    this.renderKeyboard(context, this.keyboardPosition.x, this.keyboardPosition.y);\n\n    this.renderEnemyInfo(context, this.enemyPosition.x, this.enemyPosition.y);\n    this.renderWinGameInfo(context, this.winPosition.x, this.winPosition.y);\n\n    this.components.forEach((component) => component.animate && component.animate());\n    this.components.forEach((component) => component.render(context));\n  }\n\n  renderWinGameInfo(context, x, y) {\n    this.renderText(\n      context,\n      x - 90,\n      y - 97,\n      \"Reach all the holes to win\\nthe game\",\n      this.keysInfoTextSize,\n      \"#000\"\n    );\n  }\n\n  renderEnemyInfo(context, x, y) {\n    this.renderText(\n      context,\n      x - 105,\n      y - 97,\n      \"Avoid being seen by the camera\\nor you will be killed\",\n      this.keysInfoTextSize,\n      \"#000\"\n    );\n  }\n\n  renderKeyboard(context, x, y) {\n    const spacing = 10;\n    this.renderKeyboardKey(context, x, y + spacing, \"A\");\n    this.renderKeyboardKey(context, x + this.keysSize + this.padding, y + spacing, \"S\");\n    this.renderKeyboardKey(context, x + this.keysSize * 2 + this.padding * 2, y + spacing, \"D\");\n    this.renderKeyboardKey(context, x + this.keysSize + this.padding, y - this.keysSize - this.padding + spacing, \"W\");\n    this.renderKeyboardInfo(context, x - 10, y - this.keysSize * 2 - this.padding * 3);\n  }\n\n  renderKeyboardInfo(context, x, y) {\n    const xPosition = this.x + this.padding;\n    const yPosition = this.y + this.padding;\n\n    this.renderText(\n      context,\n      xPosition + x,\n      yPosition + y,\n      \"Use the keyboard to move\\nthe player around the map\\nand avoid the cameras\",\n      this.keysInfoTextSize,\n      \"#000\"\n    );\n  }\n\n  /**\n   * @param context\n   * @param x {number}\n   * @param y {number}\n   * @param key {string}\n   */\n  renderKeyboardKey(context, x, y, key) {\n    const xPosition = this.x + this.padding;\n    const yPosition = this.y + this.padding;\n\n    context.beginPath();\n    context.rect(\n      scale(xPosition + x),\n      scale(yPosition + y),\n      scale(this.keysSize),\n      scale(this.keysSize)\n    );\n    context.fillStyle = \"#000\";\n    context.fill();\n\n    context.beginPath();\n    context.font = `${scale(this.keysTextSize)}px Arial`;\n    const metrics = context.measureText(key);\n    const textWidth = unscale(metrics.width);\n    const textHeight = unscale(\n      metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent\n    );\n    context.fillStyle = \"#fff\";\n    context.fillText(\n      key,\n      scale(xPosition + x + this.keysSize / 2 - textWidth / 2),\n      scale(yPosition + y + this.keysSize / 2 + textHeight / 2)\n    );\n  }\n\n  renderDialogBox(context) {\n    context.beginPath();\n    context.rect(0, 0, scale(SCREEN_WIDTH), scale(SCREEN_HEIGHT));\n    context.fillStyle = \"rgba(0,0,0,0.82)\";\n    context.fill();\n\n    context.beginPath();\n    context.rect(\n      scale(this.x),\n      scale(this.y),\n      scale(this.width),\n      scale(this.height)\n    );\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n  }\n\n  /**\n   * @param context\n   * @param x {number}\n   * @param y {number}\n   * @param text {string}\n   * @param size {number}\n   * @param color {string}\n   */\n  renderText(context, x, y, text, size, color) {\n    let previousTextHeight = 0;\n    const textList = text.split(\"\\n\");\n\n    for (let t of textList) {\n      context.beginPath();\n      context.font = `${scale(size)}px Arial`;\n      const metrics = context.measureText(size);\n      // const textWidth = unscale(metrics.width);\n      const textHeight = unscale(metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      context.fillStyle = color;\n      context.fillText(t, scale(x), scale(y + previousTextHeight));\n      previousTextHeight += textHeight + 10;\n    }\n  }\n}\n","import Scene from \"./shared/scene\";\nimport {\n  EVENT_CLICK,\n  EVENT_KEYDOWN,\n  EVENT_KEYUP,\n  EVENT_MOUSEUP,\n  SCREEN_HEIGHT,\n  SCREEN_WIDTH\n} from \"../utils/variables\";\nimport Player from \"../components/player\";\nimport Score from \"../components/score\";\nimport Settings from \"../components/settings\";\nimport Button from \"../components/button\";\nimport { isMobileMethod } from \"../utils/mobile-device\";\nimport GameLogic from \"./shared/game.logic\";\nimport Level from \"../components/level\";\nimport Help from \"../components/help\";\nimport Data from \"../utils/data\";\n\nexport const isMobile = isMobileMethod.any();\n\nconst SCORE_MARGIN = 10;\n\nexport default class ScenePlay extends Scene {\n  /**\n   * @param navigator {Navigator}\n   * @param eventEmitter {Observable}\n   */\n  constructor(navigator, eventEmitter) {\n    super(navigator, eventEmitter);\n\n    this.createSettingsButton();\n    this.createHelpButton();\n\n    this.listenerEvent(EVENT_KEYDOWN, this.keyDown.bind(this));\n    this.listenerEvent(EVENT_KEYUP, this.keyUp.bind(this));\n\n    this.initGame();\n  }\n\n  createSettingsButton() {\n    this.buttonPause = new Button(\n      this.eventEmitter,\n      SCORE_MARGIN,\n      SCORE_MARGIN,\n      100,\n      30,\n      \"SETTINGS\"\n    );\n    this.buttonPause.backgroundColor = \"#00000000\";\n    this.buttonPause.textSize = 20;\n    this.buttonPause.listenerEvent(EVENT_CLICK, () => {\n      if (this.currentGame.canPauseGame()) {\n        this.currentGame.pause();\n        this.showSettings(false);\n      }\n    });\n  }\n\n  createHelpButton() {\n    this.buttonHelp = new Button(\n      this.eventEmitter,\n      SCORE_MARGIN + this.buttonPause.width,\n      SCORE_MARGIN,\n      100,\n      30,\n      \"HELP\"\n    );\n    this.buttonHelp.backgroundColor = \"#00000000\";\n    this.buttonHelp.textSize = 20;\n    this.buttonHelp.listenerEvent(EVENT_CLICK, () => {\n      this.showHelp();\n    });\n  }\n\n  initGame() {\n    this.isModalShow = false;\n\n    // game logic\n    if (this.currentGame) {\n      this.currentGame.destroy();\n    }\n\n    // create level\n    this.level = new Level(\n      this.eventEmitter,\n      0,\n      0,\n      SCREEN_WIDTH,\n      SCREEN_HEIGHT,\n      \"#000\"\n    );\n\n    // score component\n    const score = new Score(\n      this.eventEmitter,\n      SCREEN_WIDTH - SCORE_MARGIN,\n      SCORE_MARGIN,\n      \"LEVEL\"\n    );\n    score.backgroundColor = \"#00000000\";\n\n    // deaths indicator\n    const deathsScore = new Score(\n      this.eventEmitter,\n      SCREEN_WIDTH * 0.5 + 40,\n      SCORE_MARGIN,\n      \"DEATHS\"\n    );\n    deathsScore.backgroundColor = \"#00000000\";\n\n    // player component\n    this.player = new Player(\n      this.eventEmitter,\n      this.level.playerInitialPosition.x,\n      this.level.playerInitialPosition.y,\n      this.level.gridSize\n    );\n    this.currentGame = new GameLogic(this.level, score, deathsScore);\n    this.currentGame.player.component = this.player;\n\n    // add components to the element array\n    this.elements = [this.player, this.buttonPause, this.buttonHelp, score, deathsScore];\n\n    // elements of the game\n    this.playableElements = [this.player];\n\n    // show help if first time\n    if (Data.getInstance().isFirstTime()) {\n      this.showHelp();\n    }\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    // execute game logic\n    this.currentGame.play();\n\n    // render background\n    this.cleanCanvas(context);\n\n    this.renderOrRemovePlayableElements(context);\n\n    // render scene elements\n    for (const element of this.elements) {\n      element.render(context);\n    }\n  }\n\n  keyDown(event) {\n    this.currentGame.directionKeys.addKey(event.key);\n  }\n\n  keyUp(event) {\n    this.currentGame.directionKeys.removeKey(event.key);\n  }\n\n  showSettings(restartGame = true) {\n    if (!this.isModalShow) {\n      this.isModalShow = true;\n      const modalWidth = 300;\n      const modalHeight = 300;\n      const modal = new Settings(\n        this.eventEmitter,\n        SCREEN_WIDTH / 2 - modalWidth / 2,\n        SCREEN_HEIGHT / 2 - modalHeight / 2,\n        modalWidth,\n        modalHeight\n      );\n      modal.currentGame = this.currentGame;\n      modal.buttonPlay.listenerEvent(EVENT_MOUSEUP, () => {\n        this.hideModal(modal);\n        if (restartGame) {\n          this.currentGame.restartLevel();\n        }\n      });\n      modal.buttonRestart.listenerEvent(EVENT_CLICK, () => {\n        this.hideModal(modal);\n        this.currentGame.loadFirstLevel();\n      });\n      this.elements.push(modal);\n    }\n  }\n\n  showHelp() {\n    if (!this.isModalShow) {\n      this.isModalShow = true;\n      const modalWidth = SCREEN_WIDTH * 0.8;\n      const modalHeight = SCREEN_HEIGHT * 0.5;\n      const modal = new Help(\n        this.eventEmitter,\n        SCREEN_WIDTH / 2 - modalWidth / 2,\n        SCREEN_HEIGHT / 2 - modalHeight / 2,\n        modalWidth,\n        modalHeight\n      );\n\n      modal.closeHelpButton.listenerEvent(EVENT_MOUSEUP, () => {\n        this.hideModal(modal);\n      });\n\n      this.elements.push(modal);\n    }\n  }\n\n  hideModal(modal) {\n    modal.destroyComponents();\n    modal.destroy.emit();\n    this.currentGame.unpause();\n    this.elements.pop();\n    this.isModalShow = false;\n  }\n\n  renderOrRemovePlayableElements(context) {\n    const toRemove = new Set();\n    for (const element of this.playableElements) {\n      if (this.isElementVisible(element)) {\n        element.render(context);\n      } else {\n        toRemove.add(element.id);\n      }\n    }\n    this.playableElements = this.playableElements.filter(\n      (ele) => !toRemove.has(ele.id)\n    );\n  }\n\n  isElementVisible(element) {\n    return element.y - element.height * 2 < SCREEN_HEIGHT;\n  }\n\n  cleanCanvas(context) {\n    this.level.render(context);\n  }\n}\n","import {\n  EVENT_RESIZE,\n  SCENE_GAME,\n  SCREEN_RATIO,\n  SCREEN_WIDTH,\n} from \"./utils/variables\";\nimport ScenePlay from \"./scenes/play.scene\";\nimport Observable from \"./utils/observable\";\n\nexport default class Navigator {\n  /**\n   * @param scene {number}\n   * @param eventEmitter {Observable}\n   */\n  constructor(scene, eventEmitter) {\n    this.gameWidth = SCREEN_WIDTH;\n    this.gameHeght = SCREEN_WIDTH * SCREEN_RATIO;\n    this.sceneClasses = new Map();\n    this.sceneClasses.set(SCENE_GAME, ScenePlay);\n    this.scenesInstances = new Map();\n    /** @member {Scene} */\n    this.currentScene = null;\n    eventEmitter.on((data) => {\n      this.currentScene.eventEmitter.emit(data);\n      if (data.event === EVENT_RESIZE && data.dimension) {\n        this.gameWidth = data.dimension.w;\n        this.gameHeght = data.dimension.h;\n        this.updateGameDimensions();\n      }\n    });\n\n    // initial navigation\n    this.navigate(scene);\n  }\n\n  /**\n   * Navigate to a different scene\n   * @param scene {number}\n   */\n  navigate(scene) {\n    if (this.scenesInstances.has(scene)) {\n      this.currentScene = this.scenesInstances.get(scene);\n    } else if (this.sceneClasses.has(scene)) {\n      this.scenesInstances.set(\n        scene,\n        new (this.sceneClasses.get(scene))(this, new Observable()),\n      );\n      this.currentScene = this.scenesInstances.get(scene);\n    }\n    this.updateGameDimensions();\n  }\n\n  updateGameDimensions() {\n    if (this.currentScene) {\n      this.currentScene.width = this.gameWidth;\n      this.currentScene.height = this.gameHeght;\n    }\n  }\n}\n","import Navigator from \"./navigator\";\nimport Observable from \"./utils/observable\";\nimport { unscale } from \"./utils/math\";\nimport {\n  SCREEN_WIDTH,\n  SCREEN_RATIO,\n  SCENE_GAME,\n  STOP,\n  EVENT_CLICK,\n  EVENT_MOUSEDOWN,\n  EVENT_MOUSEUP,\n  EVENT_MOUSEOUT,\n  EVENT_MOUSELEAVE,\n  EVENT_MOUSEMOVE,\n  EVENT_TOUCHDOWN,\n  EVENT_TOUCHUP,\n  EVENT_TOUCHCANCEL,\n  EVENT_TOUCHMOVE,\n  EVENT_RESIZE,\n  RUNNING,\n  FPS,\n  EVENT_KEYDOWN,\n  EVENT_KEYPRESS,\n  EVENT_KEYUP,\n} from \"./utils/variables\";\n\nconst intervalPerSecond = 1000 / FPS;\n\nlet gameInstance = null;\n\nexport default class Game {\n  constructor() {\n    window.addEventListener(\"resize\", this.resizeScreen.bind(this));\n\n    /** @member {HTMLCanvasElement} */\n    this.canvas = document.getElementById(\"game\");\n\n    this.registerEvents();\n\n    /** @member {Observable} */\n    this.eventEmitter = new Observable();\n\n    /** @member {CanvasRenderingContext2D} */\n    this.context = this.canvas.getContext(\"2d\");\n\n    /** @member {Navigator} */\n    this.navigatorRoot = new Navigator(SCENE_GAME, this.eventEmitter);\n\n    this.loopStatus = STOP;\n    this.lastTime = 0;\n    this.width = this.canvas.width;\n    this.height = this.canvas.height;\n\n    this.resizeScreen();\n  }\n\n  registerEvents() {\n    // keyboard events\n    this.registerKeyboardEvent(\"keydown\", EVENT_KEYDOWN);\n    this.registerKeyboardEvent(\"keyup\", EVENT_KEYUP);\n    this.registerKeyboardEvent(\"keypress\", EVENT_KEYPRESS);\n\n    // mouse events\n    this.registerClickEvent(\"click\", EVENT_CLICK);\n    this.registerClickEvent(\"mousedown\", EVENT_MOUSEDOWN);\n    this.registerClickEvent(\"mouseup\", EVENT_MOUSEUP);\n    this.registerClickEvent(\"mouseout\", EVENT_MOUSEOUT);\n    this.registerClickEvent(\"mouseleave\", EVENT_MOUSELEAVE);\n    this.registerClickEvent(\"mousemove\", EVENT_MOUSEMOVE);\n\n    // touch events\n    this.registerTouchEvent(\"touchstart\", EVENT_TOUCHDOWN, false);\n    this.registerTouchEvent(\"touchend\", EVENT_TOUCHUP, false);\n    this.registerTouchEvent(\"touchcancel\", EVENT_TOUCHCANCEL, false);\n    this.registerTouchEvent(\"touchmove\", EVENT_TOUCHMOVE, false);\n  }\n\n  /**\n   * @param type {string}\n   * @param eventType {string}\n   * @param option {boolean}\n   */\n  registerClickEvent(type, eventType, option = undefined) {\n    this.canvas.addEventListener(\n      type,\n      (e) => this.clickEvent(e, eventType),\n      option,\n    );\n  }\n\n  /**\n   * @param type {string}\n   * @param eventType {string}\n   * @param option {boolean}\n   */\n  registerTouchEvent(type, eventType, option = undefined) {\n    this.canvas.addEventListener(\n      type,\n      (e) => this.touchEvent(e, eventType),\n      option,\n    );\n  }\n\n  /**\n   * @param type {string}\n   * @param eventType {string}\n   * @param option {boolean}\n   */\n  registerKeyboardEvent(type, eventType, option = undefined) {\n    document.addEventListener(\n      type,\n      (e) => this.keyboardEvent(e, eventType),\n      option,\n    );\n  }\n\n  resizeScreen() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    let calculatedWidth = Math.min(SCREEN_WIDTH, width);\n    let calculatedHeight = calculatedWidth * SCREEN_RATIO;\n\n    if (calculatedHeight > height) {\n      calculatedHeight = height;\n      calculatedWidth = height / SCREEN_RATIO;\n    }\n\n    this.canvas.width = calculatedWidth;\n    this.canvas.height = calculatedHeight;\n\n    window.currentWidth = calculatedWidth;\n    this.eventEmitter.emit({\n      event: EVENT_RESIZE,\n      dimension: { w: calculatedWidth, h: calculatedHeight },\n    });\n  }\n\n  /**\n   * @param event {TouchEvent}\n   * @param type {string}\n   */\n  touchEvent(event, type) {\n    this.emitPositionEvent(\n      {\n        x: event?.targetTouches[0]?.pageX,\n        y: event?.targetTouches[0]?.pageY,\n      },\n      type,\n    );\n  }\n\n  /**\n   * @param event {MouseEvent}\n   * @param type {string}\n   */\n  clickEvent(event, type) {\n    this.emitPositionEvent({ x: event?.clientX, y: event?.clientY }, type);\n  }\n\n  /**\n   * @param event {KeyboardEvent}\n   * @param type {string}\n   */\n  keyboardEvent(event, type) {\n    this.eventEmitter.emit({\n      event: type,\n      key: event.key,\n    });\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   * @param type {string}\n   */\n  emitPositionEvent(position, type) {\n    const rect = this.canvas.getBoundingClientRect();\n    this.eventEmitter.emit({\n      event: type,\n      position: {\n        x: unscale(position.x - rect.left),\n        y: unscale(position.y - rect.top),\n      },\n    });\n  }\n\n  /**\n   * Get game instance\n   * @returns {Game}\n   */\n  static getInstance() {\n    if (!gameInstance) {\n      gameInstance = new Game();\n    }\n    return gameInstance;\n  }\n\n  /**\n   * Initialize game\n   */\n  init() {\n    this.loopStatus = RUNNING;\n    requestAnimationFrame(this.loop.bind(this));\n  }\n\n  /**\n   * Application loop\n   * @param currentTime {number}\n   */\n  loop(currentTime) {\n    if (this.loopStatus === RUNNING) {\n      if (\n        this.loopStatus === RUNNING &&\n        intervalPerSecond <= currentTime - this.lastTime\n      ) {\n        this.lastTime = currentTime;\n\n        this.navigatorRoot.currentScene.render(this.context);\n      }\n\n      requestAnimationFrame(this.loop.bind(this));\n    }\n    // the else here will end the loop\n  }\n}\n","import Game from \"./game/game\";\n\nGame.getInstance().init();\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","SCREEN_RATIO","SCREEN_WIDTH","SCREEN_HEIGHT","EVENT_CLICK","EVENT_MOUSEOUT","EVENT_KEYDOWN","EVENT_KEYUP","Observable","constructor","subscriptions","open","emit","data","i","length","callFunction","func","pipe","functions","lastSteam","stream","on","unsub","filter","f","push","BaseObject","eventEmitter","x","y","width","height","destroy","lastMousePosition","isMouseHover","undefined","id","value","_eventEmitter","stopper","streamCancel","cancelFunction","observable","takeUntil","render","context","listenerEvent","event","callback","validateMouseEventPropagation","position","validateKeyboardEventPropagation","isPositionInside","Scene","navigator","super","backgroundColor","elements","cleanCanvas","element","rect","fillStyle","fill","validateEventPropagation","validation","vectorToAngle","vector","Math","atan2","addVectors","v1","v2","getPointByVectorRotation","pivot","phi","result","rotateVector","cos","sin","square","scale","currentWidth","unscale","randomNumber","limit","start","floor","random","detectCollision","shape1","shape2","axis","extractAxis","axi","p1","shapeProjection","p2","min","max","normalizeVector","v","sqrt","shape","projection","p","u","BaseShape","rotation","directionVector","scaleShape","brakedShape","updateCoordinates","shapes","getProjection","points","beginPath","moveTo","lineTo","closePath","background","Boolean","stroke","strokeStyle","lineWidth","strokeWidth","animate","moveBrakedPiece","brakeShapes","currentShape","brakeShape","cp","shapeCenter","factor","pow","coverBox","newShapes","count","ceil","pos","Array","map","reduceOpacity","color","extract","alpha","getOpacity","toString","substr","getColorWithOpacity","alphaFactor","parseInt","shapeId","PI","getPosition","projectedShape","newBubble","w","h","Bubble","lifeTime","calculateScale","showAndHideFunction","getTimeFactor","growBubbleFunction","ellipse","time","log","bubbleDead","Player","gridSize","Date","getTime","animation","animationIsOn","bubblesIntervalToShow","bubblesCount","bubbles","bubble","forEach","updateDirectionVector","animateWalk","footMovement","stepAnimationFunction","handMovement","handAnimationFunction","minPoint","maxPoint","point","startsWith","footMov","endsWith","dir","MAX_LIFE_TIME","Score","text","score","textSize","textColor","lastTime","font","metrics","measureText","textWidth","textHeight","actualBoundingBoxAscent","actualBoundingBoxDescent","padding","fillText","Button","textColorHover","document","body","style","cursor","APPLICATION_PREFIX","LAST_LEVEL_KEY","CURRENT_DEATHS_KEY","FIRST_TIME_KEY","BEST_DEATHS_KEY","Data","getInstance","saveBestDeaths","deaths","loadBestDeaths","saveData","getData","isFirstTime","firstTime","saveDeaths","loadDeaths","saveLastLevel","level","getLastLevel","key","localStorage","setItem","getItem","Settings","text2Size","bestScore","buttonHeight","button2Width","components","createCredits","createPlayButton","createRestartButton","createShareButton","buttonMargin","destroyComponents","component","buttonPlay","buttonRestart","buttonCredits","focus","buttonShareRecord","renderDialogBox","renderTitle","renderScore","text2Width","isMobileMethod","Android","userAgent","match","BlackBerry","iOS","Opera","Windows","any","DirectionKeys","presedKeys","clear","addKey","isDirectionKey","includes","removeKey","k","hasPressedKeys","directionVec","direction","directionMap","n","consumeNextDirection","acDir1","acDir2","currentDir","nextDir","colors","Tile","type","getRotation","tileShape","getShape","positionCorrection","setupTile","minPosition","maxPosition","s","tileFactor","getGridSize","Hole","Camera","distance","viewAngle","initialRotation","maxRotation","baseDirection","initialTime","sawPlayer","currentTime","angle","currentViewAngle","arc","getVisionColor","seeAnyPoint","seePoint","getVector","halfAngle","cameraAngle","abs","toDegree","rad","Plant","randomAngle","Level","tiles","finishLevelItem","cameras","levels","playerInitialPosition","pause","loadLastLevel","hasMoreLevels","levelIndex","loadLevel","loadFirstLevel","loadNextLevel","currentLevel","decorations","cameraCount","flags","row","col","tile","camera","hole","plant","pauseGame","unPauseGame","cleanScreen","renderWatterColor","updateBubbles","toRemove","Set","b","add","has","c","unshift","clearRect","GameLogic","deathsScore","directionKeys","scoreDeaths","player","restartLevel","sideAnimation","play","status","movePlayer","animateComponents","checkCollisionWithRelevantElements","rot","t","scalar","prevPosition","checkCollisionWithMap","playerProjection","checkCollisionInProjections","gameOver","levelComplete","canPauseGame","obj","unpause","shapes1","shapes2","s1","s2","updateDeathScore","expectedRotation","velocity","minVelocity","acceleration","deceleration","Help","keysSize","keysTextSize","keysInfoTextSize","keyboardPosition","enemySize","enemyPosition","enemy","winPosition","winGame","closeHelpButton","renderKeyboard","renderEnemyInfo","renderWinGameInfo","renderText","renderKeyboardKey","renderKeyboardInfo","xPosition","yPosition","size","previousTextHeight","textList","split","SCORE_MARGIN","ScenePlay","createSettingsButton","createHelpButton","keyDown","bind","keyUp","initGame","buttonPause","currentGame","showSettings","buttonHelp","showHelp","isModalShow","playableElements","renderOrRemovePlayableElements","restartGame","modalWidth","modalHeight","modal","hideModal","pop","isElementVisible","ele","Navigator","scene","gameWidth","gameHeght","sceneClasses","Map","set","scenesInstances","currentScene","dimension","updateGameDimensions","navigate","get","intervalPerSecond","gameInstance","Game","addEventListener","resizeScreen","canvas","getElementById","registerEvents","getContext","navigatorRoot","loopStatus","registerKeyboardEvent","registerClickEvent","registerTouchEvent","eventType","option","clickEvent","touchEvent","keyboardEvent","innerWidth","innerHeight","calculatedWidth","calculatedHeight","emitPositionEvent","targetTouches","pageX","pageY","clientX","clientY","getBoundingClientRect","left","top","init","requestAnimationFrame","loop"],"sourceRoot":""}