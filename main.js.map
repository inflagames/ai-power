{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/global","webpack:///./game/utils/variables.js","webpack:///./game/utils/observable.js","webpack:///./game/components/shared/base-object.js","webpack:///./game/scenes/shared/scene.js","webpack:///./game/utils/math.js","webpack:///./game/components/shared/base-shape.js","webpack:///./game/components/player.js","webpack:///./game/components/score.js","webpack:///./game/components/button.js","webpack:///./game/components/modal.js","webpack:///./game/utils/data.js","webpack:///./game/utils/mobile-device.js","webpack:///./game/scenes/shared/direction-keys.js","webpack:///./game/scenes/shared/game.logic.js","webpack:///./game/components/tile.js","webpack:///./game/components/bubble.js","webpack:///./game/components/hole.js","webpack:///./game/components/camera.js","webpack:///./game/components/level.js","webpack:///./game/scenes/play.scene.js","webpack:///./game/navigator.js","webpack:///./game/game.js","webpack:///./main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// game dimensions\nexport const SCREEN_RATIO = 3 / 4;\nexport const SCREEN_WIDTH = 1024;\nexport const SCREEN_HEIGHT = SCREEN_WIDTH * SCREEN_RATIO;\nexport const GRID_SIZE = (SCREEN_WIDTH - 1) / 12;\n\n// game status\nexport const RUNNING = 1;\nexport const PAUSE = 2;\nexport const STOP = 3;\n\n// game events\nexport const EVENT_CLICK = \"0\";\nexport const EVENT_MOUSEDOWN = \"1\";\nexport const EVENT_MOUSEUP = \"2\";\nexport const EVENT_MOUSEMOVE = \"3\";\nexport const EVENT_MOUSEOUT = \"8\";\nexport const EVENT_MOUSELEAVE = \"9\";\nexport const EVENT_TOUCHDOWN = \"4\";\nexport const EVENT_TOUCHUP = \"5\";\nexport const EVENT_TOUCHMOVE = \"6\";\nexport const EVENT_TOUCHCANCEL = \"7\";\nexport const EVENT_RESIZE = \"8\";\nexport const EVENT_KEYPRESS = \"9\";\nexport const EVENT_KEYDOWN = \"10\";\nexport const EVENT_KEYUP = \"11\";\n\n// scene values\nexport const SCENE_GAME = 1;\n\nexport const FPS = 30;\n","export default class Observable {\n  constructor() {\n    /** @member {function[]} */\n    this.subscriptions = [];\n    this.open = true;\n  }\n\n  /**\n   * @param data {Object}\n   */\n  emit(data = {}) {\n    for (let i = 0; i < this.subscriptions.length; i++) {\n      this.callFunction(this.subscriptions[i], data);\n    }\n  }\n\n  async callFunction(func, data) {\n    func(data);\n  }\n\n  /**\n   * @param functions {function}\n   * @return {Observable}\n   */\n  pipe(...functions) {\n    let lastSteam = this;\n    for (const func of functions) {\n      const stream = new Observable();\n      lastSteam.on((data) => func(data, stream));\n      lastSteam = stream;\n    }\n    return lastSteam;\n  }\n\n  /**\n   * @param func {function}\n   */\n  unsub(func) {\n    this.subscriptions = this.subscriptions.filter((f) => f !== func);\n  }\n\n  /**\n   * @param func {function}\n   */\n  on(func) {\n    this.subscriptions.push(func);\n  }\n}\n\n/**\n * Filter the value of an Observable\n * @param stopper {Observable}\n */\nexport function takeUntil(stopper) {\n  let streamCancel = false;\n  const cancelFunction = () => {\n    streamCancel = true;\n    stopper.unsub(cancelFunction);\n  };\n  stopper.on(cancelFunction);\n  return (data, /** @param {Observable} */ observable) => {\n    if (streamCancel) {\n      observable.subscriptions = [];\n    }\n    observable.emit(data);\n  };\n}\n\n/**\n * Filter the value of an Observable\n * @param func {function}\n */\nexport function filterObservable(func) {\n  return (data, /** @param {Observable} */ observable) => {\n    if (func(data)) {\n      observable.emit(data);\n    }\n  };\n}\n\n/**\n * The value of the observable can be mapped and returned with transformations\n * @param func {function}\n */\nexport function mapObservable(func) {\n  return (data, /** @param {Observable} */ observable) => {\n    observable.emit(func(data));\n  };\n}\n","import Observable, {\n  filterObservable,\n  takeUntil\n} from \"../../utils/observable\";\nimport {\n  EVENT_KEYDOWN,\n  EVENT_KEYPRESS,\n  EVENT_KEYUP,\n  EVENT_MOUSELEAVE,\n  EVENT_MOUSEOUT,\n  EVENT_TOUCHCANCEL,\n  EVENT_TOUCHUP\n} from \"../../utils/variables\";\n\nexport default class BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    this.destroy = new Observable();\n    /** @member {Observable} */\n    this.eventEmitter = eventEmitter;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.lastMousePosition = null;\n    this.isMouseHover = false;\n\n    if (global['idCount'] === undefined) {\n      global['idCount'] = 0;\n    }\n    this.id = global['idCount']++;\n  }\n\n  set eventEmitter(value) {\n    this._eventEmitter = value ? value.pipe(takeUntil(this.destroy)) : value;\n  }\n\n  get eventEmitter() {\n    return this._eventEmitter;\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n  }\n\n  /**\n   * Event listener\n   * @param event {string}\n   * @param callback {function}\n   */\n  listenerEvent(event, callback) {\n    this.eventEmitter\n      .pipe(filterObservable((data) => data.event === event))\n      .on((data) => {\n        if (\n          (data &&\n            this.validateMouseEventPropagation(data.position, data.event)) ||\n          this.validateKeyboardEventPropagation(data.event)\n        ) {\n          callback(data);\n        }\n      });\n  }\n\n  validateKeyboardEventPropagation(event) {\n    return (\n      event === EVENT_KEYDOWN ||\n      event === EVENT_KEYUP ||\n      event === EVENT_KEYPRESS\n    );\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   * @param event {string}\n   * @return {boolean}\n   */\n  validateMouseEventPropagation(position, event) {\n    if (\n      event === EVENT_TOUCHUP ||\n      event === EVENT_MOUSEOUT ||\n      event === EVENT_TOUCHCANCEL ||\n      event === EVENT_MOUSELEAVE\n    ) {\n      return true;\n    }\n    if (\n      this.isPositionInside(this.lastMousePosition) &&\n      !this.isPositionInside(position)\n    ) {\n      this.eventEmitter.emit({ event: EVENT_MOUSEOUT });\n    }\n    this.lastMousePosition = position;\n    return (this.isMouseHover = this.isPositionInside(position));\n  }\n\n  isPositionInside(position) {\n    return (\n      position &&\n      position.x >= this.x &&\n      position.x <= this.x + this.width &&\n      position.y >= this.y &&\n      position.y <= this.y + this.height\n    );\n  }\n}\n","import BaseObject from \"../../components/shared/base-object\";\n\nexport default class Scene extends BaseObject {\n  /**\n   * @param navigator {Navigator}\n   * @param eventEmitter {Observable}\n   */\n  constructor(navigator, eventEmitter) {\n    super(eventEmitter);\n    this.navigator = navigator;\n    this.backgroundColor = \"#f00\";\n    /** @member {BaseObject[]} */\n    this.elements = [];\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    this.cleanCanvas(context);\n    // render scene elements\n    for (const element of this.elements) {\n      element.render(context);\n    }\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  cleanCanvas(context) {\n    context.rect(0, 0, this.width, this.height);\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   * @param event {string}\n   * @return {boolean}\n   */\n  validateEventPropagation(position, event) {\n    const validation = super.validateEventPropagation(position, event);\n    if (validation) {\n      for (const e of this.elements) {\n        if (e.validateEventPropagation(position, event)) {\n          return false;\n        }\n      }\n    }\n    return validation;\n  }\n}\n","import { SCREEN_WIDTH } from \"./variables\";\n\n/**\n * Vector to angle conversion\n * @param vector {{x: number, y: number}}\n * @returns {number}\n */\nexport function vectorToAngle(vector) {\n  return Math.atan2(vector.y, vector.x);\n}\n\n/**\n * Multiply a vector by a scalar\n * @param vector {{x: number, y: number}}\n * @param scalar {number}\n * @returns {{x: number, y: number}}\n */\nexport function multiplyVector(vector, scalar) {\n  return { x: vector.x * scalar, y: vector.y * scalar };\n}\n\n/**\n * Add two vectors\n * @param v1 {{x: number, y: number}}\n * @param v2 {{x: number, y: number}}\n * @returns {{x: number, y: number}}\n */\nexport function addVectors(v1, v2) {\n  return { x: v1.x + v2.x, y: v1.y + v2.y };\n}\n\n/**\n * @param maxValue {number}\n * @param currentValue {number}\n */\nexport function linearFunction(maxValue, currentValue) {\n  // toDo (gonzalezext)[20.04.24]: maybe it can be removed\n  return Math.min(currentValue / maxValue, 1);\n}\n\n/**\n * @param maxValue {number}\n * @param currentValue {number}\n */\nexport function logFunction(maxValue, currentValue) {\n  // toDo (gonzalezext)[20.04.24]: maybe it can be removed\n  const x = (9 * currentValue) / maxValue + 1;\n  return Math.min(Math.log10(x), 1);\n}\n\n/**\n * @param vector {{x: number, y: number}}\n * @param pivot {{x: number, y: number}}\n * @param phi {number}\n * @return {{x: number, y: number}}\n */\nexport function getPointByVectorRotation(vector, pivot, phi) {\n  const result = rotateVector(vector, phi);\n  return { x: pivot.x + result.x, y: pivot.y - result.y };\n}\n\n/**\n * @param vector {{x: number, y: number}}\n * @param phi {number}\n * @return {{x: number, y: number}}\n */\nexport function rotateVector(vector, phi) {\n  return {\n    x: vector.x * Math.cos(phi) - vector.y * Math.sin(phi),\n    y: vector.x * Math.sin(phi) + vector.y * Math.cos(phi)\n  };\n}\n\nexport function getVector(p1, p2) {\n  return { x: p2.x - p1.x, y: p2.y - p1.y };\n}\n\nexport function distance(p1, p2) {\n  // toDo guille 31.08.21: maybe it can be improved (check it)\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\n/**\n * @param value {number}\n * @return {number}\n */\nexport function scale(value) {\n  return (value * window.currentWidth) / SCREEN_WIDTH;\n}\n\nexport function unscale(value) {\n  return (value * SCREEN_WIDTH) / window.currentWidth;\n}\n\n/**\n * @param limit {number}\n * @param start {number}\n * @returns {number}\n */\nexport function randomNumber(limit, start = 0) {\n  return Math.floor(Math.random() * limit) + start;\n}\n\n/**\n * @param shape1 {{x: number, y: number}[]}\n * @param shape2 {{x: number, y: number}[]}\n * @return {boolean}\n */\nexport function detectCollision(shape1, shape2) {\n  if (shape1.length < 3 || shape2.length < 3) {\n    return false;\n  }\n  const axis = [...extractAxis(shape1), ...extractAxis(shape2)];\n\n  for (const axi of axis) {\n    const p1 = shapeProjection(shape1, axi);\n    const p2 = shapeProjection(shape2, axi);\n    if (\n      !(\n        (p1.min > p2.min && p1.min < p2.max) ||\n        (p1.max > p2.min && p1.max < p2.max) ||\n        (p2.min > p1.min && p2.min < p1.max) ||\n        (p2.max > p1.min && p2.max < p1.max) ||\n        (p1.min === p2.min && p1.max === p2.max)\n      )\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Normalize a vector\n * @param v {{x: number, y: number}}\n * @returns {{x: number, y: number}}\n */\nexport function normalizeVector(v) {\n  if (v.x === 0 && v.y === 0) {\n    return { x: 0, y: 0 };\n  }\n  const length = Math.sqrt(v.x * v.x + v.y * v.y);\n  return { x: v.x / length, y: v.y / length };\n}\n\n/**\n * Linear interpolation between two vectors\n * @param v1 {{x: number, y: number}}\n * @param v2 {{x: number, y: number}}\n * @param t {number}\n * @returns {{x: number, y: number}}\n */\nexport function lerpVector(v1, v2, t) {\n  return {\n    x: v1.x + (v2.x - v1.x) * t,\n    y: v1.y + (v2.y - v1.y) * t\n  };\n}\n\n/**\n * @param shape {{x: number, y: number}[]}\n * @return {{x: number, y: number}[]}\n */\nfunction extractAxis(shape) {\n  if (shape.length <= 1) {\n    return [];\n  }\n  const axis = [];\n  for (let i = 1; i < shape.length; i++) {\n    axis.push({\n      x: shape[i].x - shape[i - 1].x,\n      y: shape[i - 1].y - shape[i].y\n    });\n  }\n  axis.push({\n    x: shape[0].x - shape[shape.length - 1].x,\n    y: shape[shape.length - 1].y - shape[0].y\n  });\n  return axis;\n}\n\n/**\n * @param shape {{x: number, y: number}[]}\n * @param v {{x: number, y: number}}\n * @return {{max: number, min: number}}\n */\nfunction shapeProjection(shape, v) {\n  let min = projection(v, shape[0]);\n  let max = min;\n  for (let i = 1; i < shape.length; i++) {\n    const p = projection(v, shape[i]);\n    min = Math.min(min, p);\n    max = Math.max(max, p);\n  }\n  return { min, max };\n}\n\n/**\n * @param v {{x: number, y: number}}\n * @param u {{x: number, y: number}}\n * @return {number}\n */\nfunction projection(v, u) {\n  return (u.x * v.x + u.y * v.y) / (v.x * v.x + v.y * v.y);\n}\n","import BaseObject from \"./base-object\";\nimport { getPointByVectorRotation, scale, vectorToAngle } from \"../../utils/math\";\n\nexport default class BaseShape extends BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = \"#00f\";\n    this.rotation = 0;\n    this.directionVector = { x: 1, y: 0 };\n    this.scaleShape = 3.3;\n    this.brakedShape = null;\n  }\n\n  updateCoordinates(x, y) {\n    this.x = x || this.x;\n    this.y = y || this.y;\n  }\n\n  render(context) {\n    // ship painted\n    const shapes = this.getProjection();\n\n    for (const shape of shapes) {\n      const points = shape.points;\n      if (points.length === 0) {\n        continue;\n      }\n      context.beginPath();\n      context.moveTo(scale(points[0].x), scale(points[0].y));\n      for (let i = 1; i < points.length; i++) {\n        context.lineTo(scale(points[i].x), scale(points[i].y));\n      }\n      context.closePath();\n      context.fillStyle = shape.background;\n      if (Boolean(shape.stroke)) {\n        context.stroke();\n        context.strokeStyle = shape.stroke;\n        context.lineWidth = shape.strokeWidth * 5;\n      }\n      context.fill();\n    }\n  }\n\n  animate() {\n    this.moveBrakedPiece();\n  }\n\n  brakeShapes() {\n    const shapes = this.shipShape().shapes;\n\n    this.brakedShape = { shapes: [] };\n\n    // brake in triangles\n    for (const shape of shapes) {\n      this.brakedShape = {\n        shapes: [...this.brakedShape.shapes, ...this.brakeShape(shape)]\n      };\n    }\n\n    // calculate direction vector\n    for (const shape of this.brakedShape.shapes) {\n      const cp = this.shapeCenter(shape.points);\n      const d = Math.random() + 0.5;\n      const factor = d / Math.sqrt(Math.pow(cp.x, 2) + Math.pow(cp.y, 2));\n      shape.vector = { x: cp.x * factor, y: cp.y * factor };\n    }\n  }\n\n  /**\n   * @param shape {{points: {x: number, y: number}[], background: string}}\n   * @return {{x: number, y: number}[]}\n   */\n  brakeShape(shape) {\n    if (shape.points.length === 0) {\n      return shape.points;\n    }\n    const { min, max } = this.coverBox(shape.points);\n\n    const fixedSize = 2;\n    const size = 2.5;\n    const newShapes = [];\n    let count = Math.ceil(((max.x - min.x) * (max.y - min.y)) / fixedSize);\n    count = Math.min(count, 150);\n\n    for (let i = 0; i < count; i++) {\n      const pos = {\n        x: (max.x - min.x) * Math.random() + min.x,\n        y: (max.y - min.y) * Math.random() + min.y\n      };\n      newShapes.push({\n        points: new Array(3).fill(null).map(() => ({\n          x: pos.x + size * Math.random(),\n          y: pos.y + size * Math.random()\n        })),\n        background: shape.background\n      });\n    }\n\n    return newShapes;\n  }\n\n  /**\n   * @param points {{x: number, y: number}[]}\n   */\n  shapeCenter(points) {\n    const { min, max } = this.coverBox(points);\n    return { x: (max.x + min.x) / 2, y: (max.y + min.y) / 2 };\n  }\n\n  coverBox(points) {\n    const min = { x: points[0].x, y: points[0].y };\n    const max = { ...min };\n    for (let i = 1; i < points.length; i++) {\n      min.x = Math.min(min.x, points[i].x);\n      min.y = Math.min(min.y, points[i].y);\n      max.x = Math.max(max.x, points[i].x);\n      max.y = Math.max(max.y, points[i].y);\n    }\n    return { min, max };\n  }\n\n  moveBrakedPiece() {\n    if (this.brakedShape) {\n      for (const shape of this.brakedShape.shapes) {\n        shape.points = shape.points.map((p) => ({\n          x: p.x + shape.vector.x,\n          y: p.y + shape.vector.y\n        }));\n        shape.background = this.reduceOpacity(shape.background, 30);\n      }\n    }\n  }\n\n  /**\n   * @param color {string}\n   * @param extract {number}\n   * @returns {string}\n   */\n  reduceOpacity(color, extract) {\n    // toDo (gonzalezext)[21.04.24]: remove this method\n    let alpha = this.getOpacity(color);\n    alpha = Math.min(255, Math.max(alpha - extract, 0));\n    alpha = alpha.toString(16);\n    return `#${color.substr(1, 6)}${(alpha.length < 2 ? \"0\" : \"\") + alpha}`;\n  }\n\n  getColorWithOpacity(color, alphaFactor) {\n    let alpha = Math.min(255, Math.max(Math.floor(255 * alphaFactor), 0));\n    alpha = alpha.toString(16);\n    return `#${color.substr(1, 6)}${(alpha.length < 2 ? \"0\" : \"\") + alpha}`;\n  }\n\n  /**\n   * @param color {string}\n   * @return {number}\n   */\n  getOpacity(color) {\n    return color.length > 7 ? parseInt(color.substr(7, 2), 16) : 255;\n  }\n\n  /**\n   * @param shapeId {string}\n   * @return {{points: {x: number, y: number}[], background: string, stroke: string, strokeWidth: number, smoke: boolean}[]}\n   */\n  getProjection(shapeId = undefined) {\n    const rotation = vectorToAngle(this.directionVector) + Math.PI / 2;\n\n    const shapes = this.currentShape().shapes;\n    const pivot = this.getPosition();\n\n    const projectedShape = [];\n\n    for (const shape of shapes) {\n      if (shapeId && shape.id !== shapeId) {\n        continue;\n      }\n\n      const points = shape.points.map((p) => ({\n        x: p.x * this.scaleShape,\n        y: p.y * this.scaleShape\n      }));\n      for (let i = 0; i < points.length; i++) {\n        points[i] = getPointByVectorRotation(points[i], pivot, rotation);\n      }\n      projectedShape.push({ ...shape, points });\n    }\n    return projectedShape;\n  }\n\n  /**\n   * @returns {{x: number, y: number}}\n   */\n  getPosition() {\n    return { x: this.x, y: this.y };\n  }\n\n  /**\n   * @returns {{shapes: {background: string, id: string, points: {x: number, y: number}[]}[]}}\n   */\n  currentShape() {\n    return {\n      shapes: []\n    };\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport shape from \"../shapes/character.json\";\n\n// shape.shapes = shape.shapes.filter((shape) => shape.id.startsWith(\"hand\") || shape.id.startsWith(\"foot\"));\n\nexport const ANIMATE_WALK = 1;\n\nexport default class Player extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    super(eventEmitter, x, y, width, height);\n    /** @member {number} */\n    this.rotation = Math.PI / 2;\n    this.directionVector = { x: 0, y: 1 };\n\n    const scaleConst = 0.015578125;\n    this.scaleShape = this.width * scaleConst;\n\n    this.shape = { ...shape };\n\n    this.time = new Date().getTime();\n\n    this.animation = 0;\n    this.animationIsOn = false;\n\n    this.updateCoordinates();\n  }\n\n  /**\n   * Update the coordinates of the player\n   * @param x {number}\n   * @param y {number}\n   */\n  updateCoordinates({ x, y } = {}) {\n    this.x = x || this.x;\n    this.y = y || this.y;\n  }\n\n  /**\n   * Update the direction vector of the player\n   * @param v\n   */\n  updateDirectionVector(v) {\n    this.directionVector = v;\n  }\n\n  animate() {\n    if ((this.animation & ANIMATE_WALK) !== 0) {\n      if (!this.animationIsOn) {\n        this.time = new Date().getTime();\n      }\n      this.animationIsOn = true;\n      this.animateWalk();\n    } else if (this.animationIsOn) {\n      this.shape = { ...shape };\n    }\n  }\n\n  animateWalk() {\n    const maxMovement = -20;\n    const footMovement = this.stepAnimationFunction() * maxMovement;\n    const handMovement = this.handAnimationFunction();\n\n    let minPoint = { x: 1000, y: 1000 };\n    let maxPoint = { x: -1000, y: -1000 };\n    // toDo (gonzalezext)[23.04.24]: this can be calculated at the begining\n    this.shape.shapes.forEach((shape) => shape.points.forEach((point) => {\n      minPoint.y = Math.min(minPoint.y, point.y);\n      minPoint.x = Math.min(minPoint.x, point.x);\n      maxPoint.y = Math.max(maxPoint.y, point.y);\n      maxPoint.x = Math.max(maxPoint.x, point.x);\n    }));\n    const middleHandPivot = -2;\n\n    // toDo (gonzalezext)[23.04.24]: this can be optimized by using a map\n    this.shape.shapes = shape.shapes.map((shape) => {\n      // foot animation\n      if (shape.id.startsWith(\"foot\")) {\n        const footMov = shape.id.endsWith(\"-l\") ? footMovement : -footMovement;\n        return {\n          ...shape,\n          points: shape.points.map((point) => {\n            return { ...point, y: point.y + footMov };\n          })\n        };\n      }\n      // hand animation\n      if (shape.id.startsWith(\"hand\")) {\n        const dir = shape.id.endsWith(\"-l\") ? 1 : -1;\n        return {\n          ...shape,\n          points: shape.points.map((point) => {\n            return {\n              ...point,\n              y: (point.y - middleHandPivot) * handMovement * dir + middleHandPivot\n            };\n          })\n        };\n      }\n      return { ...shape };\n    });\n  }\n\n  stepAnimationFunction() {\n    const time = (new Date().getTime() - this.time) / 500;\n    return Math.sin(time * Math.PI);\n  }\n\n  handAnimationFunction() {\n    const time = (new Date().getTime() - this.time) / 500;\n    return Math.cos(time * Math.PI);\n  }\n\n  currentShape() {\n    return this.brakedShape || this.shape;\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { scale } from \"../utils/math\";\n\nexport default class Score extends BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number} corner coordinates\n   * @param y {number} corner coordinates\n   */\n  constructor(eventEmitter, x, y) {\n    super(eventEmitter, x, y);\n    this.level = 0;\n    this.textSize = 30;\n    this.backgroundColor = \"#000\";\n    this.textColor = \"#fff\";\n\n    this.lastTime = 0;\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    context.font = `${scale(this.textSize)}px Arial`;\n    const text = `LEVEL ${this.level}`;\n    const metrics = context.measureText(text);\n    const textWidth = metrics.width;\n    const textHeight =\n      metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n    const padding = 5;\n\n    context.beginPath();\n    context.rect(\n      scale(this.x - textWidth - padding * 2),\n      scale(this.y),\n      scale(textWidth + padding * 2),\n      scale(textHeight + padding * 2)\n    );\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n\n    context.beginPath();\n    context.font = `${scale(this.textSize)}px Arial`;\n    context.fillStyle = this.textColor;\n    context.fillText(\n      text,\n      scale(this.x - textWidth - padding),\n      scale(this.y + textHeight + padding)\n    );\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { scale, unscale } from \"../utils/math\";\nimport { EVENT_MOUSEMOVE, EVENT_MOUSEOUT } from \"../utils/variables\";\n\nexport default class Button extends BaseObject {\n  /**\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param text {string}\n   * @param eventEmitter {Observable}\n   */\n  constructor(eventEmitter, x, y, width, height, text) {\n    super(eventEmitter, x, y, width, height);\n    this.text = text;\n    this.textSize = 10;\n    this.backgroundColor = \"#000\";\n    this.textColor = \"#fff\";\n    this.textColorHover = \"#9a9a9a\";\n\n    this.listenerEvent(EVENT_MOUSEMOVE, (data) => {\n      if (this.isPositionInside(data.position)) {\n        document.body.style.cursor = \"pointer\";\n      }\n    });\n    this.listenerEvent(EVENT_MOUSEOUT, (data) => {\n      document.body.style.cursor = \"default\";\n    });\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    context.beginPath();\n    context.rect(\n      scale(this.x),\n      scale(this.y),\n      scale(this.width),\n      scale(this.height),\n    );\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n\n    context.beginPath();\n    context.font = `${scale(this.textSize)}px Arial`;\n    const metrics = context.measureText(this.text);\n    const textWidth = unscale(metrics.width);\n    const textHeight = unscale(\n      metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent,\n    );\n    context.fillStyle = this.isMouseHover\n      ? this.textColorHover\n      : this.textColor;\n    // context.text;\n    context.fillText(\n      this.text,\n      scale(this.x + this.width / 2 - textWidth / 2),\n      scale(this.y + this.height / 2 + textHeight / 2),\n    );\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { EVENT_CLICK, SCREEN_HEIGHT, SCREEN_WIDTH } from \"../utils/variables\";\nimport { scale, unscale } from \"../utils/math\";\nimport Button from \"./button\";\n\nexport default class Modal extends BaseObject {\n  /**\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param eventEmitter {Observable}\n   */\n  constructor(eventEmitter, x, y, width, height) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = \"#fff\";\n    this.textSize = 90;\n    this.text2Size = 30;\n    this.text = \"RECORD\";\n    this.score = 1000;\n\n    const buttonHeight = 30;\n    const button1Width = 40;\n    const button2Width = 120;\n    const buttonMargin = 15;\n\n    this.createCredits(\n      this.x + buttonMargin,\n      this.y,\n      button1Width,\n      buttonHeight,\n    );\n    this.createPlayButton(\n      this.x + (this.width - button1Width - button2Width - buttonMargin) / 2,\n      this.y + this.height - buttonHeight - buttonMargin,\n      button1Width,\n      buttonHeight,\n    );\n    this.createShareButton(\n      this.x +\n        (this.width - button1Width - button2Width - buttonMargin) / 2 +\n        button1Width +\n        buttonMargin,\n      this.y + this.height - buttonHeight - buttonMargin,\n      button2Width,\n      buttonHeight,\n    );\n  }\n\n  createPlayButton(x, y, w, h) {\n    this.buttonPlay = new Button(this.eventEmitter, x, y, w, h, \"PLAY\");\n  }\n\n  createCredits(x, y, w, h) {\n    this.buttonCredits = new Button(this.eventEmitter, x, y, w, h, \"@ggjnez92\");\n    this.buttonCredits.backgroundColor = \"#00000000\";\n    this.buttonCredits.textColor = \"#000\";\n    this.buttonCredits.textColorHover = \"#0048ff\";\n    this.buttonCredits.listenerEvent(EVENT_CLICK, () =>\n      window.open(\"https://twitter.com/ggjnez92\", \"_blank\").focus(),\n    );\n  }\n\n  createShareButton(x, y, w, h) {\n    this.buttonShareRecord = new Button(\n      this.eventEmitter,\n      x,\n      y,\n      w,\n      h,\n      \"SHARE ON TWITTER\",\n    );\n    this.buttonShareRecord.listenerEvent(EVENT_CLICK, () => {\n      const message = `I%20just%20make%20a%20new%20record%20of%20${this.score}%20points%20in%20the%20%23azetz%20%23game%20developed%20for%20the%20%40js13kGames%20competition.%0A%0A%23js13k%20%23gamedev%0A%0AIf%20you%20want%20to%20check%20it%20out%2C%20here%20is%20the%20link%20to%20the%20%23github%20repository%0Ahttps%3A%2F%2Fgithub.com%2Finflagames%2Fazetz`;\n      const url = `https://twitter.com/intent/tweet?text=${message}`;\n      window.open(url, \"_blank\").focus();\n    });\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    context.beginPath();\n    context.rect(0, 0, scale(SCREEN_WIDTH), scale(SCREEN_HEIGHT));\n    context.fillStyle = \"rgba(0,0,0,0.82)\";\n    context.fill();\n\n    context.beginPath();\n    context.rect(\n      scale(this.x),\n      scale(this.y),\n      scale(this.width),\n      scale(this.height),\n    );\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n\n    this.buttonPlay.render(context);\n    this.buttonCredits.render(context);\n    this.buttonShareRecord.render(context);\n\n    this.renderScore(context);\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  renderScore(context) {\n    // toDo guille 01.09.21: refactor this code\n    context.beginPath();\n    context.font = `${scale(this.textSize)}px Arial`;\n    const metrics = context.measureText(this.score + \"\");\n    const textWidth = unscale(metrics.width);\n    const textHeight = unscale(\n      metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent,\n    );\n    context.fillStyle = \"#000\";\n    context.fillText(\n      this.score + \"\",\n      scale(this.x + this.width / 2 - textWidth / 2),\n      scale(this.y + this.height / 2 + textHeight / 2),\n    );\n\n    context.beginPath();\n    context.font = `${scale(this.text2Size)}px Arial`;\n    const metrics2 = context.measureText(this.text);\n    const text2Width = unscale(metrics2.width);\n    const text2Height = unscale(\n      metrics2.actualBoundingBoxAscent + metrics2.actualBoundingBoxDescent,\n    );\n    context.fillStyle = \"#000\";\n    context.fillText(\n      this.text,\n      scale(this.x + this.width / 2 - text2Width / 2),\n      scale(\n        this.y +\n          this.height / 2 +\n          textHeight / 2 -\n          textHeight -\n          text2Height / 2,\n      ),\n    );\n  }\n}\n","const APPLICATION_PREFIX = \"azetzv1\";\nconst SCORE_KEY = `${APPLICATION_PREFIX}_game_score`;\n\n/** @type Data */\nlet data = null;\n\nexport default class Data {\n  static getInstance() {\n    if (!data) {\n      data = new Data();\n    }\n    return data;\n  }\n\n  /**\n   * @param score {number}\n   */\n  saveScore(score) {\n    localStorage.setItem(SCORE_KEY, score + \"\");\n  }\n\n  getScore() {\n    const score = localStorage.getItem(SCORE_KEY);\n    return score ? +score : 0;\n  }\n}\n","export const isMobileMethod = {\n  Android: function () {\n    return navigator.userAgent.match(/Android/i);\n  },\n  BlackBerry: function () {\n    return navigator.userAgent.match(/BlackBerry/i);\n  },\n  iOS: function () {\n    return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n  },\n  Opera: function () {\n    return navigator.userAgent.match(/Opera Mini/i);\n  },\n  Windows: function () {\n    return (\n      navigator.userAgent.match(/IEMobile/i) ||\n      navigator.userAgent.match(/WPDesktop/i)\n    );\n  },\n  any: function () {\n    return (\n      isMobileMethod.Android() ||\n      isMobileMethod.BlackBerry() ||\n      isMobileMethod.iOS() ||\n      isMobileMethod.Opera() ||\n      isMobileMethod.Windows()\n    );\n  },\n};\n","import { normalizeVector } from \"../../utils/math\";\n\nexport const UP_DIRECTION = 1;\nexport const DOWN_DIRECTION = 2;\nexport const LEFT_DIRECTION = 4;\nexport const RIGHT_DIRECTION = 8;\n\nexport default class DirectionKeys {\n  constructor() {\n    /** @member {string[]} */\n    this.presedKeys = [];\n  }\n\n  clear() {\n    this.presedKeys = [];\n  }\n\n  /**\n   * @param key {string}\n   */\n  addKey(key) {\n    if (this.isDirectionKey(key) && !this.presedKeys.includes(key)) {\n      this.presedKeys.push(key);\n    }\n  }\n\n  /**\n   * @param key {string}\n   */\n  removeKey(key) {\n    this.presedKeys = this.presedKeys.filter((k) => k !== key);\n  }\n\n  /**\n   * @param key {string}\n   * @return {boolean}\n   */\n  isDirectionKey(key) {\n    return key === \"a\" || key === \"w\" || key === \"s\" || key === \"d\";\n  }\n\n  /**\n   * Current state of the keys\n   * @returns {boolean}\n   */\n  hasPressedKeys() {\n    return this.presedKeys.length > 0;\n  }\n\n  /**\n   * @returns {{x: number, y: number}}\n   */\n  directionVector() {\n    let directionVec = { x: 0, y: 0 };\n\n    /** @type {number} */\n    const direction = this.direction();\n\n    if ((direction & UP_DIRECTION) !== 0) {\n      directionVec.y = -1;\n    } else if ((direction & DOWN_DIRECTION) !== 0) {\n      directionVec.y = 1;\n    }\n\n    if ((direction & LEFT_DIRECTION) !== 0) {\n      directionVec.x = -1;\n    } else if ((direction & RIGHT_DIRECTION) !== 0) {\n      directionVec.x = 1;\n    }\n\n    // console.log(normalizeVector(directionVec));\n\n    return normalizeVector(directionVec);\n  }\n\n  direction() {\n    let dir = 0;\n\n    if (this.presedKeys.length > 0) {\n      dir = this.directionMap(this.presedKeys[0]);\n      let position = 1;\n      while (position < this.presedKeys.length) {\n        let n = this.consumeNextDirection(\n          UP_DIRECTION,\n          LEFT_DIRECTION,\n          RIGHT_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n        n |= this.consumeNextDirection(\n          DOWN_DIRECTION,\n          LEFT_DIRECTION,\n          RIGHT_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n        n |= this.consumeNextDirection(\n          LEFT_DIRECTION,\n          UP_DIRECTION,\n          DOWN_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n        n |= this.consumeNextDirection(\n          RIGHT_DIRECTION,\n          UP_DIRECTION,\n          DOWN_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n\n        if (n) {\n          dir |= n;\n          break;\n        }\n\n        position++;\n      }\n    }\n\n    return dir;\n  }\n\n  consumeNextDirection(dir, acDir1, acDir2, currentDir, nextDir) {\n    if (dir === currentDir && (nextDir === acDir1 || nextDir === acDir2)) {\n      return nextDir;\n    }\n    return 0;\n  }\n\n  /**\n   * @param key {string}\n   * @returns {number}\n   */\n  directionMap(key) {\n    if (key === \"w\") {\n      return UP_DIRECTION;\n    }\n    if (key === \"s\") {\n      return DOWN_DIRECTION;\n    }\n    if (key === \"a\") {\n      return LEFT_DIRECTION;\n    }\n    if (key === \"d\") {\n      return RIGHT_DIRECTION;\n    }\n    return 0;\n  }\n}\n","import { addVectors, detectCollision, lerpVector, multiplyVector, normalizeVector } from \"../../utils/math\";\nimport DirectionKeys from \"./direction-keys\";\nimport { ANIMATE_WALK } from \"../../components/player\";\n\nexport const GAME_STOP = \"3\";\nexport const GAME_OVER = \"5\";\nexport const GAME_PAUSE = \"7\";\n\nexport default class GameLogic {\n  /**\n   *\n   * @param playerPosition {{x: number, y: number}}\n   */\n  constructor(playerPosition) {\n    /** @member {DirectionKeys} */\n    this.directionKeys = new DirectionKeys();\n\n    /** @member {Level} */\n    this.level = null;\n\n    this.player = {\n      position: playerPosition,\n      rotation: Math.PI / 2, // todo: eliminate this property\n      directionVector: { x: 0, y: 1 },\n      expectedRotation: 0,\n      velocity: 0,\n      minVelocity: 10,\n      acceleration: 20,\n      deceleration: -1.5,\n      status: [GAME_STOP],\n      component: undefined\n    };\n    this.enemies = [];\n    this.objects = [];\n\n    this.configs = {};\n  }\n\n  destroy() {\n    this.enemies.forEach((enemy) => enemy.component.destroy.emit());\n    this.objects.forEach((obj) => obj.component.destroy.emit());\n    this.player.component.destroy.emit();\n  }\n\n  /**\n   * run an iteration of the game logic\n   */\n  play() {\n    this.movePlayer();\n    this.animateComponents();\n  }\n\n  /**\n   * Move the player base on the direction keys\n   */\n  movePlayer() {\n    const VELOCITY = 10;\n\n    if (this.directionKeys.hasPressedKeys()) {\n      const rot = lerpVector(this.player.directionVector, this.directionKeys.directionVector(), 0.95);\n      this.player.directionVector = multiplyVector(normalizeVector(rot), VELOCITY);\n\n      // check collision\n      const prevPosition = this.player.position;\n      this.player.position = addVectors(this.player.directionVector, this.player.position);\n      if (this.checkCollisionWithMap()) {\n        this.player.position = prevPosition;\n      }\n\n      this.player.component.animation |= ANIMATE_WALK;\n    } else {\n      this.player.component.animation = 0;\n    }\n\n    this.player.component.updateCoordinates(this.player.position);\n    this.player.component.updateDirectionVector({ ...this.player.directionVector, y: -this.player.directionVector.y });\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  checkCollisionWithMap() {\n    // toDo (gonzalezext)[19.04.24]: this need to be optimized (check only with the nearest components)\n    for (const component of this.level.tiles) {\n      if (this.checkCollisionInProjections(this.player.component.getProjection(), component.getProjection())) {\n        return true;\n      }\n    }\n\n    // validate end of the level\n    for (const component of this.level.finishLevelItem) {\n      if (this.checkCollisionInProjections(this.player.component.getProjection(), component.getProjection(\"center\"))) {\n        this.levelComplete();\n        return false;\n      }\n    }\n\n    return false;\n  }\n\n  canPauseGame() {\n    // toDo (gonzalezext)[18.04.24]:\n    return true;\n  }\n\n  animateComponents() {\n    // toDo (gonzalezext)[18.04.24]:\n    // animation in general\n    this.player.component.animate();\n  }\n\n  pause() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  unpause() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  updateSpaces() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  updateScore() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  /**\n   * @return {number}\n   */\n  getScore() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  checkCollision() {\n    // toDo (gonzalezext)[18.04.24]:\n  }\n\n  /**\n   * @param shapes1 {{points: {x: number, y: number}[], background: string}[]}\n   * @param shapes2 {{points: {x: number, y: number}[], background: string}[]}\n   * @return {boolean}\n   */\n  checkCollisionInProjections(shapes1, shapes2) {\n    for (const s1 of shapes1) {\n      for (const s2 of shapes2) {\n        if (detectCollision(s1.points, s2.points)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  levelComplete() {\n    // toDo (gonzalezext)[18.04.24]:\n    console.log(\"Level complete\");\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport shapeTile1 from \"../shapes/tile1.json\";\nimport shapeTile2 from \"../shapes/tile2.json\";\nimport floorTile from \"../shapes/floor.tile.json\";\nimport { addVectors, randomNumber } from \"../utils/math\";\n\nexport const TILE_1X1 = 1;\nexport const TILE_2X2 = 2;\nexport const TILE_FLOOR = 3;\n\nconst colors = [\"#b85c54\", \"#c56057\", \"#be7063\", \"#c55f56\"];\n\nexport default class Tile extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param type {number}\n   * @param gridSize {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, type, gridSize) {\n    super(eventEmitter, x, y, type * gridSize, type * gridSize);\n\n    this.directionVector = this.getRotation();\n\n    this.gridSize = gridSize;\n    this.type = type;\n    this.tileShape = { ...this.getShape(type) };\n    this.positionCorrection = { x: 0, y: 0 };\n\n    this.setupTile();\n  }\n\n  getShape(type) {\n    switch (type) {\n    case TILE_1X1:\n      return shapeTile2;\n    case TILE_2X2:\n      return shapeTile1;\n    case TILE_FLOOR:\n    default:\n      return floorTile;\n    }\n  }\n\n  getRotation() {\n    const currentDirection = randomNumber(4);\n    switch (currentDirection) {\n    case 0:\n      return { x: 1, y: 0 };\n    case 1:\n      return { x: 0, y: 1 };\n    case 2:\n      return { x: -1, y: 0 };\n    case 3:\n      return { x: 0, y: -1 };\n    }\n  }\n\n  /**\n   * Setting up the tile shape. This method calculate the correction needed to center the tile in the grid\n   */\n  setupTile() {\n    let minPosition = { ...this.tileShape.shapes[0].points[0] };\n    let maxPosition = { ...this.tileShape.shapes[0].points[0] };\n    for (let s of this.tileShape.shapes) {\n      for (let p of s.points) {\n        if (p.x < minPosition.x) {\n          minPosition.x = p.x;\n        }\n        if (p.y < minPosition.y) {\n          minPosition.y = p.y;\n        }\n        if (p.x > maxPosition.x) {\n          maxPosition.x = p.x;\n        }\n        if (p.y > maxPosition.y) {\n          maxPosition.y = p.y;\n        }\n      }\n    }\n\n    const tileFactor = {\n      x: (this.gridSize * this.getGridSize()) / ((maxPosition.x - minPosition.x) * this.scaleShape),\n      y: (this.gridSize * this.getGridSize()) / ((maxPosition.y - minPosition.y) * this.scaleShape)\n    };\n\n    this.positionCorrection = {\n      x: (this.gridSize * this.getGridSize()) * 0.5,\n      y: (this.gridSize * this.getGridSize()) * 0.5\n    };\n\n    // make size correction base on the grid size\n    this.tileShape.shapes = this.tileShape.shapes.map(s => ({\n      ...s,\n      background: colors[randomNumber(colors.length)],\n      points: s.points.map(p => ({\n        x: p.x * tileFactor.x,\n        y: p.y * tileFactor.y\n      }))\n    }));\n  }\n\n  getGridSize() {\n    switch (this.type) {\n    case TILE_1X1:\n    case TILE_FLOOR:\n      return 1;\n    case TILE_2X2:\n      return 2;\n    }\n  }\n\n  /**\n   * Calculate the tile position correction\n   * @returns {{x: number, y: number}}\n   */\n  getPosition() {\n    return addVectors(super.getPosition(), this.positionCorrection);\n  }\n\n  currentShape() {\n    return this.tileShape;\n  }\n\n  animate() {\n    // toDo (gonzalezext)[19.04.24]: maybe we can animate the leafs\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\n\nconst MAX_LIFE_TIME = 20;\n\nexport default class Bubble extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width\n   * @param height\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    super(eventEmitter, x, y, width, height);\n\n    this.scaleShape = 0;\n    this.lifeTime = 0;\n  }\n\n  render(context) {\n    this.calculateScale();\n    this.lifeTime++;\n\n    context.beginPath();\n    context.fillStyle = this.getColorWithOpacity(\"#6c8d8eff\", this.showAndHideFunction(this.getTimeFactor()));\n    this.scaleShape = this.growBubbleFunction(this.getTimeFactor());\n    const w = this.width * this.scaleShape;\n    const h = this.height * this.scaleShape;\n    context.ellipse(this.x, this.y, w, h, 0, 0, Math.PI * 2);\n    context.fill();\n  }\n\n  calculateScale() {\n    this.scaleShape = Math.sin(this.y / 10);\n  }\n\n  getTimeFactor() {\n    return Math.min(this.lifeTime / MAX_LIFE_TIME, 1);\n  }\n\n  showAndHideFunction(time) {\n    // toDo (gonzalezext)[21.04.24]: check if this function can be optimized\n    return Math.sin(time * Math.PI) / 1.5;\n  }\n\n  growBubbleFunction(time) {\n    // todo (gonzalezext)[21.04.24]: check if this function can be optimized\n    return Math.log(time + 1) * 1.4426950408889634;\n  }\n\n  bubbleDead() {\n    return this.lifeTime > MAX_LIFE_TIME;\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport hole from \"../shapes/hole.json\";\n\nexport default class Hole extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0) {\n    super(eventEmitter, x, y, 0, 0);\n\n    this.directionVector = { x: 0, y: 1 };\n    this.shape = { ...hole };\n    this.scaleShape = 1.7;\n  }\n\n  getPosition() {\n    return { x: this.x - 8, y: this.y + 10 };\n  }\n\n  currentShape() {\n    return this.shape;\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport cameraShape from \"../shapes/camera.json\";\n\nexport default class Camera extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param gridSize\n   */\n  constructor(eventEmitter, x = 0, y = 0, gridSize) {\n    super(eventEmitter, x, y, gridSize, gridSize);\n\n    this.directionVector = { x: 0, y: 1 };\n    this.shape = { ...cameraShape };\n\n    const minPoint = { ...this.shape.shapes[0].points[0] };\n    const maxPoint = { ...this.shape.shapes[0].points[0] };\n    this.shape.shapes.forEach((shape) => shape.points.forEach((point) => {\n      console.log(point);\n      minPoint.x = Math.min(minPoint.x, point.x);\n      minPoint.y = Math.min(minPoint.y, point.y);\n      maxPoint.x = Math.max(maxPoint.x, point.x);\n      maxPoint.y = Math.max(maxPoint.y, point.y);\n    }));\n\n    console.log(minPoint, maxPoint);\n\n    this.scaleShape = gridSize / Math.max(maxPoint.x - minPoint.x, maxPoint.y - minPoint.y);\n    console.log(Math.max(maxPoint.x - minPoint.x, maxPoint.y - minPoint.y));\n    console.log(gridSize);\n    console.log(this.scaleShape);\n  }\n\n  getPosition() {\n    return { x: this.x, y: this.y };\n  }\n\n  currentShape() {\n    return this.shape;\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { randomNumber, scale } from \"../utils/math\";\nimport { SCREEN_HEIGHT, SCREEN_WIDTH, GRID_SIZE } from \"../utils/variables\";\nimport Tile, { TILE_1X1, TILE_2X2, TILE_FLOOR } from \"./tile\";\nimport level1 from \"./levels/level.001.json\";\nimport level2 from \"./levels/level.002.json\";\nimport Bubble from \"./bubble\";\nimport Hole from \"./hole\";\nimport Camera from \"./camera\";\n\nconst ROW_TILE = 1; //         0001\nconst ROW_HOLE = 2; //         0010\nconst ROW_CAMERA = 4; // 1000\nconst ROW_PLAYER_START = 8; // 1000\n\nconst MAX_NUMBER_OF_BUBBLES = 20;\n\nexport default class Level extends BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param background {string}\n   */\n  constructor(\n    eventEmitter,\n    x = 0,\n    y = 0,\n    width = 0,\n    height = 0,\n    background = \"\"\n  ) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = background;\n\n    /** @member {BaseObject[]} */\n    this.components = [];\n\n    this.tiles = [];\n    this.floor = [];\n    this.bubbles = [];\n    this.finishLevelItem = [];\n\n    this.currentLevel = { ...level2 };\n    this.playerInitialPosition = { x: 0, y: 0 };\n\n    this.gridSize = GRID_SIZE;\n\n    this.loadLevel(this.currentLevel);\n  }\n\n  loadLevel(level) {\n    // load level background\n    this.backgroundColor = level.background;\n    this.gridSize = SCREEN_HEIGHT / level.map.length;\n\n    const map = level.map;\n    const flags = new Array(map.length).fill(1).map(() => new Array(map[0].length).fill(true));\n    for (let row = 0; row < map.length; row++) {\n      for (let col = 0; col < map[row].length; col++) {\n        const tile = map[row][col];\n        if (flags[row][col] && ((tile & ROW_TILE) !== 0)) {\n\n          let type = TILE_1X1;\n\n          // check if 2x2 tile fit\n          if (row + 1 < map.length && col + 1 < map[row].length &&\n            (map[row][col + 1] & ROW_TILE) &&\n            (map[row + 1][col] & ROW_TILE) &&\n            (map[row + 1][col + 1] & ROW_TILE)\n          ) {\n            flags[row][col] = false;\n            flags[row][col + 1] = false;\n            flags[row + 1][col] = false;\n            flags[row + 1][col + 1] = false;\n\n            type = TILE_2X2;\n          }\n\n          const tile = new Tile(\n            this.eventEmitter,\n            col * this.gridSize,\n            row * this.gridSize,\n            type,\n            this.gridSize\n          );\n          this.tiles.push(tile);\n          this.components.push(tile);\n        } else if ((tile & ROW_TILE) === 0) {\n          const tile = new Tile(\n            this.eventEmitter,\n            col * this.gridSize,\n            row * this.gridSize,\n            TILE_FLOOR,\n            this.gridSize\n          );\n          this.floor.push(tile);\n        }\n\n        if (tile & ROW_CAMERA) {\n          const camera = new Camera(\n            this.eventEmitter,\n            col * this.gridSize + this.gridSize * .5,\n            row * this.gridSize + this.gridSize * .5,\n            this.gridSize\n          );\n          this.components.push(camera);\n        }\n\n        if (tile & ROW_HOLE) {\n          const hole = new Hole(\n            this.eventEmitter,\n            col * this.gridSize + this.gridSize * .5,\n            row * this.gridSize + this.gridSize * .5\n          );\n          this.finishLevelItem.push(hole);\n          this.components.push(hole);\n        }\n\n        if (tile & ROW_PLAYER_START) {\n          this.playerInitialPosition = {\n            x: col * this.gridSize + this.gridSize * .5,\n            y: row * this.gridSize + this.gridSize * .5\n          };\n        }\n      }\n    }\n  }\n\n  pauseGame() {\n  }\n\n  unPauseGame() {\n  }\n\n  render(context) {\n    this.cleanScreen(context);\n\n    this.floor.forEach((component) => component.render(context));\n    this.renderWatterColor(context);\n    this.updateBubbles();\n\n    this.components.forEach((component) => component.render(context));\n  }\n\n  updateBubbles() {\n    const toRemove = new Set();\n    for (const b of this.bubbles) {\n      if (b.bubbleDead()) {\n        toRemove.add(b.id);\n      }\n    }\n\n    this.bubbles = this.bubbles.filter((b) => !toRemove.has(b.id));\n    this.components = this.components.filter((c) => !toRemove.has(c.id));\n\n    if (this.bubbles.length < MAX_NUMBER_OF_BUBBLES) {\n      if (randomNumber(2) === 1) {\n        const bubble = this.newBubble();\n        this.components.unshift(bubble);\n        this.bubbles.push(bubble);\n      }\n    }\n  }\n\n  newBubble() {\n    const width = randomNumber(40, 10);\n    const height = randomNumber(40, 10);\n    const x = randomNumber(SCREEN_WIDTH);\n    const y = randomNumber(SCREEN_HEIGHT);\n    return new Bubble(this.eventEmitter, x, y, width, height);\n  }\n\n  renderWatterColor(context) {\n    if (this.backgroundColor) {\n      context.beginPath();\n      context.fillStyle = this.backgroundColor;\n      context.rect(0, 0, scale(this.width), scale(this.height));\n      context.fill();\n    }\n  }\n\n  cleanScreen(context) {\n    context.clearRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\n  }\n}\n","import Scene from \"./shared/scene\";\nimport {\n  EVENT_CLICK,\n  EVENT_KEYDOWN,\n  EVENT_KEYUP,\n  EVENT_MOUSEUP,\n  SCREEN_HEIGHT,\n  SCREEN_WIDTH\n} from \"../utils/variables\";\nimport Player from \"../components/player\";\nimport Score from \"../components/score\";\nimport Modal from \"../components/modal\";\nimport Button from \"../components/button\";\nimport Data from \"../utils/data\";\nimport { isMobileMethod } from \"../utils/mobile-device\";\nimport GameLogic from \"./shared/game.logic\";\nimport Level from \"../components/level\";\n\nexport const isMobile = isMobileMethod.any();\n\nconst SCORE_MARGIN = 10;\n\nexport default class ScenePlay extends Scene {\n  /**\n   * @param navigator {Navigator}\n   * @param eventEmitter {Observable}\n   */\n  constructor(navigator, eventEmitter) {\n    super(navigator, eventEmitter);\n\n    this.buttonPause = new Button(\n      this.eventEmitter,\n      SCORE_MARGIN,\n      SCORE_MARGIN,\n      100,\n      30,\n      \"SETTINGS\"\n    );\n    this.buttonPause.backgroundColor = \"#00000000\";\n    this.buttonPause.textSize = 20;\n    this.buttonPause.listenerEvent(EVENT_CLICK, () => {\n      if (this.currentGame.canPauseGame()) {\n        this.currentGame.pause();\n        this.showModal(Data.getInstance().getScore(), false);\n      }\n    });\n\n    this.listenerEvent(EVENT_KEYDOWN, this.keyDown.bind(this));\n    this.listenerEvent(EVENT_KEYUP, this.keyUp.bind(this));\n\n    this.initGame();\n  }\n\n  initGame() {\n    this.isModalShow = false;\n\n    // game logic\n    if (this.currentGame) {\n      this.currentGame.destroy();\n    }\n\n    // create level\n    this.level = new Level(\n      this.eventEmitter,\n      0,\n      0,\n      SCREEN_WIDTH,\n      SCREEN_HEIGHT,\n      \"#000\"\n    );\n\n    // player component\n    this.player = new Player(\n      this.eventEmitter,\n      this.level.playerInitialPosition.x,\n      this.level.playerInitialPosition.y,\n      this.level.gridSize,\n      this.level.gridSize\n    );\n    this.currentGame = new GameLogic(this.level.playerInitialPosition);\n    this.currentGame.player.component = this.player;\n    this.currentGame.level = this.level;\n\n    // score component\n    const score = new Score(\n      this.eventEmitter,\n      SCREEN_WIDTH - SCORE_MARGIN,\n      SCORE_MARGIN\n    );\n    score.backgroundColor = \"#00000000\";\n    this.currentGame.score = score;\n\n    // add components to the element array\n    this.elements = [this.player, this.buttonPause];\n    this.elements.push(score);\n\n    // elements of the game\n    this.playableElements = [this.player];\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    // execute game logic\n    this.currentGame.play();\n\n    // render background\n    this.cleanCanvas(context);\n\n    this.renderOrRemovePlayableElements(context);\n\n    // render scene elements\n    for (const element of this.elements) {\n      element.render(context);\n    }\n  }\n\n  keyDown(event) {\n    this.currentGame.directionKeys.addKey(event.key);\n  }\n\n  keyUp(event) {\n    this.currentGame.directionKeys.removeKey(event.key);\n  }\n\n  showModal(score, restartGame = true) {\n    if (!this.isModalShow) {\n      this.isModalShow = true;\n      const modalWidth = 300;\n      const modalHeight = 200;\n      const modal = new Modal(\n        this.eventEmitter,\n        SCREEN_WIDTH / 2 - modalWidth / 2,\n        SCREEN_HEIGHT / 2 - modalWidth / 2,\n        modalWidth,\n        modalHeight\n      );\n      Data.getInstance().saveScore(\n        Math.max(Data.getInstance().getScore(), score)\n      );\n      modal.score = score;\n      modal.buttonPlay.listenerEvent(EVENT_MOUSEUP, () => {\n        modal.buttonPlay.destroy.emit();\n        modal.buttonShareRecord.destroy.emit();\n        modal.buttonCredits.destroy.emit();\n        this.currentGame.unpause();\n        this.elements.pop();\n        this.isModalShow = false;\n        if (restartGame) {\n          this.initGame();\n        }\n      });\n      this.elements.push(modal);\n    }\n  }\n\n  renderOrRemovePlayableElements(context) {\n    const toRemove = new Set();\n    for (const element of this.playableElements) {\n      if (this.isElementVisible(element)) {\n        element.render(context);\n      } else {\n        toRemove.add(element.id);\n      }\n    }\n    this.playableElements = this.playableElements.filter(\n      (ele) => !toRemove.has(ele.id)\n    );\n  }\n\n  isElementVisible(element) {\n    return element.y - element.height * 2 < SCREEN_HEIGHT;\n  }\n\n  cleanCanvas(context) {\n    this.level.render(context);\n  }\n}\n","import {\n  EVENT_RESIZE,\n  SCENE_GAME,\n  SCREEN_RATIO,\n  SCREEN_WIDTH,\n} from \"./utils/variables\";\nimport ScenePlay from \"./scenes/play.scene\";\nimport Observable from \"./utils/observable\";\n\nexport default class Navigator {\n  /**\n   * @param scene {number}\n   * @param eventEmitter {Observable}\n   */\n  constructor(scene, eventEmitter) {\n    this.gameWidth = SCREEN_WIDTH;\n    this.gameHeght = SCREEN_WIDTH * SCREEN_RATIO;\n    this.sceneClasses = new Map();\n    this.sceneClasses.set(SCENE_GAME, ScenePlay);\n    this.scenesInstances = new Map();\n    /** @member {Scene} */\n    this.currentScene = null;\n    eventEmitter.on((data) => {\n      this.currentScene.eventEmitter.emit(data);\n      if (data.event === EVENT_RESIZE && data.dimension) {\n        this.gameWidth = data.dimension.w;\n        this.gameHeght = data.dimension.h;\n        this.updateGameDimensions();\n      }\n    });\n\n    // initial navigation\n    this.navigate(scene);\n  }\n\n  /**\n   * Navigate to a different scene\n   * @param scene {number}\n   */\n  navigate(scene) {\n    if (this.scenesInstances.has(scene)) {\n      this.currentScene = this.scenesInstances.get(scene);\n    } else if (this.sceneClasses.has(scene)) {\n      this.scenesInstances.set(\n        scene,\n        new (this.sceneClasses.get(scene))(this, new Observable()),\n      );\n      this.currentScene = this.scenesInstances.get(scene);\n    }\n    this.updateGameDimensions();\n  }\n\n  updateGameDimensions() {\n    if (this.currentScene) {\n      this.currentScene.width = this.gameWidth;\n      this.currentScene.height = this.gameHeght;\n    }\n  }\n}\n","import Navigator from \"./navigator\";\nimport Observable from \"./utils/observable\";\nimport { unscale } from \"./utils/math\";\nimport {\n  SCREEN_WIDTH,\n  SCREEN_RATIO,\n  SCENE_GAME,\n  STOP,\n  EVENT_CLICK,\n  EVENT_MOUSEDOWN,\n  EVENT_MOUSEUP,\n  EVENT_MOUSEOUT,\n  EVENT_MOUSELEAVE,\n  EVENT_MOUSEMOVE,\n  EVENT_TOUCHDOWN,\n  EVENT_TOUCHUP,\n  EVENT_TOUCHCANCEL,\n  EVENT_TOUCHMOVE,\n  EVENT_RESIZE,\n  RUNNING,\n  FPS,\n  EVENT_KEYDOWN,\n  EVENT_KEYPRESS,\n  EVENT_KEYUP,\n} from \"./utils/variables\";\n\nconst intervalPerSecond = 1000 / FPS;\n\nlet gameInstance = null;\n\nexport default class Game {\n  constructor() {\n    window.addEventListener(\"resize\", this.resizeScreen.bind(this));\n\n    /** @member {HTMLCanvasElement} */\n    this.canvas = document.getElementById(\"game\");\n\n    this.registerEvents();\n\n    /** @member {Observable} */\n    this.eventEmitter = new Observable();\n\n    /** @member {CanvasRenderingContext2D} */\n    this.context = this.canvas.getContext(\"2d\");\n\n    /** @member {Navigator} */\n    this.navigatorRoot = new Navigator(SCENE_GAME, this.eventEmitter);\n\n    this.loopStatus = STOP;\n    this.lastTime = 0;\n    this.width = this.canvas.width;\n    this.height = this.canvas.height;\n\n    this.resizeScreen();\n  }\n\n  registerEvents() {\n    // keyboard events\n    this.registerKeyboardEvent(\"keydown\", EVENT_KEYDOWN);\n    this.registerKeyboardEvent(\"keyup\", EVENT_KEYUP);\n    this.registerKeyboardEvent(\"keypress\", EVENT_KEYPRESS);\n\n    // mouse events\n    this.registerClickEvent(\"click\", EVENT_CLICK);\n    this.registerClickEvent(\"mousedown\", EVENT_MOUSEDOWN);\n    this.registerClickEvent(\"mouseup\", EVENT_MOUSEUP);\n    this.registerClickEvent(\"mouseout\", EVENT_MOUSEOUT);\n    this.registerClickEvent(\"mouseleave\", EVENT_MOUSELEAVE);\n    this.registerClickEvent(\"mousemove\", EVENT_MOUSEMOVE);\n\n    // touch events\n    this.registerTouchEvent(\"touchstart\", EVENT_TOUCHDOWN, false);\n    this.registerTouchEvent(\"touchend\", EVENT_TOUCHUP, false);\n    this.registerTouchEvent(\"touchcancel\", EVENT_TOUCHCANCEL, false);\n    this.registerTouchEvent(\"touchmove\", EVENT_TOUCHMOVE, false);\n  }\n\n  /**\n   * @param type {string}\n   * @param eventType {string}\n   * @param option {boolean}\n   */\n  registerClickEvent(type, eventType, option = undefined) {\n    this.canvas.addEventListener(\n      type,\n      (e) => this.clickEvent(e, eventType),\n      option,\n    );\n  }\n\n  /**\n   * @param type {string}\n   * @param eventType {string}\n   * @param option {boolean}\n   */\n  registerTouchEvent(type, eventType, option = undefined) {\n    this.canvas.addEventListener(\n      type,\n      (e) => this.touchEvent(e, eventType),\n      option,\n    );\n  }\n\n  /**\n   * @param type {string}\n   * @param eventType {string}\n   * @param option {boolean}\n   */\n  registerKeyboardEvent(type, eventType, option = undefined) {\n    document.addEventListener(\n      type,\n      (e) => this.keyboardEvent(e, eventType),\n      option,\n    );\n  }\n\n  resizeScreen() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    let calculatedWidth = Math.min(SCREEN_WIDTH, width);\n    let calculatedHeight = calculatedWidth * SCREEN_RATIO;\n\n    if (calculatedHeight > height) {\n      calculatedHeight = height;\n      calculatedWidth = height / SCREEN_RATIO;\n    }\n\n    this.canvas.width = calculatedWidth;\n    this.canvas.height = calculatedHeight;\n\n    window.currentWidth = calculatedWidth;\n    this.eventEmitter.emit({\n      event: EVENT_RESIZE,\n      dimension: { w: calculatedWidth, h: calculatedHeight },\n    });\n  }\n\n  /**\n   * @param event {TouchEvent}\n   * @param type {string}\n   */\n  touchEvent(event, type) {\n    this.emitPositionEvent(\n      {\n        x: event?.targetTouches[0]?.pageX,\n        y: event?.targetTouches[0]?.pageY,\n      },\n      type,\n    );\n  }\n\n  /**\n   * @param event {MouseEvent}\n   * @param type {string}\n   */\n  clickEvent(event, type) {\n    this.emitPositionEvent({ x: event?.clientX, y: event?.clientY }, type);\n  }\n\n  /**\n   * @param event {KeyboardEvent}\n   * @param type {string}\n   */\n  keyboardEvent(event, type) {\n    this.eventEmitter.emit({\n      event: type,\n      key: event.key,\n    });\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   * @param type {string}\n   */\n  emitPositionEvent(position, type) {\n    const rect = this.canvas.getBoundingClientRect();\n    this.eventEmitter.emit({\n      event: type,\n      position: {\n        x: unscale(position.x - rect.left),\n        y: unscale(position.y - rect.top),\n      },\n    });\n  }\n\n  /**\n   * Get game instance\n   * @returns {Game}\n   */\n  static getInstance() {\n    if (!gameInstance) {\n      gameInstance = new Game();\n    }\n    return gameInstance;\n  }\n\n  /**\n   * Initialize game\n   */\n  init() {\n    this.loopStatus = RUNNING;\n    requestAnimationFrame(this.loop.bind(this));\n  }\n\n  /**\n   * Application loop\n   * @param currentTime {number}\n   */\n  loop(currentTime) {\n    if (this.loopStatus === RUNNING) {\n      if (\n        this.loopStatus === RUNNING &&\n        intervalPerSecond <= currentTime - this.lastTime\n      ) {\n        this.lastTime = currentTime;\n\n        this.navigatorRoot.currentScene.render(this.context);\n      }\n\n      requestAnimationFrame(this.loop.bind(this));\n    }\n    // the else here will end the loop\n  }\n}\n","import Game from \"./game/game\";\n\nGame.getInstance().init();\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","SCREEN_RATIO","SCREEN_WIDTH","SCREEN_HEIGHT","EVENT_CLICK","EVENT_MOUSEOUT","EVENT_KEYDOWN","EVENT_KEYUP","Observable","constructor","subscriptions","open","emit","data","i","length","callFunction","func","pipe","functions","lastSteam","stream","on","unsub","filter","f","push","BaseObject","eventEmitter","x","y","width","height","destroy","lastMousePosition","isMouseHover","undefined","id","value","_eventEmitter","stopper","streamCancel","cancelFunction","observable","takeUntil","render","context","listenerEvent","event","callback","validateMouseEventPropagation","position","validateKeyboardEventPropagation","isPositionInside","Scene","navigator","super","backgroundColor","elements","cleanCanvas","element","rect","fillStyle","fill","validateEventPropagation","validation","addVectors","v1","v2","getPointByVectorRotation","vector","pivot","phi","result","Math","cos","sin","rotateVector","scale","currentWidth","unscale","randomNumber","limit","start","floor","random","detectCollision","shape1","shape2","axis","extractAxis","axi","p1","shapeProjection","p2","min","max","normalizeVector","v","sqrt","shape","projection","p","u","BaseShape","rotation","directionVector","scaleShape","brakedShape","updateCoordinates","shapes","getProjection","points","beginPath","moveTo","lineTo","closePath","background","Boolean","stroke","strokeStyle","lineWidth","strokeWidth","animate","moveBrakedPiece","brakeShapes","shipShape","brakeShape","cp","shapeCenter","factor","pow","coverBox","newShapes","count","ceil","pos","Array","map","reduceOpacity","color","extract","alpha","getOpacity","toString","substr","getColorWithOpacity","alphaFactor","parseInt","shapeId","atan2","PI","currentShape","getPosition","projectedShape","Player","time","Date","getTime","animation","animationIsOn","updateDirectionVector","animateWalk","footMovement","stepAnimationFunction","handMovement","handAnimationFunction","minPoint","maxPoint","forEach","point","startsWith","footMov","endsWith","dir","Score","level","textSize","textColor","lastTime","font","text","metrics","measureText","textWidth","textHeight","actualBoundingBoxAscent","actualBoundingBoxDescent","padding","fillText","Button","textColorHover","document","body","style","cursor","Modal","text2Size","score","buttonMargin","createCredits","createPlayButton","createShareButton","w","h","buttonPlay","buttonCredits","focus","buttonShareRecord","url","renderScore","metrics2","text2Width","text2Height","SCORE_KEY","Data","getInstance","saveScore","localStorage","setItem","getScore","getItem","isMobileMethod","Android","userAgent","match","BlackBerry","iOS","Opera","Windows","any","DirectionKeys","presedKeys","clear","addKey","key","isDirectionKey","includes","removeKey","k","hasPressedKeys","directionVec","direction","directionMap","n","consumeNextDirection","acDir1","acDir2","currentDir","nextDir","GameLogic","playerPosition","directionKeys","player","expectedRotation","velocity","minVelocity","acceleration","deceleration","status","component","enemies","objects","configs","enemy","obj","play","movePlayer","animateComponents","rot","t","scalar","prevPosition","checkCollisionWithMap","tiles","checkCollisionInProjections","finishLevelItem","levelComplete","canPauseGame","pause","unpause","updateSpaces","updateScore","checkCollision","shapes1","shapes2","s1","s2","console","log","colors","Tile","type","gridSize","getRotation","tileShape","getShape","positionCorrection","setupTile","minPosition","maxPosition","s","tileFactor","getGridSize","Bubble","lifeTime","calculateScale","showAndHideFunction","getTimeFactor","growBubbleFunction","ellipse","bubbleDead","Hole","Camera","Level","components","bubbles","currentLevel","playerInitialPosition","loadLevel","flags","row","col","tile","camera","hole","pauseGame","unPauseGame","cleanScreen","renderWatterColor","updateBubbles","toRemove","Set","b","add","has","c","bubble","newBubble","unshift","clearRect","ScenePlay","buttonPause","currentGame","showModal","keyDown","bind","keyUp","initGame","isModalShow","playableElements","renderOrRemovePlayableElements","restartGame","modalWidth","modalHeight","modal","pop","isElementVisible","ele","Navigator","scene","gameWidth","gameHeght","sceneClasses","Map","set","scenesInstances","currentScene","dimension","updateGameDimensions","navigate","get","intervalPerSecond","gameInstance","Game","addEventListener","resizeScreen","canvas","getElementById","registerEvents","getContext","navigatorRoot","loopStatus","registerKeyboardEvent","registerClickEvent","registerTouchEvent","eventType","option","clickEvent","touchEvent","keyboardEvent","innerWidth","innerHeight","calculatedWidth","calculatedHeight","emitPositionEvent","targetTouches","pageX","pageY","clientX","clientY","getBoundingClientRect","left","top","init","requestAnimationFrame","loop","currentTime"],"sourceRoot":""}