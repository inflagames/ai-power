{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/global","webpack:///./game/utils/variables.js","webpack:///./game/utils/observable.js","webpack:///./game/components/shared/base-object.js","webpack:///./game/scenes/shared/scene.js","webpack:///./game/utils/math.js","webpack:///./game/components/shared/base-shape.js","webpack:///./game/components/bubble.js","webpack:///./game/components/player.js","webpack:///./game/components/score.js","webpack:///./game/components/button.js","webpack:///./game/utils/data.js","webpack:///./game/components/settings.js","webpack:///./game/utils/mobile-device.js","webpack:///./game/scenes/shared/direction-keys.js","webpack:///./game/components/tile.js","webpack:///./game/components/hole.js","webpack:///./game/components/camera.js","webpack:///./game/components/plant.js","webpack:///./game/components/levels/index.js","webpack:///./game/components/level.js","webpack:///./game/scenes/shared/game.logic.js","webpack:///./game/components/help.js","webpack:///./game/scenes/play.scene.js","webpack:///./game/navigator.js","webpack:///./game/game.js","webpack:///./main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// game dimensions\nexport const SCREEN_RATIO = 3 / 4;\nexport const SCREEN_WIDTH = 1024;\nexport const SCREEN_HEIGHT = SCREEN_WIDTH * SCREEN_RATIO;\nexport const GRID_SIZE = (SCREEN_WIDTH - 1) / 12;\n\n// game status\nexport const RUNNING = 1;\nexport const PAUSE = 2;\nexport const STOP = 3;\n\n// game events\nexport const EVENT_CLICK = \"0\";\nexport const EVENT_MOUSEDOWN = \"1\";\nexport const EVENT_MOUSEUP = \"2\";\nexport const EVENT_MOUSEMOVE = \"3\";\nexport const EVENT_MOUSEOUT = \"8\";\nexport const EVENT_MOUSELEAVE = \"9\";\nexport const EVENT_TOUCHDOWN = \"4\";\nexport const EVENT_TOUCHUP = \"5\";\nexport const EVENT_TOUCHMOVE = \"6\";\nexport const EVENT_TOUCHCANCEL = \"7\";\nexport const EVENT_RESIZE = \"8\";\nexport const EVENT_KEYPRESS = \"9\";\nexport const EVENT_KEYDOWN = \"10\";\nexport const EVENT_KEYUP = \"11\";\n\n// scene values\nexport const SCENE_GAME = 1;\n\nexport const FPS = 30;\n","export default class Observable {\n  constructor() {\n    /** @member {function[]} */\n    this.subscriptions = [];\n    this.open = true;\n  }\n\n  /**\n   * @param data {Object}\n   */\n  emit(data = {}) {\n    for (let i = 0; i < this.subscriptions.length; i++) {\n      this.callFunction(this.subscriptions[i], data);\n    }\n  }\n\n  async callFunction(func, data) {\n    func(data);\n  }\n\n  /**\n   * @param functions {function}\n   * @return {Observable}\n   */\n  pipe(...functions) {\n    let lastSteam = this;\n    for (const func of functions) {\n      const stream = new Observable();\n      lastSteam.on((data) => func(data, stream));\n      lastSteam = stream;\n    }\n    return lastSteam;\n  }\n\n  /**\n   * @param func {function}\n   */\n  unsub(func) {\n    this.subscriptions = this.subscriptions.filter((f) => f !== func);\n  }\n\n  /**\n   * @param func {function}\n   */\n  on(func) {\n    this.subscriptions.push(func);\n  }\n}\n\n/**\n * Filter the value of an Observable\n * @param stopper {Observable}\n */\nexport function takeUntil(stopper) {\n  let streamCancel = false;\n  const cancelFunction = () => {\n    streamCancel = true;\n    stopper.unsub(cancelFunction);\n  };\n  stopper.on(cancelFunction);\n  return (data, /** @param {Observable} */ observable) => {\n    if (streamCancel) {\n      observable.subscriptions = [];\n    }\n    observable.emit(data);\n  };\n}\n\n/**\n * Filter the value of an Observable\n * @param func {function}\n */\nexport function filterObservable(func) {\n  return (data, /** @param {Observable} */ observable) => {\n    if (func(data)) {\n      observable.emit(data);\n    }\n  };\n}\n\n/**\n * The value of the observable can be mapped and returned with transformations\n * @param func {function}\n */\nexport function mapObservable(func) {\n  return (data, /** @param {Observable} */ observable) => {\n    observable.emit(func(data));\n  };\n}\n","import Observable, {\n  filterObservable,\n  takeUntil\n} from \"../../utils/observable\";\nimport {\n  EVENT_KEYDOWN,\n  EVENT_KEYPRESS,\n  EVENT_KEYUP,\n  EVENT_MOUSELEAVE,\n  EVENT_MOUSEOUT,\n  EVENT_TOUCHCANCEL,\n  EVENT_TOUCHUP\n} from \"../../utils/variables\";\n\nexport default class BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    this.destroy = new Observable();\n    /** @member {Observable} */\n    this.eventEmitter = eventEmitter;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.lastMousePosition = null;\n    this.isMouseHover = false;\n\n    if (global['idCount'] === undefined) {\n      global['idCount'] = 0;\n    }\n    this.id = global['idCount']++;\n  }\n\n  set eventEmitter(value) {\n    this._eventEmitter = value ? value.pipe(takeUntil(this.destroy)) : value;\n  }\n\n  get eventEmitter() {\n    return this._eventEmitter;\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n  }\n\n  /**\n   * Event listener\n   * @param event {string}\n   * @param callback {function}\n   */\n  listenerEvent(event, callback) {\n    this.eventEmitter\n      .pipe(filterObservable((data) => data.event === event))\n      .on((data) => {\n        if (\n          (data &&\n            this.validateMouseEventPropagation(data.position, data.event)) ||\n          this.validateKeyboardEventPropagation(data.event)\n        ) {\n          callback(data);\n        }\n      });\n  }\n\n  validateKeyboardEventPropagation(event) {\n    return (\n      event === EVENT_KEYDOWN ||\n      event === EVENT_KEYUP ||\n      event === EVENT_KEYPRESS\n    );\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   * @param event {string}\n   * @return {boolean}\n   */\n  validateMouseEventPropagation(position, event) {\n    if (\n      event === EVENT_TOUCHUP ||\n      event === EVENT_MOUSEOUT ||\n      event === EVENT_TOUCHCANCEL ||\n      event === EVENT_MOUSELEAVE\n    ) {\n      return true;\n    }\n    if (\n      this.isPositionInside(this.lastMousePosition) &&\n      !this.isPositionInside(position)\n    ) {\n      this.eventEmitter.emit({ event: EVENT_MOUSEOUT });\n    }\n    this.lastMousePosition = position;\n    return (this.isMouseHover = this.isPositionInside(position));\n  }\n\n  isPositionInside(position) {\n    return (\n      position &&\n      position.x >= this.x &&\n      position.x <= this.x + this.width &&\n      position.y >= this.y &&\n      position.y <= this.y + this.height\n    );\n  }\n}\n","import BaseObject from \"../../components/shared/base-object\";\n\nexport default class Scene extends BaseObject {\n  /**\n   * @param navigator {Navigator}\n   * @param eventEmitter {Observable}\n   */\n  constructor(navigator, eventEmitter) {\n    super(eventEmitter);\n    this.navigator = navigator;\n    this.backgroundColor = \"#f00\";\n    /** @member {BaseObject[]} */\n    this.elements = [];\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    this.cleanCanvas(context);\n    // render scene elements\n    for (const element of this.elements) {\n      element.render(context);\n    }\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  cleanCanvas(context) {\n    context.rect(0, 0, this.width, this.height);\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   * @param event {string}\n   * @return {boolean}\n   */\n  validateEventPropagation(position, event) {\n    const validation = super.validateEventPropagation(position, event);\n    if (validation) {\n      for (const e of this.elements) {\n        if (e.validateEventPropagation(position, event)) {\n          return false;\n        }\n      }\n    }\n    return validation;\n  }\n}\n","import { SCREEN_WIDTH } from \"./variables\";\n\n/**\n * Vector to angle conversion\n * @param vector {{x: number, y: number}}\n * @returns {number}\n */\nexport function vectorToAngle(vector) {\n  return Math.atan2(vector.y, vector.x);\n}\n\n/**\n * Multiply a vector by a scalar\n * @param vector {{x: number, y: number}}\n * @param scalar {number}\n * @returns {{x: number, y: number}}\n */\nexport function multiplyVector(vector, scalar) {\n  return { x: vector.x * scalar, y: vector.y * scalar };\n}\n\n/**\n * Add two vectors\n * @param v1 {{x: number, y: number}}\n * @param v2 {{x: number, y: number}}\n * @returns {{x: number, y: number}}\n */\nexport function addVectors(v1, v2) {\n  return { x: v1.x + v2.x, y: v1.y + v2.y };\n}\n\n/**\n * @param maxValue {number}\n * @param currentValue {number}\n */\nexport function linearFunction(maxValue, currentValue) {\n  // toDo (gonzalezext)[20.04.24]: maybe it can be removed\n  return Math.min(currentValue / maxValue, 1);\n}\n\n/**\n * @param maxValue {number}\n * @param currentValue {number}\n */\nexport function logFunction(maxValue, currentValue) {\n  // toDo (gonzalezext)[20.04.24]: maybe it can be removed\n  const x = (9 * currentValue) / maxValue + 1;\n  return Math.min(Math.log10(x), 1);\n}\n\n/**\n * @param vector {{x: number, y: number}}\n * @param pivot {{x: number, y: number}}\n * @param phi {number}\n * @return {{x: number, y: number}}\n */\nexport function getPointByVectorRotation(vector, pivot, phi) {\n  const result = rotateVector(vector, phi);\n  return { x: pivot.x + result.x, y: pivot.y - result.y };\n}\n\n/**\n * @param vector {{x: number, y: number}}\n * @param phi {number}\n * @return {{x: number, y: number}}\n */\nexport function rotateVector(vector, phi) {\n  return {\n    x: vector.x * Math.cos(phi) - vector.y * Math.sin(phi),\n    y: vector.x * Math.sin(phi) + vector.y * Math.cos(phi)\n  };\n}\n\nexport function getVector(p1, p2) {\n  return { x: p2.x - p1.x, y: p2.y - p1.y };\n}\n\nexport function distanceNoSqrt(p1, p2) {\n  return square(p2.x - p1.x) + square(p2.y - p1.y);\n}\n\nexport const square = (x) => x * x;\n\nexport function distance(p1, p2) {\n  // toDo guille 31.08.21: maybe it can be improved (check it)\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\n/**\n * @param value {number}\n * @return {number}\n */\nexport function scale(value) {\n  return (value * window.currentWidth) / SCREEN_WIDTH;\n}\n\nexport function unscale(value) {\n  return (value * SCREEN_WIDTH) / window.currentWidth;\n}\n\n/**\n * @param limit {number}\n * @param start {number}\n * @returns {number}\n */\nexport function randomNumber(limit, start = 0) {\n  return Math.floor(Math.random() * limit) + start;\n}\n\n/**\n * @param shape1 {{x: number, y: number}[]}\n * @param shape2 {{x: number, y: number}[]}\n * @return {boolean}\n */\nexport function detectCollision(shape1, shape2) {\n  if (shape1.length < 3 || shape2.length < 3) {\n    return false;\n  }\n  const axis = [...extractAxis(shape1), ...extractAxis(shape2)];\n\n  for (const axi of axis) {\n    const p1 = shapeProjection(shape1, axi);\n    const p2 = shapeProjection(shape2, axi);\n    if (\n      !(\n        (p1.min > p2.min && p1.min < p2.max) ||\n        (p1.max > p2.min && p1.max < p2.max) ||\n        (p2.min > p1.min && p2.min < p1.max) ||\n        (p2.max > p1.min && p2.max < p1.max) ||\n        (p1.min === p2.min && p1.max === p2.max)\n      )\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @param shape {{x: number, y: number}[]}\n * @param circle {{x: number, y: number, r: number}}\n * @returns {boolean}\n */\nexport function detectCollisionWithCircle(shape, circle) {\n  const minPoint = { ...shape[0] };\n  const maxPoint = { ...shape[0] };\n\n  for (const p of shape) {\n    minPoint.x = Math.min(minPoint.x, p.x);\n    minPoint.y = Math.min(minPoint.y, p.y);\n    maxPoint.x = Math.max(maxPoint.x, p.x);\n    maxPoint.y = Math.max(maxPoint.y, p.y);\n  }\n\n  const middlePoint = { x: (maxPoint.x + minPoint.x) * 0.5, y: (maxPoint.y + minPoint.y) * 0.5 };\n  const distanceToCircle = { x: Math.abs(circle.x - middlePoint.x), y: Math.abs(circle.y - middlePoint.y) };\n\n  if (distanceToCircle.x > ((maxPoint.x - minPoint.x) * 0.5 + circle.r) ||\n    distanceToCircle.y > ((maxPoint.y - minPoint.y) * 0.5 + circle.r)) {\n    return false;\n  }\n\n  if (distanceToCircle.x <= (maxPoint.x - minPoint.x) * 0.5 || distanceToCircle.y <= (maxPoint.y - minPoint.y) * 0.5) {\n    return true;\n  }\n\n  const cornerDistance = square(distanceToCircle.x - (maxPoint.x - minPoint.x) * 0.5) + square(distanceToCircle.y - (maxPoint.y - minPoint.y) * 0.5);\n  return cornerDistance <= square(circle.r);\n}\n\n/**\n * Normalize a vector\n * @param v {{x: number, y: number}}\n * @returns {{x: number, y: number}}\n */\nexport function normalizeVector(v) {\n  if (v.x === 0 && v.y === 0) {\n    return { x: 0, y: 0 };\n  }\n  const length = Math.sqrt(v.x * v.x + v.y * v.y);\n  return { x: v.x / length, y: v.y / length };\n}\n\n/**\n * Linear interpolation between two vectors\n * @param v1 {{x: number, y: number}}\n * @param v2 {{x: number, y: number}}\n * @param t {number}\n * @returns {{x: number, y: number}}\n */\nexport function lerpVector(v1, v2, t) {\n  return {\n    x: v1.x + (v2.x - v1.x) * t,\n    y: v1.y + (v2.y - v1.y) * t\n  };\n}\n\n/**\n * @param shape {{x: number, y: number}[]}\n * @return {{x: number, y: number}[]}\n */\nfunction extractAxis(shape) {\n  if (shape.length <= 1) {\n    return [];\n  }\n  const axis = [];\n  for (let i = 1; i < shape.length; i++) {\n    axis.push({\n      x: shape[i].x - shape[i - 1].x,\n      y: shape[i - 1].y - shape[i].y\n    });\n  }\n  axis.push({\n    x: shape[0].x - shape[shape.length - 1].x,\n    y: shape[shape.length - 1].y - shape[0].y\n  });\n  return axis;\n}\n\n/**\n * @param shape {{x: number, y: number}[]}\n * @param v {{x: number, y: number}}\n * @return {{max: number, min: number}}\n */\nfunction shapeProjection(shape, v) {\n  let min = projection(v, shape[0]);\n  let max = min;\n  for (let i = 1; i < shape.length; i++) {\n    const p = projection(v, shape[i]);\n    min = Math.min(min, p);\n    max = Math.max(max, p);\n  }\n  return { min, max };\n}\n\n/**\n * @param v {{x: number, y: number}}\n * @param u {{x: number, y: number}}\n * @return {number}\n */\nfunction projection(v, u) {\n  return (u.x * v.x + u.y * v.y) / (v.x * v.x + v.y * v.y);\n}\n","import BaseObject from \"./base-object\";\nimport { getPointByVectorRotation, scale, vectorToAngle } from \"../../utils/math\";\n\nexport default class BaseShape extends BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = \"#00f\";\n    this.rotation = 0;\n    this.directionVector = { x: 1, y: 0 };\n    this.scaleShape = 3.3;\n    this.brakedShape = null;\n  }\n\n  updateCoordinates(x, y) {\n    this.x = x || this.x;\n    this.y = y || this.y;\n  }\n\n  render(context) {\n    // ship painted\n    const shapes = this.getProjection();\n\n    for (const shape of shapes) {\n      const points = shape.points;\n      if (points.length === 0) {\n        continue;\n      }\n      context.beginPath();\n      context.moveTo(scale(points[0].x), scale(points[0].y));\n      for (let i = 1; i < points.length; i++) {\n        context.lineTo(scale(points[i].x), scale(points[i].y));\n      }\n      context.closePath();\n      context.fillStyle = shape.background;\n      if (Boolean(shape.stroke)) {\n        context.stroke();\n        context.strokeStyle = shape.stroke;\n        context.lineWidth = shape.strokeWidth * 5;\n      }\n      context.fill();\n    }\n  }\n\n  animate() {\n    this.moveBrakedPiece();\n  }\n\n  brakeShapes() {\n    const shapes = this.currentShape().shapes;\n\n    this.brakedShape = { shapes: [] };\n\n    // brake in triangles\n    for (const shape of shapes) {\n      this.brakedShape = {\n        shapes: [...this.brakedShape.shapes, ...this.brakeShape(shape)]\n      };\n    }\n\n    // calculate direction vector\n    for (const shape of this.brakedShape.shapes) {\n      const cp = this.shapeCenter(shape.points);\n      const d = Math.random() + 0.5;\n      const factor = d / Math.sqrt(Math.pow(cp.x, 2) + Math.pow(cp.y, 2));\n      shape.vector = { x: cp.x * factor, y: cp.y * factor };\n    }\n  }\n\n  /**\n   * @param shape {{points: {x: number, y: number}[], background: string}}\n   * @return {{x: number, y: number}[]}\n   */\n  brakeShape(shape) {\n    if (shape.points.length === 0) {\n      return shape.points;\n    }\n    const { min, max } = this.coverBox(shape.points);\n\n    const fixedSize = 2;\n    const size = 2.5;\n    const newShapes = [];\n    let count = Math.ceil(((max.x - min.x) * (max.y - min.y)) / fixedSize);\n    count = Math.min(count, 150);\n\n    for (let i = 0; i < count; i++) {\n      const pos = {\n        x: (max.x - min.x) * Math.random() + min.x,\n        y: (max.y - min.y) * Math.random() + min.y\n      };\n      newShapes.push({\n        points: new Array(3).fill(null).map(() => ({\n          x: pos.x + size * Math.random(),\n          y: pos.y + size * Math.random()\n        })),\n        background: shape.background\n      });\n    }\n\n    return newShapes;\n  }\n\n  /**\n   * @param points {{x: number, y: number}[]}\n   */\n  shapeCenter(points) {\n    const { min, max } = this.coverBox(points);\n    return { x: (max.x + min.x) / 2, y: (max.y + min.y) / 2 };\n  }\n\n  coverBox(points) {\n    const min = { x: points[0].x, y: points[0].y };\n    const max = { ...min };\n    for (let i = 1; i < points.length; i++) {\n      min.x = Math.min(min.x, points[i].x);\n      min.y = Math.min(min.y, points[i].y);\n      max.x = Math.max(max.x, points[i].x);\n      max.y = Math.max(max.y, points[i].y);\n    }\n    return { min, max };\n  }\n\n  moveBrakedPiece() {\n    if (this.brakedShape) {\n      for (const shape of this.brakedShape.shapes) {\n        shape.points = shape.points.map((p) => ({\n          x: p.x + shape.vector.x,\n          y: p.y + shape.vector.y\n        }));\n        shape.background = this.reduceOpacity(shape.background, 30);\n      }\n    }\n  }\n\n  /**\n   * @param color {string}\n   * @param extract {number}\n   * @returns {string}\n   */\n  reduceOpacity(color, extract) {\n    // toDo (gonzalezext)[21.04.24]: remove this method\n    let alpha = this.getOpacity(color);\n    alpha = Math.min(255, Math.max(alpha - extract, 0));\n    alpha = alpha.toString(16);\n    return `#${color.substr(1, 6)}${(alpha.length < 2 ? \"0\" : \"\") + alpha}`;\n  }\n\n  getColorWithOpacity(color, alphaFactor) {\n    let alpha = Math.min(255, Math.max(Math.floor(255 * alphaFactor), 0));\n    alpha = alpha.toString(16);\n    return `#${color.substr(1, 6)}${(alpha.length < 2 ? \"0\" : \"\") + alpha}`;\n  }\n\n  /**\n   * @param color {string}\n   * @return {number}\n   */\n  getOpacity(color) {\n    return color.length > 7 ? parseInt(color.substr(7, 2), 16) : 255;\n  }\n\n  /**\n   * @param shapeId {string}\n   * @return {{points: {x: number, y: number}[], background: string, stroke: string, strokeWidth: number, smoke: boolean}[]}\n   */\n  getProjection(shapeId = undefined) {\n    const rotation = vectorToAngle(this.directionVector) + Math.PI / 2;\n\n    const shapes = this.currentShape().shapes;\n    const pivot = this.getPosition();\n\n    const projectedShape = [];\n\n    for (const shape of shapes) {\n      if (shapeId && shape.id !== shapeId) {\n        continue;\n      }\n\n      const points = shape.points.map((p) => ({\n        x: p.x * this.scaleShape,\n        y: p.y * this.scaleShape\n      }));\n      for (let i = 0; i < points.length; i++) {\n        points[i] = getPointByVectorRotation(points[i], pivot, rotation);\n      }\n      projectedShape.push({ ...shape, points });\n    }\n    return projectedShape;\n  }\n\n  /**\n   * @returns {{x: number, y: number}}\n   */\n  getPosition() {\n    return { x: this.x, y: this.y };\n  }\n\n  /**\n   * @returns {{shapes: {background: string, id: string, points: {x: number, y: number}[]}[]}}\n   */\n  currentShape() {\n    return {\n      shapes: []\n    };\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport { randomNumber } from \"../utils/math\";\nimport { SCREEN_HEIGHT, SCREEN_WIDTH } from \"../utils/variables\";\n\nexport const MAX_LIFE_TIME = 20;\n\nexport function newBubble(eventEmitter, x = undefined, y = undefined, w = undefined, h = undefined) {\n  x = x ? x : randomNumber(SCREEN_WIDTH);\n  y = y ? y : randomNumber(SCREEN_HEIGHT);\n  const width = w ? w : randomNumber(40, 10);\n  const height = h ? h : randomNumber(40, 10);\n  return new Bubble(eventEmitter, x, y, width, height);\n}\n\nexport default class Bubble extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width\n   * @param height\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    super(eventEmitter, x, y, width, height);\n\n    this.scaleShape = 0;\n    this.lifeTime = 0;\n  }\n\n  render(context) {\n    this.calculateScale();\n    this.lifeTime++;\n\n    context.beginPath();\n    context.fillStyle = this.getColorWithOpacity(\"#6c8d8eff\", this.showAndHideFunction(this.getTimeFactor()));\n    this.scaleShape = this.growBubbleFunction(this.getTimeFactor());\n    const w = this.width * this.scaleShape;\n    const h = this.height * this.scaleShape;\n    context.ellipse(this.x, this.y, w, h, 0, 0, Math.PI * 2);\n    context.fill();\n  }\n\n  calculateScale() {\n    this.scaleShape = Math.sin(this.y / 10);\n  }\n\n  getTimeFactor() {\n    return Math.min(this.lifeTime / MAX_LIFE_TIME, 1);\n  }\n\n  showAndHideFunction(time) {\n    return Math.sin(time * Math.PI) / 4;\n  }\n\n  growBubbleFunction(time) {\n    return Math.log(time + 1) * 1.4426950408889634;\n  }\n\n  bubbleDead() {\n    return this.lifeTime > MAX_LIFE_TIME;\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport shape from \"../shapes/character.json\";\nimport { MAX_LIFE_TIME, newBubble } from \"./bubble\";\n\nexport const ANIMATE_WALK = 1;\n\nexport default class Player extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param gridSize {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, gridSize) {\n    super(eventEmitter, x, y, gridSize, gridSize);\n\n    this.directionVector = { x: 0, y: 1 };\n\n    this.calculateScale();\n\n    this.shape = { ...shape };\n\n    this.time = new Date().getTime();\n\n    this.animation = 0;\n    this.animationIsOn = false;\n\n    this.bubblesIntervalToShow = 3;\n    this.bubblesCount = 0;\n    this.bubbles = [];\n\n    this.updateCoordinates();\n  }\n\n  calculateScale() {\n    const scaleConst = 0.012578125;\n    this.scaleShape = this.width * scaleConst;\n  }\n\n  render(context) {\n    //clean bubbles\n    this.bubbles = this.bubbles.filter((bubble) => !bubble.bubbleDead());\n\n    // render bubbles\n    this.bubbles.forEach((bubble) => bubble.render(context));\n\n    super.render(context);\n  }\n\n  /**\n   * @returns {{r: number, x: number, y: number}}\n   */\n  getCollisionCircle() {\n    return {\n      x: this.x,\n      y: this.y,\n      r: this.width / 3\n    };\n  }\n\n  /**\n   * Update the coordinates of the player\n   * @param x {number}\n   * @param y {number}\n   */\n  updateCoordinates({ x, y } = {}) {\n    this.x = x || this.x;\n    this.y = y || this.y;\n  }\n\n  /**\n   * Update the direction vector of the player\n   * @param v\n   */\n  updateDirectionVector(v) {\n    this.directionVector = v;\n  }\n\n  animate() {\n    super.animate();\n\n    if ((this.animation & ANIMATE_WALK) !== 0) {\n      if (!this.animationIsOn) {\n        this.time = new Date().getTime();\n      }\n      this.animationIsOn = true;\n      this.animateWalk();\n    } else if (this.animationIsOn) {\n      this.animationIsOn = false;\n\n      this.shape = { ...shape };\n    }\n  }\n\n  animateWalk() {\n    const maxMovement = -20;\n    const footMovement = this.stepAnimationFunction() * maxMovement;\n    const handMovement = this.handAnimationFunction();\n\n    let minPoint = { x: 1000, y: 1000 };\n    let maxPoint = { x: -1000, y: -1000 };\n    // toDo (gonzalezext)[23.04.24]: this can be calculated at the begining\n    this.shape.shapes.forEach((shape) => shape.points.forEach((point) => {\n      minPoint.y = Math.min(minPoint.y, point.y);\n      minPoint.x = Math.min(minPoint.x, point.x);\n      maxPoint.y = Math.max(maxPoint.y, point.y);\n      maxPoint.x = Math.max(maxPoint.x, point.x);\n    }));\n    const middleHandPivot = -2;\n\n    // toDo (gonzalezext)[23.04.24]: this can be optimized by using a map\n    this.shape.shapes = shape.shapes.map((shape) => {\n      // foot animation\n      if (shape.id.startsWith(\"foot\")) {\n        const footMov = shape.id.endsWith(\"-l\") ? footMovement : -footMovement;\n        return {\n          ...shape,\n          points: shape.points.map((point) => {\n            return { ...point, y: point.y + footMov };\n          })\n        };\n      }\n      // hand animation\n      if (shape.id.startsWith(\"hand\")) {\n        const dir = shape.id.endsWith(\"-l\") ? 1 : -1;\n        return {\n          ...shape,\n          points: shape.points.map((point) => {\n            return {\n              ...point,\n              y: (point.y - middleHandPivot) * handMovement * dir + middleHandPivot\n            };\n          })\n        };\n      }\n      return { ...shape };\n    });\n\n    // create walk bubbles\n    if (this.bubblesCount === 0) {\n      this.newBubble();\n    }\n    this.bubblesCount++;\n    if (this.bubblesCount >= this.bubblesIntervalToShow) {\n      this.bubblesCount = 0;\n    }\n  }\n\n  newBubble() {\n    const bubble = newBubble(this.eventEmitter, this.x, this.y, 50, 50);\n    bubble.lifeTime = MAX_LIFE_TIME / 4;\n    this.bubbles.push(bubble);\n  }\n\n  stepAnimationFunction() {\n    const time = (new Date().getTime() - this.time) / 500;\n    return Math.sin(time * Math.PI);\n  }\n\n  handAnimationFunction() {\n    const time = (new Date().getTime() - this.time) / 500;\n    return Math.cos(time * Math.PI);\n  }\n\n  currentShape() {\n    return this.brakedShape || this.shape;\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { scale } from \"../utils/math\";\n\nexport default class Score extends BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number} corner coordinates\n   * @param y {number} corner coordinates\n   * @param text {string}\n   */\n  constructor(eventEmitter, x, y, text) {\n    super(eventEmitter, x, y);\n    this.score = 0;\n    this.textSize = 20;\n    this.backgroundColor = \"#000\";\n    this.textColor = \"#fff\";\n    this.text = text;\n\n    this.lastTime = 0;\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    context.font = `${scale(this.textSize)}px Arial`;\n    const text = `${this.text} ${this.score}`;\n    const metrics = context.measureText(text);\n    const textWidth = metrics.width;\n    const textHeight =\n      metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n    const padding = 5;\n\n    context.beginPath();\n    context.rect(\n      scale(this.x - textWidth - padding * 2),\n      scale(this.y),\n      scale(textWidth + padding * 2),\n      scale(textHeight + padding * 2)\n    );\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n\n    context.beginPath();\n    context.font = `${scale(this.textSize)}px Arial`;\n    context.fillStyle = this.textColor;\n    context.fillText(\n      text,\n      scale(this.x - textWidth - padding),\n      scale(this.y + textHeight + padding)\n    );\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { scale, unscale } from \"../utils/math\";\nimport { EVENT_MOUSEMOVE, EVENT_MOUSEOUT } from \"../utils/variables\";\n\nexport default class Button extends BaseObject {\n  /**\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param text {string}\n   * @param eventEmitter {Observable}\n   */\n  constructor(eventEmitter, x, y, width, height, text) {\n    super(eventEmitter, x, y, width, height);\n    this.text = text;\n    this.textSize = 10;\n    this.backgroundColor = \"#000\";\n    this.textColor = \"#fff\";\n    this.textColorHover = \"#9a9a9a\";\n\n    this.listenerEvent(EVENT_MOUSEMOVE, (data) => {\n      if (this.isPositionInside(data.position)) {\n        document.body.style.cursor = \"pointer\";\n      }\n    });\n    this.listenerEvent(EVENT_MOUSEOUT, (data) => {\n      document.body.style.cursor = \"default\";\n    });\n\n    this.visible = true;\n  }\n\n  hide() {\n    this.visible = false;\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    if (!this.visible) {\n      return;\n    }\n\n    context.beginPath();\n    context.rect(\n      scale(this.x),\n      scale(this.y),\n      scale(this.width),\n      scale(this.height)\n    );\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n\n    context.beginPath();\n    context.font = `${scale(this.textSize)}px Arial`;\n    const metrics = context.measureText(this.text);\n    const textWidth = unscale(metrics.width);\n    const textHeight = unscale(\n      metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent\n    );\n    context.fillStyle = this.isMouseHover\n      ? this.textColorHover\n      : this.textColor;\n    // context.text;\n    context.fillText(\n      this.text,\n      scale(this.x + this.width / 2 - textWidth / 2),\n      scale(this.y + this.height / 2 + textHeight / 2)\n    );\n  }\n}\n","export const APPLICATION_PREFIX = \"fearwater\";\nexport const LAST_LEVEL_KEY = `${APPLICATION_PREFIX}_game_last_level`;\nexport const CURRENT_DEATHS_KEY = `${APPLICATION_PREFIX}_game_current_deaths`;\nexport const FIRST_TIME_KEY = `${APPLICATION_PREFIX}_game_first_time`;\nexport const BEST_DEATHS_KEY = `${APPLICATION_PREFIX}_game_best_deaths`;\n\n/** @type Data */\nlet data = null;\n\nexport default class Data {\n  static getInstance() {\n    if (!data) {\n      data = new Data();\n    }\n    return data;\n  }\n\n  /**\n   * @param deaths {number}\n   */\n  saveBestDeaths(deaths) {\n    const bestDeaths = +(this.loadBestDeaths() || 999999);\n    if (deaths < bestDeaths) {\n      this.saveData(BEST_DEATHS_KEY, deaths);\n    }\n  }\n\n  /**\n   * @returns {string|undefined}\n   */\n  loadBestDeaths() {\n    return this.getData(BEST_DEATHS_KEY);\n  }\n\n  isFirstTime() {\n    const firstTime = !this.getData(FIRST_TIME_KEY);\n    this.saveData(FIRST_TIME_KEY, \"false\");\n    return firstTime;\n  }\n\n  /**\n   * @param deaths {number}\n   */\n  saveDeaths(deaths) {\n    this.saveData(CURRENT_DEATHS_KEY, deaths);\n  }\n\n  /**\n   * @returns {number}\n   */\n  loadDeaths() {\n    return +(this.getData(CURRENT_DEATHS_KEY) || 0);\n  }\n\n  /**\n   * @param level {number}\n   */\n  saveLastLevel(level) {\n    this.saveData(LAST_LEVEL_KEY, level);\n  }\n\n  /**\n   * @returns {number}\n   */\n  getLastLevel() {\n    return +(this.getData(LAST_LEVEL_KEY) || 0);\n  }\n\n  /**\n   * @param key {string}\n   * @param value {string|number}\n   */\n  saveData(key, value) {\n    localStorage.setItem(key, value + \"\");\n  }\n\n  /**\n   * @param key {string}\n   * @returns {string}\n   */\n  getData(key) {\n    return localStorage.getItem(key);\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { EVENT_CLICK, SCREEN_HEIGHT, SCREEN_WIDTH } from \"../utils/variables\";\nimport { scale, unscale } from \"../utils/math\";\nimport Button from \"./button\";\nimport Data from \"../utils/data\";\n\nexport default class Settings extends BaseObject {\n  /**\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param eventEmitter {Observable}\n   */\n  constructor(eventEmitter, x, y, width, height) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = \"#fff\";\n    this.textSize = 90;\n    this.text2Size = 30;\n    this.text = \"AI POWER\";\n    this.score = 1000;\n    this.bestScore = Data.getInstance().loadBestDeaths();\n\n    const buttonHeight = 30;\n    const button1Width = 120;\n    const button2Width = 120;\n    const buttonMargin = 20;\n\n    this.components = [];\n\n    this.createPlayButton(\n      this.x + (this.width - button1Width) / 2,\n      this.y + this.height - (buttonHeight + buttonMargin) * 3,\n      button1Width,\n      buttonHeight\n    );\n    this.createCredits(\n      this.x,\n      this.y,\n      button1Width,\n      buttonHeight\n    );\n    this.createRestartButton(\n      this.x + (this.width - button2Width) / 2,\n      this.y + this.height - (buttonHeight + buttonMargin) * 2,\n      button2Width,\n      buttonHeight\n    );\n    this.createShareButton(\n      this.x +\n      (this.width - button2Width - buttonMargin * 2) / 2 +\n      buttonMargin,\n      this.y + this.height - buttonHeight - buttonMargin,\n      button2Width,\n      buttonHeight\n    );\n  }\n\n  hidePlayButton() {\n    this.buttonPlay.hide();\n  }\n\n  destroyComponents() {\n    this.components.forEach((component) => component.destroy.emit());\n  }\n\n  createPlayButton(x, y, w, h) {\n    this.buttonPlay = new Button(this.eventEmitter, x, y, w, h, \"CONTINUE\");\n    this.components.push(this.buttonPlay);\n  }\n\n  createRestartButton(x, y, w, h) {\n    this.buttonRestart = new Button(this.eventEmitter, x, y, w, h, \"RESTART\");\n    this.components.push(this.buttonRestart);\n  }\n\n  createCredits(x, y, w, h) {\n    this.buttonCredits = new Button(this.eventEmitter, x, y, w, h, \"@ggjnez92\");\n    this.buttonCredits.backgroundColor = \"#00000000\";\n    this.buttonCredits.textColor = \"#000\";\n    this.buttonCredits.textColorHover = \"#0048ff\";\n    this.buttonCredits.listenerEvent(EVENT_CLICK, () =>\n      window.open(\"https://twitter.com/ggjnez92\", \"_blank\").focus()\n    );\n    this.components.push(this.buttonCredits);\n  }\n\n  createShareButton(x, y, w, h) {\n    this.buttonShareRecord = new Button(\n      this.eventEmitter,\n      x,\n      y,\n      w,\n      h,\n      \"SHARE ON TWITTER\"\n    );\n    this.buttonShareRecord.listenerEvent(EVENT_CLICK, () => {\n      let message = `I'm currently playing the game AI POWER developed for the #gamedevjs jam.\\n\\n#gamedev\\n\\nIf you want to check it out, here is the link to the #github repository\\nhttps://github.com/inflagames/ai-power`;\n\n      if (this.bestScore) {\n        message = \"I finish the game AI POWER with \" + this.bestScore + \" deaths. Can you beat me?\\n\\n#gamedevjs #gamedev\\n\\nIf you want to check it out, here is the link to the #github repository\\nhttps://github.com/inflagames/ai-power\";\n      }\n\n      const url = `https://twitter.com/intent/tweet?text=${encodeURIComponent(message)}`;\n      window.open(url, \"_blank\").focus();\n    });\n    this.components.push(this.buttonShareRecord);\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    this.renderDialogBox(context);\n\n    this.components.forEach((component) => component.render(context));\n\n    this.renderTitle(context);\n    this.renderScore(context);\n  }\n\n  renderDialogBox(context) {\n    context.beginPath();\n    context.rect(0, 0, scale(SCREEN_WIDTH), scale(SCREEN_HEIGHT));\n    context.fillStyle = \"rgba(0,0,0,0.82)\";\n    context.fill();\n\n    context.beginPath();\n    context.rect(\n      scale(this.x),\n      scale(this.y),\n      scale(this.width),\n      scale(this.height)\n    );\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n  }\n\n  renderScore(context) {\n    if (this.bestScore !== undefined && this.bestScore !== null) {\n      context.beginPath();\n      context.font = `${scale(20)}px Arial`;\n      const text = `Best score: ${this.bestScore} deaths`;\n      const metrics = context.measureText(text);\n      const textWidth = unscale(metrics.width);\n      context.fillStyle = \"#000\";\n      context.fillText(\n        text,\n        scale(this.x + this.width / 2 - textWidth / 2),\n        scale(this.y + 110)\n      );\n    }\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  renderTitle(context) {\n    context.beginPath();\n    context.font = `${scale(this.text2Size)}px Arial`;\n    const metrics2 = context.measureText(this.text);\n    const text2Width = unscale(metrics2.width);\n    context.fillStyle = \"#000\";\n    context.fillText(\n      this.text,\n      scale(this.x + this.width / 2 - text2Width / 2),\n      scale(this.y + 70)\n    );\n  }\n}\n","export const isMobileMethod = {\n  Android: function () {\n    return navigator.userAgent.match(/Android/i);\n  },\n  BlackBerry: function () {\n    return navigator.userAgent.match(/BlackBerry/i);\n  },\n  iOS: function () {\n    return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n  },\n  Opera: function () {\n    return navigator.userAgent.match(/Opera Mini/i);\n  },\n  Windows: function () {\n    return (\n      navigator.userAgent.match(/IEMobile/i) ||\n      navigator.userAgent.match(/WPDesktop/i)\n    );\n  },\n  any: function () {\n    return (\n      isMobileMethod.Android() ||\n      isMobileMethod.BlackBerry() ||\n      isMobileMethod.iOS() ||\n      isMobileMethod.Opera() ||\n      isMobileMethod.Windows()\n    );\n  },\n};\n","import { normalizeVector } from \"../../utils/math\";\n\nexport const UP_DIRECTION = 1;\nexport const DOWN_DIRECTION = 2;\nexport const LEFT_DIRECTION = 4;\nexport const RIGHT_DIRECTION = 8;\n\nexport default class DirectionKeys {\n  constructor() {\n    /** @member {string[]} */\n    this.presedKeys = [];\n  }\n\n  clear() {\n    this.presedKeys = [];\n  }\n\n  /**\n   * @param key {string}\n   */\n  addKey(key) {\n    if (this.isDirectionKey(key) && !this.presedKeys.includes(key)) {\n      this.presedKeys.push(key);\n    }\n  }\n\n  /**\n   * @param key {string}\n   */\n  removeKey(key) {\n    this.presedKeys = this.presedKeys.filter((k) => k !== key);\n  }\n\n  /**\n   * @param key {string}\n   * @return {boolean}\n   */\n  isDirectionKey(key) {\n    return key === \"a\" || key === \"w\" || key === \"s\" || key === \"d\";\n  }\n\n  /**\n   * Current state of the keys\n   * @returns {boolean}\n   */\n  hasPressedKeys() {\n    return this.presedKeys.length > 0;\n  }\n\n  /**\n   * @returns {{x: number, y: number}}\n   */\n  directionVector() {\n    let directionVec = { x: 0, y: 0 };\n\n    /** @type {number} */\n    const direction = this.direction();\n\n    if ((direction & UP_DIRECTION) !== 0) {\n      directionVec.y = -1;\n    } else if ((direction & DOWN_DIRECTION) !== 0) {\n      directionVec.y = 1;\n    }\n\n    if ((direction & LEFT_DIRECTION) !== 0) {\n      directionVec.x = -1;\n    } else if ((direction & RIGHT_DIRECTION) !== 0) {\n      directionVec.x = 1;\n    }\n\n    // console.log(normalizeVector(directionVec));\n\n    return normalizeVector(directionVec);\n  }\n\n  direction() {\n    let dir = 0;\n\n    if (this.presedKeys.length > 0) {\n      dir = this.directionMap(this.presedKeys[0]);\n      let position = 1;\n      while (position < this.presedKeys.length) {\n        let n = this.consumeNextDirection(\n          UP_DIRECTION,\n          LEFT_DIRECTION,\n          RIGHT_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n        n |= this.consumeNextDirection(\n          DOWN_DIRECTION,\n          LEFT_DIRECTION,\n          RIGHT_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n        n |= this.consumeNextDirection(\n          LEFT_DIRECTION,\n          UP_DIRECTION,\n          DOWN_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n        n |= this.consumeNextDirection(\n          RIGHT_DIRECTION,\n          UP_DIRECTION,\n          DOWN_DIRECTION,\n          dir,\n          this.directionMap(this.presedKeys[position])\n        );\n\n        if (n) {\n          dir |= n;\n          break;\n        }\n\n        position++;\n      }\n    }\n\n    return dir;\n  }\n\n  consumeNextDirection(dir, acDir1, acDir2, currentDir, nextDir) {\n    if (dir === currentDir && (nextDir === acDir1 || nextDir === acDir2)) {\n      return nextDir;\n    }\n    return 0;\n  }\n\n  /**\n   * @param key {string}\n   * @returns {number}\n   */\n  directionMap(key) {\n    if (key === \"w\") {\n      return UP_DIRECTION;\n    }\n    if (key === \"s\") {\n      return DOWN_DIRECTION;\n    }\n    if (key === \"a\") {\n      return LEFT_DIRECTION;\n    }\n    if (key === \"d\") {\n      return RIGHT_DIRECTION;\n    }\n    return 0;\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport shapeTile1 from \"../shapes/tile1.json\";\nimport shapeTile2 from \"../shapes/tile2.json\";\nimport floorTile from \"../shapes/floor.tile.json\";\nimport { addVectors, randomNumber } from \"../utils/math\";\n\nexport const TILE_1X1 = 1;\nexport const TILE_2X2 = 2;\nexport const TILE_FLOOR = 3;\n\nconst colors = [\"#b85c54\", \"#c56057\", \"#be7063\", \"#c55f56\"];\n\nexport default class Tile extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param type {number}\n   * @param gridSize {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, type, gridSize) {\n    super(eventEmitter, x, y, type * gridSize, type * gridSize);\n\n    this.directionVector = this.getRotation();\n\n    this.gridSize = gridSize;\n    this.type = type;\n    this.tileShape = { ...this.getShape(type) };\n    this.positionCorrection = { x: 0, y: 0 };\n\n    this.setupTile();\n  }\n\n  getShape(type) {\n    switch (type) {\n    case TILE_1X1:\n      return shapeTile2;\n    case TILE_2X2:\n      return shapeTile1;\n    case TILE_FLOOR:\n    default:\n      return floorTile;\n    }\n  }\n\n  getRotation() {\n    const currentDirection = randomNumber(4);\n    switch (currentDirection) {\n    case 0:\n      return { x: 1, y: 0 };\n    case 1:\n      return { x: 0, y: 1 };\n    case 2:\n      return { x: -1, y: 0 };\n    case 3:\n      return { x: 0, y: -1 };\n    }\n  }\n\n  /**\n   * Setting up the tile shape. This method calculate the correction needed to center the tile in the grid\n   */\n  setupTile() {\n    let minPosition = { ...this.tileShape.shapes[0].points[0] };\n    let maxPosition = { ...this.tileShape.shapes[0].points[0] };\n    for (let s of this.tileShape.shapes) {\n      for (let p of s.points) {\n        if (p.x < minPosition.x) {\n          minPosition.x = p.x;\n        }\n        if (p.y < minPosition.y) {\n          minPosition.y = p.y;\n        }\n        if (p.x > maxPosition.x) {\n          maxPosition.x = p.x;\n        }\n        if (p.y > maxPosition.y) {\n          maxPosition.y = p.y;\n        }\n      }\n    }\n\n    const tileFactor = {\n      x: (this.gridSize * this.getGridSize()) / ((maxPosition.x - minPosition.x) * this.scaleShape),\n      y: (this.gridSize * this.getGridSize()) / ((maxPosition.y - minPosition.y) * this.scaleShape)\n    };\n\n    this.positionCorrection = {\n      x: (this.gridSize * this.getGridSize()) * 0.5,\n      y: (this.gridSize * this.getGridSize()) * 0.5\n    };\n\n    // make size correction base on the grid size\n    this.tileShape.shapes = this.tileShape.shapes.map(s => ({\n      ...s,\n      background: colors[randomNumber(colors.length)],\n      points: s.points.map(p => ({\n        x: p.x * tileFactor.x,\n        y: p.y * tileFactor.y\n      }))\n    }));\n  }\n\n  getGridSize() {\n    switch (this.type) {\n    case TILE_1X1:\n    case TILE_FLOOR:\n      return 1;\n    case TILE_2X2:\n      return 2;\n    }\n  }\n\n  /**\n   * Calculate the tile position correction\n   * @returns {{x: number, y: number}}\n   */\n  getPosition() {\n    return addVectors(super.getPosition(), this.positionCorrection);\n  }\n\n  currentShape() {\n    return this.tileShape;\n  }\n\n  animate() {\n    // toDo (gonzalezext)[19.04.24]: maybe we can animate the leafs\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport hole from \"../shapes/hole.json\";\n\nexport default class Hole extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param gridSize {number}\n   */\n  constructor(eventEmitter, x = 0, y = 0, gridSize) {\n    super(eventEmitter, x, y, gridSize, gridSize);\n\n    this.directionVector = { x: -1, y: 1 };\n    this.shape = { ...hole };\n    this.scaleShape = 1.7 * gridSize / 85;\n    this.enable = false;\n  }\n\n  render(context) {\n    // animate\n    this.animate();\n\n    super.render(context);\n  }\n\n  animate() {\n    super.animate();\n\n    // update hole color light\n    this.shape.shapes.filter(s => s.id === \"center\").forEach((shape) => {\n      const opacity = (Math.sin(new Date().getTime() / 200) + 1) * 0.2 + 0.6;\n      shape.background = this.getColorWithOpacity(this.getCenterColor(), opacity);\n    });\n  }\n\n  getCenterColor() {\n    return this.enable ? \"#2ea12e\" : \"#b30f0f\";\n  }\n\n  getPosition() {\n    return { x: this.x, y: this.y };\n  }\n\n  currentShape() {\n    return this.shape;\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport cameraShape from \"../shapes/camera.json\";\nimport { distanceNoSqrt, getVector, rotateVector, scale, square, vectorToAngle } from \"../utils/math\";\n\n/**\n * <b>viewDistance</b> <i>{number}</i> fraction of grid size<br>\n * <b>viewAngle</b> <i>{number}</i> fraction of PI<br>\n * <b>initialRotation</b> <i>{number}</i> fraction of PI<br>\n * <b>maxRotation</b> <i>{number}</i> fraction of PI<br>\n * <b>animationDelay</b> <i>{number}</i> in milliseconds<br>\n * <b>animateDistance</b> <i>{boolean}</i><br>\n *\n * @type {{animationDelay: number, initialRotation: number, maxRotation: number, viewAngle: number, viewDistance: number, animateDistance: boolean}}\n */\nconst defaultOptions = {\n  viewDistance: 2,\n  viewAngle: 3,\n  initialRotation: 1,\n  maxRotation: 2,\n  animationDelay: 0,\n  animateDistance: false,\n  speed: 1000\n};\n\nexport default class Camera extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param gridSize {number}\n   * @param options {{animationDelay: number, initialRotation: number, maxRotation: number, viewAngle: number, viewDistance: number, animateDistance: boolean}}\n   */\n  constructor(eventEmitter, x = 0, y = 0, gridSize, options) {\n    super(eventEmitter, x, y, gridSize, gridSize);\n\n    this.options = { ...defaultOptions, ...options };\n\n    this.baseDirection = rotateVector({ x: 0, y: 1 }, Math.PI * this.options.initialRotation);\n    this.baseDistance = this.options.viewDistance;\n    this.directionVector = { x: 0, y: 1 };\n    this.shape = { ...cameraShape };\n\n    const minPoint = { ...this.shape.shapes[0].points[0] };\n    const maxPoint = { ...this.shape.shapes[0].points[0] };\n    this.shape.shapes.forEach((shape) => shape.points.forEach((point) => {\n      minPoint.x = Math.min(minPoint.x, point.x);\n      minPoint.y = Math.min(minPoint.y, point.y);\n      maxPoint.x = Math.max(maxPoint.x, point.x);\n      maxPoint.y = Math.max(maxPoint.y, point.y);\n    }));\n\n    this.scaleShape = gridSize / Math.max(maxPoint.x - minPoint.x, maxPoint.y - minPoint.y);\n\n    this.options.maxRotation *= Math.PI;\n    this.sawPlayer = false;\n  }\n\n  animate() {\n    // animate camera rotation\n    const currentTime = (new Date().getTime() + this.options.animationDelay) / this.options.speed;\n    const factor = Math.sin(currentTime);\n    this.directionVector = rotateVector(this.baseDirection, factor * this.options.maxRotation * .5);\n\n    // animate camera view distance\n    if (this.options.animateDistance) {\n      const factorDistance = (Math.sin(currentTime) + 1) * 0.5;\n      this.options.viewDistance = factorDistance * this.baseDistance;\n    }\n  }\n\n  render(context) {\n    // render vision cone\n    context.beginPath();\n    const angle = this.currentViewAngle();\n    context.moveTo(scale(this.x), scale(this.y));\n    context.arc(\n      scale(this.x),\n      scale(this.y),\n      scale(this.width * this.options.viewDistance),\n      angle,\n      angle + Math.PI / this.options.viewAngle,\n      false);\n    context.fillStyle = this.getVisionColor();\n    context.fill();\n\n    // render camera\n    super.render(context);\n  }\n\n  getVisionColor() {\n    if (this.sawPlayer) {\n      return \"rgba(255, 0, 0, 0.1)\";\n    }\n    return \"rgba(0, 255, 0, 0.1)\";\n  }\n\n  seeAnyPoint(shapes) {\n    for (const s of shapes) {\n      for (const p of s.points) {\n        if (this.seePoint(p)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  seePoint(p) {\n    if (distanceNoSqrt(p, { x: this.x, y: this.y }) <= square(this.width * this.options.viewDistance)) {\n      const angle = vectorToAngle(getVector({ x: this.x, y: this.y }, p));\n      const halfAngle = Math.PI / (this.options.viewAngle * 2);\n      const cameraAngle = this.currentViewAngle() + halfAngle;\n\n      return Math.abs(angle - cameraAngle) < halfAngle || Math.abs(angle - cameraAngle + Math.PI * 2) < halfAngle;\n    }\n    return false;\n  }\n\n  currentViewAngle() {\n    return vectorToAngle({\n      x: -this.directionVector.x,\n      y: this.directionVector.y\n    }) - Math.PI / (this.options.viewAngle * 2);\n  }\n\n  getPosition() {\n    return { x: this.x, y: this.y };\n  }\n\n  currentShape() {\n    return this.shape;\n  }\n}\n","import BaseShape from \"./shared/base-shape\";\nimport shapePlant from \"../shapes/plant1.json\";\nimport { rotateVector } from \"../utils/math\";\n\nexport default class Plant extends BaseShape {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width\n   * @param height\n   */\n  constructor(eventEmitter, x = 0, y = 0, width = 0, height = 0) {\n    super(eventEmitter, x, y, width, height);\n\n    const randomAngle = Math.random() * Math.PI * 2;\n    this.directionVector = rotateVector({ x: 0, y: 1 }, randomAngle);\n  }\n\n  currentShape() {\n    return shapePlant;\n  }\n\n  animate() {\n    // toDo (gonzalezext)[19.04.24]: maybe we can animate the leafs\n  }\n}\n","import level1 from \"./initial-level.json\";\nimport level2 from \"./showing-multiples-switches.json\";\nimport level3 from \"./new-mecanic-with-vision-length.json\";\nimport level4 from \"./level.002.json\";\nimport level5 from \"./level.zigzag.json\";\nimport level6 from \"./level.test.json\";\nimport level7 from \"./level.003.json\";\nimport level8 from \"./level.004.json\";\n\nexport const index = [\n  level1,\n  level2,\n  level3,\n  level4,\n  level5,\n  level6,\n  level7,\n  level8\n];\n\nexport default index;\n","import BaseObject from \"./shared/base-object\";\nimport { randomNumber, scale } from \"../utils/math\";\nimport { SCREEN_HEIGHT, SCREEN_WIDTH, GRID_SIZE } from \"../utils/variables\";\nimport Tile, { TILE_1X1, TILE_2X2, TILE_FLOOR } from \"./tile\";\nimport { newBubble } from \"./bubble\";\nimport Hole from \"./hole\";\nimport Camera from \"./camera\";\nimport Plant from \"./plant\";\nimport Data from \"../utils/data\";\nimport levels from \"./levels\";\n\nconst ROW_TILE = 1;\nconst ROW_HOLE = 2;\nconst ROW_CAMERA = 4;\nconst ROW_PLAYER_START = 8;\nconst ROW_TREE = 16;\n\nconst MAX_NUMBER_OF_BUBBLES = 20;\n\nexport default class Level extends BaseObject {\n  /**\n   * @param eventEmitter {Observable}\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param background {string}\n   */\n  constructor(\n    eventEmitter,\n    x = 0,\n    y = 0,\n    width = 0,\n    height = 0,\n    background = \"\"\n  ) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = background;\n\n    /** @member {BaseObject[]} */\n    this.components = [];\n\n    this.tiles = [];\n    this.floor = [];\n    this.bubbles = [];\n    this.finishLevelItem = [];\n    this.cameras = [];\n\n    this.levels = levels;\n\n    this.playerInitialPosition = { x: 0, y: 0 };\n    this.pause = false;\n\n    this.gridSize = GRID_SIZE;\n\n    this.loadLastLevel();\n  }\n\n  hasMoreLevels() {\n    return this.levelIndex + 1 < this.levels.length;\n  }\n\n  loadLastLevel() {\n    this.levelIndex = Data.getInstance().getLastLevel();\n    this.loadLevel();\n  }\n\n  loadFirstLevel() {\n    this.levelIndex = 0;\n    this.loadLevel();\n  }\n\n  /**\n   * Load the next level if exists and return true, otherwise return false\n   * @returns {boolean}\n   */\n  loadNextLevel() {\n    this.levelIndex++;\n    if (this.levelIndex >= this.levels.length) {\n      return false;\n    }\n\n    this.loadLevel();\n    return true;\n  }\n\n  loadLevel() {\n    this.currentLevel = { ...this.levels[this.levelIndex] };\n\n    // clear previous level\n    // toDo (gonzalezext)[24.04.24]: destroy all components\n    this.components = [];\n    this.decorations = [];\n    this.tiles = [];\n    this.floor = [];\n    this.bubbles = [];\n    this.finishLevelItem = [];\n    this.cameras = [];\n\n    // load level background\n    this.backgroundColor = this.currentLevel.background;\n    this.gridSize = SCREEN_HEIGHT / this.currentLevel.map.length;\n\n    const map = this.currentLevel.map;\n    let cameraCount = 0;\n    const flags = new Array(map.length).fill(1).map(() => new Array(map[0].length).fill(true));\n    for (let row = 0; row < map.length; row++) {\n      for (let col = 0; col < map[row].length; col++) {\n        const tile = map[row][col];\n        if (flags[row][col] && ((tile & ROW_TILE) !== 0)) {\n\n          let type = TILE_1X1;\n\n          // check if 2x2 tile fit\n          if (row + 1 < map.length && col + 1 < map[row].length &&\n            (map[row][col + 1] & ROW_TILE) &&\n            (map[row + 1][col] & ROW_TILE) &&\n            (map[row + 1][col + 1] & ROW_TILE)\n          ) {\n            flags[row][col] = false;\n            flags[row][col + 1] = false;\n            flags[row + 1][col] = false;\n            flags[row + 1][col + 1] = false;\n\n            type = TILE_2X2;\n          }\n\n          const tile = new Tile(\n            this.eventEmitter,\n            col * this.gridSize,\n            row * this.gridSize,\n            type,\n            this.gridSize\n          );\n          this.tiles.push(tile);\n          this.components.push(tile);\n        } else if ((tile & ROW_TILE) === 0) {\n          const tile = new Tile(\n            this.eventEmitter,\n            col * this.gridSize,\n            row * this.gridSize,\n            TILE_FLOOR,\n            this.gridSize\n          );\n          this.floor.push(tile);\n        }\n\n        if (tile & ROW_CAMERA) {\n          const camera = new Camera(\n            this.eventEmitter,\n            col * this.gridSize + this.gridSize * .5,\n            row * this.gridSize + this.gridSize * .5,\n            this.gridSize,\n            this.currentLevel.cameras[cameraCount]\n          );\n          cameraCount++;\n          this.cameras.push(camera);\n        }\n\n        if (tile & ROW_HOLE) {\n          const hole = new Hole(\n            this.eventEmitter,\n            col * this.gridSize + this.gridSize * .5,\n            row * this.gridSize + this.gridSize * .5,\n            this.gridSize\n          );\n          this.finishLevelItem.push(hole);\n          this.components.push(hole);\n        }\n\n        if (tile & ROW_TREE) {\n          const plant = new Plant(\n            this.eventEmitter,\n            col * this.gridSize + this.gridSize * .5,\n            row * this.gridSize + this.gridSize * .5\n          );\n          this.decorations.push(plant);\n        }\n\n        if (tile & ROW_PLAYER_START) {\n          this.playerInitialPosition = {\n            x: col * this.gridSize + this.gridSize * .5,\n            y: row * this.gridSize + this.gridSize * .5\n          };\n        }\n      }\n    }\n\n    // save last level loaded\n    Data.getInstance().saveLastLevel(this.levelIndex);\n  }\n\n  pauseGame() {\n    this.pause = true;\n  }\n\n  unPauseGame() {\n    this.pause = false;\n  }\n\n  render(context) {\n    this.cleanScreen(context);\n\n    this.floor.forEach((component) => component.render(context));\n    this.renderWatterColor(context);\n\n    if (!this.pause) {\n      this.updateBubbles();\n    }\n\n    this.components.forEach((component) => component.render(context));\n    this.decorations.forEach((component) => component.render(context));\n    this.cameras.forEach((component) => component.render(context));\n  }\n\n  updateBubbles() {\n    const toRemove = new Set();\n    for (const b of this.bubbles) {\n      if (b.bubbleDead()) {\n        toRemove.add(b.id);\n      }\n    }\n\n    this.bubbles = this.bubbles.filter((b) => !toRemove.has(b.id));\n    this.components = this.components.filter((c) => !toRemove.has(c.id));\n\n    if (this.bubbles.length < MAX_NUMBER_OF_BUBBLES) {\n      if (randomNumber(2) === 1) {\n        const bubble = newBubble(this.eventEmitter);\n        this.components.unshift(bubble);\n        this.bubbles.push(bubble);\n      }\n    }\n  }\n\n  renderWatterColor(context) {\n    if (this.backgroundColor) {\n      context.beginPath();\n      context.fillStyle = this.backgroundColor;\n      context.rect(0, 0, scale(this.width), scale(this.height));\n      context.fill();\n    }\n  }\n\n  cleanScreen(context) {\n    context.clearRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\n  }\n}\n","import {\n  addVectors,\n  detectCollision,\n  detectCollisionWithCircle,\n  lerpVector,\n  multiplyVector,\n  normalizeVector\n} from \"../../utils/math\";\nimport DirectionKeys from \"./direction-keys\";\nimport { ANIMATE_WALK } from \"../../components/player\";\nimport Level from \"../../components/level\";\nimport Data from \"../../utils/data\";\n\nexport const GAME_RUNNING = 1;\nexport const GAME_STOP = 3;\nexport const GAME_OVER = 5;\nexport const GAME_PAUSE = 7;\n\nexport default class GameLogic {\n  /**\n   *\n   * @param level {Level}\n   * @param score {Score}\n   * @param deathsScore {Score}\n   */\n  constructor(level, score, deathsScore) {\n    /** @member {DirectionKeys} */\n    this.directionKeys = new DirectionKeys();\n\n    /** @member {Level} */\n    this.level = level;\n\n    /** @member {Score} */\n    this.score = score;\n\n    /** @member {Score} */\n    this.scoreDeaths = deathsScore;\n\n    this.player = {};\n    this.restartLevel();\n\n    this.sideAnimation = 0;\n\n    this.showSettings = () => {\n    };\n  }\n\n  destroy() {\n    this.player.component.destroy.emit();\n  }\n\n  /**\n   * run an iteration of the game logic\n   */\n  play() {\n    if (this.player.status === GAME_RUNNING) {\n      this.movePlayer();\n      this.animateComponents();\n      this.checkCollisionWithRelevantElements();\n    } else if (this.player.status === GAME_OVER) {\n      this.animateComponents();\n      if (new Date().getTime() - this.sideAnimation > 3000) {\n        this.restartLevel();\n      }\n    }\n  }\n\n  /**\n   * Move the player base on the direction keys\n   */\n  movePlayer() {\n    const VELOCITY = 10;\n\n    if (this.directionKeys.hasPressedKeys()) {\n      const rot = lerpVector(this.player.directionVector, this.directionKeys.directionVector(), 0.95);\n      this.player.directionVector = multiplyVector(normalizeVector(rot), VELOCITY);\n\n      // check collision\n      this.checkCollisionAndSlide();\n\n      this.player.component.animation |= ANIMATE_WALK;\n    } else {\n      this.player.component.animation = 0;\n    }\n\n    this.player.component.updateCoordinates(this.player.position);\n    this.player.component.updateDirectionVector({ ...this.player.directionVector, y: -this.player.directionVector.y });\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  checkCollisionAndSlide() {\n    const dirVectors = [\n      { ...this.player.directionVector },\n      { x: this.player.directionVector.x, y: 0 },\n      { x: 0, y: this.player.directionVector.y }\n    ];\n\n    const prevPosition = { ...this.player.position };\n    for (const vec of dirVectors) {\n      this.player.position = addVectors(vec, prevPosition);\n\n      const circle = this.player.component.getCollisionCircle();\n      circle.x = this.player.position.x;\n      circle.y = this.player.position.y;\n\n      if (!this.checkCollisionWithMapRecursive(circle)) {\n        return false;\n      }\n    }\n\n    this.player.position = prevPosition;\n    return true;\n  }\n\n  checkCollisionWithMapRecursive(circle) {\n    for (const component of this.level.tiles) {\n      const shapes = component.getProjection();\n      for (const shape of shapes) {\n        if (detectCollisionWithCircle(shape.points, circle)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  checkCollisionWithRelevantElements() {\n    const playerProjection = this.player.component.getProjection();\n    for (const camera of this.level.cameras) {\n      if (camera.seeAnyPoint(playerProjection)) {\n        camera.sawPlayer = true;\n        this.gameOver();\n        return true;\n      } else {\n        camera.sawPlayer = false;\n      }\n    }\n\n    // validate end of the level\n    let countEnables = 0;\n    for (const component of this.level.finishLevelItem) {\n      if (this.checkCollisionInProjections(playerProjection, component.getProjection(\"center\"))) {\n        component.enable = true;\n      }\n      if (component.enable) {\n        countEnables++;\n      }\n    }\n\n    if (countEnables === this.level.finishLevelItem.length) {\n      this.levelComplete();\n      return false;\n    }\n  }\n\n  /**\n   * @param shapes1 {{points: {x: number, y: number}[], background: string}[]}\n   * @param shapes2 {{points: {x: number, y: number}[], background: string}[]}\n   * @return {boolean}\n   */\n  checkCollisionInProjections(shapes1, shapes2) {\n    for (const s1 of shapes1) {\n      for (const s2 of shapes2) {\n        if (detectCollision(s1.points, s2.points)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  gameOver() {\n    // save deaths\n    this.player.deaths++;\n    Data.getInstance().saveDeaths(this.player.deaths);\n\n    this.player.status = GAME_OVER;\n    this.player.component.animation = 0;\n    this.player.component.brakeShapes();\n    this.sideAnimation = new Date().getTime();\n  }\n\n  canPauseGame() {\n    return true;\n  }\n\n  animateComponents() {\n    // animate player\n    this.player.component.animate();\n\n    // animate cameras\n    this.level.cameras.forEach((obj) => obj.animate());\n  }\n\n  pause() {\n    this.player.status = GAME_PAUSE;\n    this.level.pauseGame();\n  }\n\n  unpause() {\n    this.player.status = GAME_RUNNING;\n    this.level.unPauseGame();\n  }\n\n  levelComplete() {\n    if (this.level.hasMoreLevels()) {\n      this.level.loadNextLevel();\n      this.restartLevel();\n    } else {\n      Data.getInstance().saveBestDeaths(this.player.deaths);\n      Data.getInstance().saveDeaths(0);\n\n      this.showSettings(true);\n    }\n    this.updateDeathScore();\n  }\n\n  finishGame() {\n    this.loadFirstLevel();\n  }\n\n  loadFirstLevel() {\n    this.level.loadFirstLevel();\n    Data.getInstance().saveDeaths(0);\n    this.restartLevel();\n  }\n\n  restartLevel() {\n    this.player = {\n      ...this.player,\n      position: this.level.playerInitialPosition,\n      directionVector: { x: 0, y: 1 },\n      expectedRotation: 0,\n      velocity: 0,\n      deaths: Data.getInstance().loadDeaths(),\n      minVelocity: 10,\n      acceleration: 20,\n      deceleration: -1.5,\n      status: GAME_RUNNING\n    };\n    if (this.player.component) {\n      this.player.component.brakedShape = null;\n      this.player.component.width = this.level.gridSize;\n      this.player.component.calculateScale();\n    }\n    this.score.score = this.level.levelIndex + 1;\n\n    this.updateDeathScore();\n  }\n\n  updateDeathScore() {\n    this.scoreDeaths.score = this.player.deaths;\n  }\n}\n","import BaseObject from \"./shared/base-object\";\nimport { SCREEN_HEIGHT, SCREEN_WIDTH } from \"../utils/variables\";\nimport { scale, unscale } from \"../utils/math\";\nimport Camera from \"./camera\";\nimport Hole from \"./hole\";\nimport Button from \"./button\";\n\nexport default class Help extends BaseObject {\n  /**\n   * @param x {number}\n   * @param y {number}\n   * @param width {number}\n   * @param height {number}\n   * @param eventEmitter {Observable}\n   */\n  constructor(eventEmitter, x, y, width, height) {\n    super(eventEmitter, x, y, width, height);\n    this.backgroundColor = \"#fff\";\n\n    this.padding = 10;\n\n    this.keysSize = 40;\n    this.keysTextSize = 10;\n    this.keysInfoTextSize = 15;\n    this.keyboardPosition = {\n      x: 30,\n      y: this.height * 0.5\n    };\n\n    this.enemySize = 60;\n    this.enemyPosition = {\n      x: x + this.width * 0.5,\n      y: y + this.height * 0.5\n    };\n    const enemy = new Camera(\n      this.eventEmitter,\n      this.enemyPosition.x,\n      this.enemyPosition.y,\n      this.enemySize,\n      {\n        viewDistance: 2,\n        viewAngle: 2,\n        initialRotation: 2,\n        maxRotation: 0.5\n      }\n    );\n\n    this.winPosition = {\n      x: x + width - this.padding - 110,\n      y: y + height * 0.5\n    };\n    const winGame = new Hole(\n      this.eventEmitter,\n      this.winPosition.x,\n      this.winPosition.y,\n      70\n    );\n\n    const closeHelpButtonSize = 40;\n    this.closeHelpButton = new Button(\n      this.eventEmitter,\n      x + width - this.padding - closeHelpButtonSize,\n      y + this.padding,\n      closeHelpButtonSize,\n      closeHelpButtonSize,\n      \"x\"\n    );\n    this.closeHelpButton.backgroundColor = \"#ff000000\";\n    this.closeHelpButton.textColor = \"#000\";\n    this.closeHelpButton.textSize = 20;\n\n    this.components = [enemy, winGame, this.closeHelpButton];\n  }\n\n  destroyComponents() {\n    this.components.forEach((component) => component.destroy.emit());\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    this.renderDialogBox(context);\n\n    this.renderKeyboard(context, this.keyboardPosition.x, this.keyboardPosition.y);\n\n    this.renderEnemyInfo(context, this.enemyPosition.x, this.enemyPosition.y);\n    this.renderWinGameInfo(context, this.winPosition.x, this.winPosition.y);\n\n    this.components.forEach((component) => component.animate && component.animate());\n    this.components.forEach((component) => component.render(context));\n  }\n\n  renderWinGameInfo(context, x, y) {\n    this.renderText(\n      context,\n      x - 90,\n      y - 97,\n      \"Reach all the switches to\\nwin the level\",\n      this.keysInfoTextSize,\n      \"#000\"\n    );\n  }\n\n  renderEnemyInfo(context, x, y) {\n    this.renderText(\n      context,\n      x - 105,\n      y - 97,\n      \"Avoid being seen by the camera\\nor you will be killed\",\n      this.keysInfoTextSize,\n      \"#000\"\n    );\n  }\n\n  renderKeyboard(context, x, y) {\n    const spacing = 10;\n    this.renderKeyboardKey(context, x, y + spacing, \"A\");\n    this.renderKeyboardKey(context, x + this.keysSize + this.padding, y + spacing, \"S\");\n    this.renderKeyboardKey(context, x + this.keysSize * 2 + this.padding * 2, y + spacing, \"D\");\n    this.renderKeyboardKey(context, x + this.keysSize + this.padding, y - this.keysSize - this.padding + spacing, \"W\");\n    this.renderKeyboardInfo(context, x - 10, y - this.keysSize * 2 - this.padding * 3);\n  }\n\n  renderKeyboardInfo(context, x, y) {\n    const xPosition = this.x + this.padding;\n    const yPosition = this.y + this.padding;\n\n    this.renderText(\n      context,\n      xPosition + x,\n      yPosition + y,\n      \"Use the keyboard to move\\nthe player around the map\\nand avoid the cameras\",\n      this.keysInfoTextSize,\n      \"#000\"\n    );\n  }\n\n  /**\n   * @param context\n   * @param x {number}\n   * @param y {number}\n   * @param key {string}\n   */\n  renderKeyboardKey(context, x, y, key) {\n    const xPosition = this.x + this.padding;\n    const yPosition = this.y + this.padding;\n\n    context.beginPath();\n    context.rect(\n      scale(xPosition + x),\n      scale(yPosition + y),\n      scale(this.keysSize),\n      scale(this.keysSize)\n    );\n    context.fillStyle = \"#000\";\n    context.fill();\n\n    context.beginPath();\n    context.font = `${scale(this.keysTextSize)}px Arial`;\n    const metrics = context.measureText(key);\n    const textWidth = unscale(metrics.width);\n    const textHeight = unscale(\n      metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent\n    );\n    context.fillStyle = \"#fff\";\n    context.fillText(\n      key,\n      scale(xPosition + x + this.keysSize / 2 - textWidth / 2),\n      scale(yPosition + y + this.keysSize / 2 + textHeight / 2)\n    );\n  }\n\n  renderDialogBox(context) {\n    context.beginPath();\n    context.rect(0, 0, scale(SCREEN_WIDTH), scale(SCREEN_HEIGHT));\n    context.fillStyle = \"rgba(0,0,0,0.82)\";\n    context.fill();\n\n    context.beginPath();\n    context.rect(\n      scale(this.x),\n      scale(this.y),\n      scale(this.width),\n      scale(this.height)\n    );\n    context.fillStyle = this.backgroundColor;\n    context.fill();\n  }\n\n  /**\n   * @param context\n   * @param x {number}\n   * @param y {number}\n   * @param text {string}\n   * @param size {number}\n   * @param color {string}\n   */\n  renderText(context, x, y, text, size, color) {\n    let previousTextHeight = 0;\n    const textList = text.split(\"\\n\");\n\n    for (let t of textList) {\n      context.beginPath();\n      context.font = `${scale(size)}px Arial`;\n      const metrics = context.measureText(size);\n      // const textWidth = unscale(metrics.width);\n      const textHeight = unscale(metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      context.fillStyle = color;\n      context.fillText(t, scale(x), scale(y + previousTextHeight));\n      previousTextHeight += textHeight + 10;\n    }\n  }\n}\n","import Scene from \"./shared/scene\";\nimport {\n  EVENT_CLICK,\n  EVENT_KEYDOWN,\n  EVENT_KEYUP,\n  EVENT_MOUSEUP,\n  SCREEN_HEIGHT,\n  SCREEN_WIDTH\n} from \"../utils/variables\";\nimport Player from \"../components/player\";\nimport Score from \"../components/score\";\nimport Settings from \"../components/settings\";\nimport Button from \"../components/button\";\nimport { isMobileMethod } from \"../utils/mobile-device\";\nimport GameLogic from \"./shared/game.logic\";\nimport Level from \"../components/level\";\nimport Help from \"../components/help\";\nimport Data from \"../utils/data\";\n\nexport const isMobile = isMobileMethod.any();\n\nconst SCORE_MARGIN = 10;\n\nexport default class ScenePlay extends Scene {\n  /**\n   * @param navigator {Navigator}\n   * @param eventEmitter {Observable}\n   */\n  constructor(navigator, eventEmitter) {\n    super(navigator, eventEmitter);\n\n    this.createSettingsButton();\n    this.createHelpButton();\n\n    this.listenerEvent(EVENT_KEYDOWN, this.keyDown.bind(this));\n    this.listenerEvent(EVENT_KEYUP, this.keyUp.bind(this));\n\n    this.initGame();\n  }\n\n  createSettingsButton() {\n    this.buttonPause = new Button(\n      this.eventEmitter,\n      SCORE_MARGIN,\n      SCORE_MARGIN,\n      100,\n      30,\n      \"SETTINGS\"\n    );\n    this.buttonPause.backgroundColor = \"#00000000\";\n    this.buttonPause.textSize = 20;\n    this.buttonPause.listenerEvent(EVENT_CLICK, () => {\n      if (this.currentGame.canPauseGame()) {\n        this.currentGame.pause();\n        this.showSettings(false);\n      }\n    });\n  }\n\n  createHelpButton() {\n    this.buttonHelp = new Button(\n      this.eventEmitter,\n      SCORE_MARGIN + this.buttonPause.width,\n      SCORE_MARGIN,\n      100,\n      30,\n      \"HELP\"\n    );\n    this.buttonHelp.backgroundColor = \"#00000000\";\n    this.buttonHelp.textSize = 20;\n    this.buttonHelp.listenerEvent(EVENT_CLICK, () => {\n      this.showHelp();\n    });\n  }\n\n  initGame() {\n    this.isModalShow = false;\n\n    // game logic\n    if (this.currentGame) {\n      this.currentGame.destroy();\n    }\n\n    // create level\n    this.level = new Level(\n      this.eventEmitter,\n      0,\n      0,\n      SCREEN_WIDTH,\n      SCREEN_HEIGHT,\n      \"#000\"\n    );\n\n    // score component\n    const score = new Score(\n      this.eventEmitter,\n      SCREEN_WIDTH - SCORE_MARGIN,\n      SCORE_MARGIN,\n      \"LEVEL\"\n    );\n    score.backgroundColor = \"#00000000\";\n\n    // deaths indicator\n    const deathsScore = new Score(\n      this.eventEmitter,\n      SCREEN_WIDTH * 0.5 + 40,\n      SCORE_MARGIN,\n      \"DEATHS\"\n    );\n    deathsScore.backgroundColor = \"#00000000\";\n\n    // player component\n    this.player = new Player(\n      this.eventEmitter,\n      this.level.playerInitialPosition.x,\n      this.level.playerInitialPosition.y,\n      this.level.gridSize\n    );\n    this.currentGame = new GameLogic(this.level, score, deathsScore);\n    this.currentGame.player.component = this.player;\n    this.currentGame.showSettings = this.showSettings.bind(this);\n\n    // add components to the element array\n    this.elements = [this.player, this.buttonPause, this.buttonHelp, score, deathsScore];\n\n    // elements of the game\n    this.playableElements = [this.player];\n\n    // show help if first time\n    if (Data.getInstance().isFirstTime()) {\n      this.showHelp();\n    }\n  }\n\n  /**\n   * @param context {CanvasRenderingContext2D}\n   */\n  render(context) {\n    // execute game logic\n    this.currentGame.play();\n\n    // render background\n    this.cleanCanvas(context);\n\n    this.renderOrRemovePlayableElements(context);\n\n    // render scene elements\n    for (const element of this.elements) {\n      element.render(context);\n    }\n  }\n\n  keyDown(event) {\n    this.currentGame.directionKeys.addKey(event.key);\n  }\n\n  keyUp(event) {\n    this.currentGame.directionKeys.removeKey(event.key);\n  }\n\n  showSettings(restartGame = true) {\n    if (!this.isModalShow) {\n      this.isModalShow = true;\n      const modalWidth = 300;\n      const modalHeight = 300;\n      const modal = new Settings(\n        this.eventEmitter,\n        SCREEN_WIDTH / 2 - modalWidth / 2,\n        SCREEN_HEIGHT / 2 - modalHeight / 2,\n        modalWidth,\n        modalHeight\n      );\n\n      if (restartGame) {\n        modal.hidePlayButton();\n      }\n\n      modal.buttonPlay.listenerEvent(EVENT_MOUSEUP, () => {\n        this.hideModal(modal);\n        if (restartGame) {\n          this.currentGame.finishGame();\n        }\n      });\n      modal.buttonRestart.listenerEvent(EVENT_CLICK, () => {\n        this.hideModal(modal);\n        this.currentGame.loadFirstLevel();\n      });\n      this.elements.push(modal);\n    }\n  }\n\n  showHelp() {\n    if (!this.isModalShow) {\n      this.isModalShow = true;\n      const modalWidth = SCREEN_WIDTH * 0.8;\n      const modalHeight = SCREEN_HEIGHT * 0.5;\n      const modal = new Help(\n        this.eventEmitter,\n        SCREEN_WIDTH / 2 - modalWidth / 2,\n        SCREEN_HEIGHT / 2 - modalHeight / 2,\n        modalWidth,\n        modalHeight\n      );\n\n      modal.closeHelpButton.listenerEvent(EVENT_MOUSEUP, () => {\n        this.hideModal(modal);\n      });\n\n      this.elements.push(modal);\n    }\n  }\n\n  hideModal(modal) {\n    modal.destroyComponents();\n    modal.destroy.emit();\n    this.currentGame.unpause();\n    this.elements.pop();\n    this.isModalShow = false;\n  }\n\n  renderOrRemovePlayableElements(context) {\n    const toRemove = new Set();\n    for (const element of this.playableElements) {\n      if (this.isElementVisible(element)) {\n        element.render(context);\n      } else {\n        toRemove.add(element.id);\n      }\n    }\n    this.playableElements = this.playableElements.filter(\n      (ele) => !toRemove.has(ele.id)\n    );\n  }\n\n  isElementVisible(element) {\n    return element.y - element.height * 2 < SCREEN_HEIGHT;\n  }\n\n  cleanCanvas(context) {\n    this.level.render(context);\n  }\n}\n","import {\n  EVENT_RESIZE,\n  SCENE_GAME,\n  SCREEN_RATIO,\n  SCREEN_WIDTH,\n} from \"./utils/variables\";\nimport ScenePlay from \"./scenes/play.scene\";\nimport Observable from \"./utils/observable\";\n\nexport default class Navigator {\n  /**\n   * @param scene {number}\n   * @param eventEmitter {Observable}\n   */\n  constructor(scene, eventEmitter) {\n    this.gameWidth = SCREEN_WIDTH;\n    this.gameHeght = SCREEN_WIDTH * SCREEN_RATIO;\n    this.sceneClasses = new Map();\n    this.sceneClasses.set(SCENE_GAME, ScenePlay);\n    this.scenesInstances = new Map();\n    /** @member {Scene} */\n    this.currentScene = null;\n    eventEmitter.on((data) => {\n      this.currentScene.eventEmitter.emit(data);\n      if (data.event === EVENT_RESIZE && data.dimension) {\n        this.gameWidth = data.dimension.w;\n        this.gameHeght = data.dimension.h;\n        this.updateGameDimensions();\n      }\n    });\n\n    // initial navigation\n    this.navigate(scene);\n  }\n\n  /**\n   * Navigate to a different scene\n   * @param scene {number}\n   */\n  navigate(scene) {\n    if (this.scenesInstances.has(scene)) {\n      this.currentScene = this.scenesInstances.get(scene);\n    } else if (this.sceneClasses.has(scene)) {\n      this.scenesInstances.set(\n        scene,\n        new (this.sceneClasses.get(scene))(this, new Observable()),\n      );\n      this.currentScene = this.scenesInstances.get(scene);\n    }\n    this.updateGameDimensions();\n  }\n\n  updateGameDimensions() {\n    if (this.currentScene) {\n      this.currentScene.width = this.gameWidth;\n      this.currentScene.height = this.gameHeght;\n    }\n  }\n}\n","import Navigator from \"./navigator\";\nimport Observable from \"./utils/observable\";\nimport { unscale } from \"./utils/math\";\nimport {\n  SCREEN_WIDTH,\n  SCREEN_RATIO,\n  SCENE_GAME,\n  STOP,\n  EVENT_CLICK,\n  EVENT_MOUSEDOWN,\n  EVENT_MOUSEUP,\n  EVENT_MOUSEOUT,\n  EVENT_MOUSELEAVE,\n  EVENT_MOUSEMOVE,\n  EVENT_TOUCHDOWN,\n  EVENT_TOUCHUP,\n  EVENT_TOUCHCANCEL,\n  EVENT_TOUCHMOVE,\n  EVENT_RESIZE,\n  RUNNING,\n  FPS,\n  EVENT_KEYDOWN,\n  EVENT_KEYPRESS,\n  EVENT_KEYUP,\n} from \"./utils/variables\";\n\nconst intervalPerSecond = 1000 / FPS;\n\nlet gameInstance = null;\n\nexport default class Game {\n  constructor() {\n    window.addEventListener(\"resize\", this.resizeScreen.bind(this));\n\n    /** @member {HTMLCanvasElement} */\n    this.canvas = document.getElementById(\"game\");\n\n    this.registerEvents();\n\n    /** @member {Observable} */\n    this.eventEmitter = new Observable();\n\n    /** @member {CanvasRenderingContext2D} */\n    this.context = this.canvas.getContext(\"2d\");\n\n    /** @member {Navigator} */\n    this.navigatorRoot = new Navigator(SCENE_GAME, this.eventEmitter);\n\n    this.loopStatus = STOP;\n    this.lastTime = 0;\n    this.width = this.canvas.width;\n    this.height = this.canvas.height;\n\n    this.resizeScreen();\n  }\n\n  registerEvents() {\n    // keyboard events\n    this.registerKeyboardEvent(\"keydown\", EVENT_KEYDOWN);\n    this.registerKeyboardEvent(\"keyup\", EVENT_KEYUP);\n    this.registerKeyboardEvent(\"keypress\", EVENT_KEYPRESS);\n\n    // mouse events\n    this.registerClickEvent(\"click\", EVENT_CLICK);\n    this.registerClickEvent(\"mousedown\", EVENT_MOUSEDOWN);\n    this.registerClickEvent(\"mouseup\", EVENT_MOUSEUP);\n    this.registerClickEvent(\"mouseout\", EVENT_MOUSEOUT);\n    this.registerClickEvent(\"mouseleave\", EVENT_MOUSELEAVE);\n    this.registerClickEvent(\"mousemove\", EVENT_MOUSEMOVE);\n\n    // touch events\n    this.registerTouchEvent(\"touchstart\", EVENT_TOUCHDOWN, false);\n    this.registerTouchEvent(\"touchend\", EVENT_TOUCHUP, false);\n    this.registerTouchEvent(\"touchcancel\", EVENT_TOUCHCANCEL, false);\n    this.registerTouchEvent(\"touchmove\", EVENT_TOUCHMOVE, false);\n  }\n\n  /**\n   * @param type {string}\n   * @param eventType {string}\n   * @param option {boolean}\n   */\n  registerClickEvent(type, eventType, option = undefined) {\n    this.canvas.addEventListener(\n      type,\n      (e) => this.clickEvent(e, eventType),\n      option,\n    );\n  }\n\n  /**\n   * @param type {string}\n   * @param eventType {string}\n   * @param option {boolean}\n   */\n  registerTouchEvent(type, eventType, option = undefined) {\n    this.canvas.addEventListener(\n      type,\n      (e) => this.touchEvent(e, eventType),\n      option,\n    );\n  }\n\n  /**\n   * @param type {string}\n   * @param eventType {string}\n   * @param option {boolean}\n   */\n  registerKeyboardEvent(type, eventType, option = undefined) {\n    document.addEventListener(\n      type,\n      (e) => this.keyboardEvent(e, eventType),\n      option,\n    );\n  }\n\n  resizeScreen() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    let calculatedWidth = Math.min(SCREEN_WIDTH, width);\n    let calculatedHeight = calculatedWidth * SCREEN_RATIO;\n\n    if (calculatedHeight > height) {\n      calculatedHeight = height;\n      calculatedWidth = height / SCREEN_RATIO;\n    }\n\n    this.canvas.width = calculatedWidth;\n    this.canvas.height = calculatedHeight;\n\n    window.currentWidth = calculatedWidth;\n    this.eventEmitter.emit({\n      event: EVENT_RESIZE,\n      dimension: { w: calculatedWidth, h: calculatedHeight },\n    });\n  }\n\n  /**\n   * @param event {TouchEvent}\n   * @param type {string}\n   */\n  touchEvent(event, type) {\n    this.emitPositionEvent(\n      {\n        x: event?.targetTouches[0]?.pageX,\n        y: event?.targetTouches[0]?.pageY,\n      },\n      type,\n    );\n  }\n\n  /**\n   * @param event {MouseEvent}\n   * @param type {string}\n   */\n  clickEvent(event, type) {\n    this.emitPositionEvent({ x: event?.clientX, y: event?.clientY }, type);\n  }\n\n  /**\n   * @param event {KeyboardEvent}\n   * @param type {string}\n   */\n  keyboardEvent(event, type) {\n    this.eventEmitter.emit({\n      event: type,\n      key: event.key,\n    });\n  }\n\n  /**\n   * @param position {{x: number, y: number}}\n   * @param type {string}\n   */\n  emitPositionEvent(position, type) {\n    const rect = this.canvas.getBoundingClientRect();\n    this.eventEmitter.emit({\n      event: type,\n      position: {\n        x: unscale(position.x - rect.left),\n        y: unscale(position.y - rect.top),\n      },\n    });\n  }\n\n  /**\n   * Get game instance\n   * @returns {Game}\n   */\n  static getInstance() {\n    if (!gameInstance) {\n      gameInstance = new Game();\n    }\n    return gameInstance;\n  }\n\n  /**\n   * Initialize game\n   */\n  init() {\n    this.loopStatus = RUNNING;\n    requestAnimationFrame(this.loop.bind(this));\n  }\n\n  /**\n   * Application loop\n   * @param currentTime {number}\n   */\n  loop(currentTime) {\n    if (this.loopStatus === RUNNING) {\n      if (\n        this.loopStatus === RUNNING &&\n        intervalPerSecond <= currentTime - this.lastTime\n      ) {\n        this.lastTime = currentTime;\n\n        this.navigatorRoot.currentScene.render(this.context);\n      }\n\n      requestAnimationFrame(this.loop.bind(this));\n    }\n    // the else here will end the loop\n  }\n}\n","import Game from \"./game/game\";\n\nGame.getInstance().init();\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","SCREEN_RATIO","SCREEN_WIDTH","SCREEN_HEIGHT","EVENT_CLICK","EVENT_MOUSEOUT","EVENT_KEYDOWN","EVENT_KEYUP","Observable","constructor","subscriptions","open","emit","data","i","length","callFunction","func","pipe","functions","lastSteam","stream","on","unsub","filter","f","push","BaseObject","eventEmitter","x","y","width","height","destroy","lastMousePosition","isMouseHover","undefined","id","value","_eventEmitter","stopper","streamCancel","cancelFunction","observable","takeUntil","render","context","listenerEvent","event","callback","validateMouseEventPropagation","position","validateKeyboardEventPropagation","isPositionInside","Scene","navigator","super","backgroundColor","elements","cleanCanvas","element","rect","fillStyle","fill","validateEventPropagation","validation","vectorToAngle","vector","Math","atan2","addVectors","v1","v2","getPointByVectorRotation","pivot","phi","result","rotateVector","cos","sin","square","scale","currentWidth","unscale","randomNumber","limit","start","floor","random","detectCollision","shape1","shape2","axis","extractAxis","axi","p1","shapeProjection","p2","min","max","detectCollisionWithCircle","shape","circle","minPoint","maxPoint","p","middlePoint","distanceToCircle","abs","r","normalizeVector","v","sqrt","projection","u","BaseShape","rotation","directionVector","scaleShape","brakedShape","updateCoordinates","shapes","getProjection","points","beginPath","moveTo","lineTo","closePath","background","Boolean","stroke","strokeStyle","lineWidth","strokeWidth","animate","moveBrakedPiece","brakeShapes","currentShape","brakeShape","cp","shapeCenter","factor","pow","coverBox","newShapes","count","ceil","pos","Array","map","reduceOpacity","color","extract","alpha","getOpacity","toString","substr","getColorWithOpacity","alphaFactor","parseInt","shapeId","PI","getPosition","projectedShape","newBubble","w","h","Bubble","lifeTime","calculateScale","showAndHideFunction","getTimeFactor","growBubbleFunction","ellipse","time","log","bubbleDead","Player","gridSize","Date","getTime","animation","animationIsOn","bubblesIntervalToShow","bubblesCount","bubbles","bubble","forEach","getCollisionCircle","updateDirectionVector","animateWalk","footMovement","stepAnimationFunction","handMovement","handAnimationFunction","point","startsWith","footMov","endsWith","dir","MAX_LIFE_TIME","Score","text","score","textSize","textColor","lastTime","font","metrics","measureText","textWidth","textHeight","actualBoundingBoxAscent","actualBoundingBoxDescent","padding","fillText","Button","textColorHover","document","body","style","cursor","visible","hide","APPLICATION_PREFIX","LAST_LEVEL_KEY","CURRENT_DEATHS_KEY","FIRST_TIME_KEY","BEST_DEATHS_KEY","Data","getInstance","saveBestDeaths","deaths","loadBestDeaths","saveData","getData","isFirstTime","firstTime","saveDeaths","loadDeaths","saveLastLevel","level","getLastLevel","key","localStorage","setItem","getItem","Settings","text2Size","bestScore","buttonHeight","button2Width","components","createPlayButton","createCredits","createRestartButton","createShareButton","buttonMargin","hidePlayButton","buttonPlay","destroyComponents","component","buttonRestart","buttonCredits","focus","buttonShareRecord","message","url","encodeURIComponent","renderDialogBox","renderTitle","renderScore","text2Width","isMobileMethod","Android","userAgent","match","BlackBerry","iOS","Opera","Windows","any","DirectionKeys","presedKeys","clear","addKey","isDirectionKey","includes","removeKey","k","hasPressedKeys","directionVec","direction","directionMap","n","consumeNextDirection","acDir1","acDir2","currentDir","nextDir","colors","Tile","type","getRotation","tileShape","getShape","positionCorrection","setupTile","minPosition","maxPosition","s","tileFactor","getGridSize","Hole","enable","opacity","getCenterColor","defaultOptions","viewDistance","viewAngle","initialRotation","maxRotation","animationDelay","animateDistance","speed","Camera","options","baseDirection","baseDistance","sawPlayer","currentTime","factorDistance","angle","currentViewAngle","arc","getVisionColor","seeAnyPoint","seePoint","getVector","halfAngle","cameraAngle","Plant","randomAngle","Level","tiles","finishLevelItem","cameras","levels","playerInitialPosition","pause","loadLastLevel","hasMoreLevels","levelIndex","loadLevel","loadFirstLevel","loadNextLevel","currentLevel","decorations","cameraCount","flags","row","col","tile","camera","hole","plant","pauseGame","unPauseGame","cleanScreen","renderWatterColor","updateBubbles","toRemove","Set","b","add","has","c","unshift","clearRect","GameLogic","deathsScore","directionKeys","scoreDeaths","player","restartLevel","sideAnimation","showSettings","play","status","movePlayer","animateComponents","checkCollisionWithRelevantElements","rot","t","scalar","checkCollisionAndSlide","dirVectors","prevPosition","vec","checkCollisionWithMapRecursive","playerProjection","gameOver","countEnables","checkCollisionInProjections","levelComplete","shapes1","shapes2","s1","s2","canPauseGame","obj","unpause","updateDeathScore","finishGame","expectedRotation","velocity","minVelocity","acceleration","deceleration","Help","keysSize","keysTextSize","keysInfoTextSize","keyboardPosition","enemySize","enemyPosition","enemy","winPosition","winGame","closeHelpButton","renderKeyboard","renderEnemyInfo","renderWinGameInfo","renderText","renderKeyboardKey","renderKeyboardInfo","xPosition","yPosition","size","previousTextHeight","textList","split","SCORE_MARGIN","ScenePlay","createSettingsButton","createHelpButton","keyDown","bind","keyUp","initGame","buttonPause","currentGame","buttonHelp","showHelp","isModalShow","playableElements","renderOrRemovePlayableElements","restartGame","modalWidth","modalHeight","modal","hideModal","pop","isElementVisible","ele","Navigator","scene","gameWidth","gameHeght","sceneClasses","Map","set","scenesInstances","currentScene","dimension","updateGameDimensions","navigate","get","intervalPerSecond","gameInstance","Game","addEventListener","resizeScreen","canvas","getElementById","registerEvents","getContext","navigatorRoot","loopStatus","registerKeyboardEvent","registerClickEvent","registerTouchEvent","eventType","option","clickEvent","touchEvent","keyboardEvent","innerWidth","innerHeight","calculatedWidth","calculatedHeight","emitPositionEvent","targetTouches","pageX","pageY","clientX","clientY","getBoundingClientRect","left","top","init","requestAnimationFrame","loop"],"sourceRoot":""}